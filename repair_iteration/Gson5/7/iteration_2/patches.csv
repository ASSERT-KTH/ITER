bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  offset  =  pos.offset;  parseEndOffset  =  pos.offset;  [CE]  cannot  find  symbol  offset  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset;  parseEndOffset  =  pos.offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset;  parseEndOffset  =  pos.offset;	  offset    =    parseEndOffset;    parseEndOffset    =    parseStartOffset;    	non-compiled	[CE]  cannot  find  symbol  offset	38	None	replace
2	[BUG]  [BUGGY]  offset  =  pos;  parseEndOffset  =  pos;  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos;  parseEndOffset  =  pos;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos;  parseEndOffset  =  pos;	  offset    =    parseEndOffset;    parseEndOffset    =    parseStartOffset;    	non-compiled	[CE]  incompatible  types	38	None	replace
3	[BUG]  [BUGGY]  offset  =  pos.getOffset();  parseEndOffset  =  pos.getOffset();  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  parseEndOffset  =  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  parseEndOffset  =  pos.getOffset();	  offset    =    parseEndOffset;    parseEndOffset    =    parseStartOffset;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
4	[BUG]  [BUGGY]  offset  =  pos.length;  parseEndOffset  =  pos.length;  [CE]  cannot  find  symbol  length  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.length;  parseEndOffset  =  pos.length;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.length;  parseEndOffset  =  pos.length;	  offset    =    parseEndOffset;    parseEndOffset    =    parseStartOffset;    	non-compiled	[CE]  cannot  find  symbol  length	38	None	replace
5	[BUG]  [BUGGY]  offset  =  pos.length();  parseEndOffset  =  pos.length;  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.length();  parseEndOffset  =  pos.length;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.length();  parseEndOffset  =  pos.length;	  offset    =    parseEndOffset;    parseEndOffset    =    parseStartOffset;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
6	[BUG]  [BUGGY]  offset  =  pos.getOffset();  parseEndOffset  =  pos.getStartOffset();  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  parseEndOffset  =  pos.getStartOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  parseEndOffset  =  pos.getStartOffset();	  offset    =    parseEndOffset;    parseEndOffset    =    parseStartOffset;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
7	[BUG]  [BUGGY]  offset  =  DateTimeUtils.getDate(date);  offset  =  offset;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.getDate(date);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.getDate(date);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getDate(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	137	None	replace
8	[BUG]  [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getDate(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	137	None	replace
9	[BUG]  [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getDate(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	137	None	replace
10	[BUG]  [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getDate(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getDate(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	137	None	replace
11	[BUG]  [BUGGY]  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getDate(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	137	None	replace
12	[BUG]  [BUGGY]  timezoneIndicator  =  DateTimeUtils.getDate(date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  timezoneIndicator  =  DateTimeUtils.getDate(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	timezoneIndicator  =  DateTimeUtils.getDate(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getDate(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	137	None	replace
13	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  Offset  endOffset  =  endOffset  -  1;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  Offset  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1;  Offset  endOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
14	[BUG]  [BUGGY]  offset  =  startOffset  -  1;  Offset  endOffset  =  endOffset  -  1;  [CE]  cannot  find  symbol  startOffset  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  -  1;  Offset  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  -  1;  Offset  endOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  startOffset	101	None	replace
15	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  Offset  endOffset  =  endOffset  +  1;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  Offset  endOffset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  Offset  endOffset  =  endOffset  +  1;	  offset    =    endOffset    -    1;    Offset    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
16	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  Offset  endOffset  =  endOffset  -  1;  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  Offset  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1;  Offset  endOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
17	[BUG]  [BUGGY]  offset  =  endOffset;  Offset  endOffset  =  endOffset  -  1;  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  Offset  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset;  Offset  endOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
18	[BUG]  [BUGGY]  offset  =  length  -  1;  Offset  endOffset  =  endOffset  -  1;  [CE]  cannot  find  symbol  length  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  length  -  1;  Offset  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  length  -  1;  Offset  endOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	101	None	replace
19	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  int  endOffset  =  endOffset  +  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  int  endOffset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  int  endOffset  =  endOffset  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	51	None	replace
20	[BUG]  [BUGGY]  offset  =  offset  +  1;  int  endOffset  =  endOffset  +  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  int  endOffset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;  int  endOffset  =  endOffset  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	51	None	replace
21	[BUG]  [BUGGY]  int  endOffset  =  parseEndOffset  +  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  parseEndOffset  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	51	None	replace
22	[BUG]  [BUGGY]  offset  =  pos.offset  +  1;  int  endOffset  =  pos.offset  +  1;  [CE]  cannot  find  symbol  offset  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  +  1;  int  endOffset  =  pos.offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  +  1;  int  endOffset  =  pos.offset  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  cannot  find  symbol  offset	51	None	replace
23	[BUG]  [BUGGY]  offset  =  pos.length();  int  endOffset  =  endOffset  +  1;  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.length();  int  endOffset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.length();  int  endOffset  =  endOffset  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
24	[BUG]  [BUGGY]  offset  =  pos.offset  +  1;  int  endOffset  =  pos.endOffset  +  1;  [CE]  cannot  find  symbol  offset  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  +  1;  int  endOffset  =  pos.endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  +  1;  int  endOffset  =  pos.endOffset  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  cannot  find  symbol  offset	51	None	replace
25	[BUG]  [BUGGY]  int  endOffset  =  endOffset  +  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  endOffset  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	51	None	replace
26	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  offset  =  Math.max(parseEndOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    Math.max(parseEndOffset,    parseEndOffset);    offset  =  Math.max(parseEndOffset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
27	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  offset  =  Math.max(parseEndOffset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  offset  =  Math.max(parseEndOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(parseEndOffset,    parseEndOffset);    offset  =  Math.max(parseEndOffset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
28	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  offset  =  Math.max(parseStartOffset,  parseEndOffset);  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  offset  =  Math.max(parseStartOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(parseEndOffset,    parseEndOffset);    offset  =  Math.max(parseStartOffset,  parseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	109	None	add
29	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  pos  =  Math.max(parseEndOffset,  parseEndOffset);  [CE]  incompatible  types  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  pos  =  Math.max(parseEndOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(parseEndOffset,    parseEndOffset);    pos  =  Math.max(parseEndOffset,  parseEndOffset);	  	non-compiled	[CE]  incompatible  types	109	None	add
30	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  Offset  =  Math.max(parseEndOffset,  parseEndOffset);  [CE]  cannot  find  symbol  Offset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  Offset  =  Math.max(parseEndOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(parseEndOffset,    parseEndOffset);    Offset  =  Math.max(parseEndOffset,  parseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  Offset	109	None	add
31	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  offset  =  Math.min(parseEndOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    Math.max(parseEndOffset,    parseEndOffset);    offset  =  Math.min(parseEndOffset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
32	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  offset  =  Math.min(parseEndOffset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  offset  =  Math.min(parseEndOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(parseEndOffset,    parseEndOffset);    offset  =  Math.min(parseEndOffset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
33	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  offset  =  Math.max(parseEndOffset,  parseStartOffset);  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  offset  =  Math.max(parseEndOffset,  parseStartOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(parseEndOffset,    parseEndOffset);    offset  =  Math.max(parseEndOffset,  parseStartOffset);	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	109	None	add
34	[BUG]  [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	132	None	replace
35	[BUG]  [BUGGY]  offset  =  DateTimeUtils.getTimeZone(date);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.getTimeZone(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	132	None	replace
36	[BUG]  [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	132	None	replace
37	[BUG]  [BUGGY]  offset  =  parseEndOffset;  pos  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  pos  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  pos  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	132	None	replace
38	[BUG]  [BUGGY]  offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    offset    =    offset;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	132	None	replace
39	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
40	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  parseEndOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  parseEndOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  parseEndOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
41	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  1;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  1;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  1;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
42	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  parseStartOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  parseStartOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  parseStartOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
43	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  parseEndOffset;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  parseEndOffset;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  parseEndOffset;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
44	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
45	[BUG]  [BUGGY]  offset  =  pos.intValue;  [CE]  cannot  find  symbol  intValue  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.intValue;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.intValue;	  offset    =    pos.offset;    	non-compiled	[CE]  cannot  find  symbol  intValue	40	None	replace
46	[BUG]  [BUGGY]  offset  =  pos.second;  [CE]  cannot  find  symbol  second  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.second;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.second;	  offset    =    pos.offset;    	non-compiled	[CE]  cannot  find  symbol  second	40	None	replace
47	[BUG]  [BUGGY]  offset  =  pos.insets;  [CE]  cannot  find  symbol  insets  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.insets;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.insets;	  offset    =    pos.offset;    	non-compiled	[CE]  cannot  find  symbol  insets	40	None	replace
48	[BUG]  [BUGGY]  offset  =  parseEndOffset.length;  [CE]  int  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset.length;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.length;	  offset    =    pos.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	39	None	replace
49	[BUG]  [BUGGY]  offset  =  pos.length  +  1;  [CE]  cannot  find  symbol  length  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.length  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.length  +  1;	  offset    =    pos.length;    	non-compiled	[CE]  cannot  find  symbol  length	39	None	replace
50	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  offset;  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
51	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  offset;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  offset;  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
52	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
53	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
54	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
55	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
56	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
57	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
58	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	80	None	add
59	[BUG]  [BUGGY]  offset  =  parseEndOffset(parseEndOffset);  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset(parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset(parseEndOffset);	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
60	[BUG]  [BUGGY]  offset  =  parseEndOffset();  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset();	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
61	[BUG]  [BUGGY]  offset  =  parseStartOffset(date);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset(date);	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
62	[BUG]  [BUGGY]  offset  =  parseEndOffset(date);  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset(date);	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
63	[BUG]  [BUGGY]  offset  =  this.timezoneOffset.getOffset();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.timezoneOffset.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.timezoneOffset.getOffset();	  offset    =    parseStartOffset.getOffset();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	28	None	replace
64	[BUG]  [BUGGY]  offset  =  timezoneOffset.getOffset();  [CE]  cannot  find  symbol  timezoneOffset  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  timezoneOffset.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneOffset.getOffset();	  offset    =    parseStartOffset.getOffset();    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	28	None	replace
65	[BUG]  [BUGGY]  offset  =  milliseconds.getOffset();  [CE]  int  cannot  be  dereferenced  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds.getOffset();	  offset    =    parseStartOffset.getOffset();    	non-compiled	[CE]  int  cannot  be  dereferenced	28	None	replace
66	[BUG]  [BUGGY]  offset  =  this.date.getOffset();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.date.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.date.getOffset();	  offset    =    parseStartOffset.getOffset();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	28	None	replace
67	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  offset  =  endOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    -    offset;    offset  =  endOffset  -  offset;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
68	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  offset  =  endOffset  -  offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  offset  =  endOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    offset;    offset  =  endOffset  -  offset;	  	compilable	  [FE]  JsonSyntaxException  	95	1	add
69	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  Offset  endOffset  =  endOffset  -  offset;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  Offset  endOffset  =  endOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    offset;    Offset  endOffset  =  endOffset  -  offset;	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
70	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  int  endOffset  =  endOffset  -  offset;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  int  endOffset  =  endOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    offset;    int  endOffset  =  endOffset  -  offset;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
71	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  Offset  =  endOffset  -  offset;  [CE]  cannot  find  symbol  Offset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  Offset  =  endOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    offset;    Offset  =  endOffset  -  offset;	  	non-compiled	[CE]  cannot  find  symbol  Offset	95	None	add
72	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  pos  =  endOffset  -  offset;  [CE]  incompatible  types  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  pos  =  endOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    offset;    pos  =  endOffset  -  offset;	  	non-compiled	[CE]  incompatible  types	95	None	add
73	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  offset  =  endOffset  -  off;  [CE]  cannot  find  symbol  off  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  offset  =  endOffset  -  off;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    offset;    offset  =  endOffset  -  off;	  	non-compiled	[CE]  cannot  find  symbol  off	95	None	add
74	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  offset  =  startOffset  -  offset;  [CE]  cannot  find  symbol  startOffset  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  offset  =  startOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  offset;  offset  =  startOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    offset    =    parseStartOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  startOffset	61	None	replace
75	[BUG]  [BUGGY]  offset  =  pos.length  -  offset;  [CE]  cannot  find  symbol  length  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.length  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.length  -  offset;	  offset    =    parseEndOffset    -    offset;    offset    =    parseStartOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  length	61	None	replace
76	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  offset  =  parseStartOffset  -  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  offset  =  parseStartOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  offset;  offset  =  parseStartOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    offset    =    parseStartOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	61	None	replace
77	[BUG]  [BUGGY]  parseEndOffset  -  1;  offset  =  endOffset  -  1;  [CE]  not  a  statement  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -  1;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  -  1;  offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    offset    =    endOffset    -    1;    	non-compiled	[CE]  not  a  statement	155	None	replace
78	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	parseEndOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	155	1	replace
79	[BUG]  [BUGGY]  parseEndOffset  =  endOffset  -  1;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	155	1	replace
80	[BUG]  [BUGGY]  offset  =  pos.getOffset(parseEndOffset)-  1;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset(parseEndOffset)-  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset(parseEndOffset)-  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
81	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        parseEndOffset        -        offset;        offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;	  	compilable	  [FE]  JsonSyntaxException  	59	1	add
82	[BUG]  [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset        -        offset;        offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;	  	compilable	  [FE]  JsonSyntaxException  	59	1	add
83	[BUG]  [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseStartOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseStartOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset        -        offset;        offset    =    parseEndOffset    -    offset;    offset  =  parseStartOffset  -  offset;  offset  =  parseEndOffset  -  offset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	59	None	add
84	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset;  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        parseEndOffset        -        offset;        offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset;  offset  =  parseEndOffset  -  offset;	  	compilable	  [FE]  JsonSyntaxException  	59	1	add
85	[BUG]  [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset;  offset  =  parseEndOffset  -  offset;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset;  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset        -        offset;        offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset;  offset  =  parseEndOffset  -  offset;	  	compilable	  [FE]  JsonSyntaxException  	59	1	add
86	[BUG]  [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  byseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  byseEndOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  byseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset        -        offset;        offset    =    parseEndOffset    -    offset;    offset  =  byseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	59	None	add
87	[BUG]  [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  off;  [CE]  cannot  find  symbol  off  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  off;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset        -        offset;        offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  off;	  	non-compiled	[CE]  cannot  find  symbol  off	59	None	add
88	[BUG]  [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  offset  =  parseStartOffset  -  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  offset  =  parseStartOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset        -        offset;        offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  offset  =  parseStartOffset  -  offset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	59	None	add
89	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  offset  =(parseEndOffset  -  offset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    offset)%    2;    offset  =(parseEndOffset  -  offset)%  2;	  	compilable	  [FE]  JsonSyntaxException  	157	1	add
90	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  offset  =(parseEndOffset  -  offset)%  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  offset  =(parseEndOffset  -  offset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    2;    offset  =(parseEndOffset  -  offset)%  2;	  	compilable	  [FE]  JsonSyntaxException  	157	1	add
91	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  int  offset  =(parseEndOffset  -  offset)%  2;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  int  offset  =(parseEndOffset  -  offset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    2;    int  offset  =(parseEndOffset  -  offset)%  2;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	157	None	add
92	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  offset  =(parseEndOffset  -  offset)%)  2;  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  offset  =(parseEndOffset  -  offset)%)  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    2;    offset  =(parseEndOffset  -  offset)%)  2;	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
93	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  offset  =(parseStartOffset  -  offset)%  2;  [CE]  cannot  find  symbol  parseStartOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  offset  =(parseStartOffset  -  offset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    2;    offset  =(parseStartOffset  -  offset)%  2;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	157	None	add
94	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  pos  =(parseEndOffset  -  offset)%  2;  [CE]  incompatible  types  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  pos  =(parseEndOffset  -  offset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    2;    pos  =(parseEndOffset  -  offset)%  2;	  	non-compiled	[CE]  incompatible  types	157	None	add
95	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  Offset  =(parseEndOffset  -  offset)%  2;  [CE]  cannot  find  symbol  Offset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  Offset  =(parseEndOffset  -  offset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    2;    Offset  =(parseEndOffset  -  offset)%  2;	  	non-compiled	[CE]  cannot  find  symbol  Offset	157	None	add
96	[BUG]  [BUGGY]  parseEndOffset();  offset  =  0;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset();  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset();  offset  =  0;	  offset    =    0;    parseEndOffset();    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
97	[BUG]  [BUGGY]  int  offset  =  0;  parseEndOffset();  offset  =  0;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  0;  parseEndOffset();  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  0;  parseEndOffset();  offset  =  0;	  offset    =    0;    parseEndOffset();    offset    =    0;    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	180	None	replace
98	[BUG]  [BUGGY]  offset  =  parseEndOffset();  offset  =  0;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset();  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset();  offset  =  0;	  offset    =    0;    parseEndOffset();    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
99	[BUG]  [BUGGY]  pos  =  parseEndOffset();  offset  =  0;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  pos  =  parseEndOffset();  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	pos  =  parseEndOffset();  offset  =  0;	  offset    =    0;    parseEndOffset();    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
100	[BUG]  [BUGGY]  int  offset  =  parseEndOffset();  offset  =  0;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  parseEndOffset();  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  parseEndOffset();  offset  =  0;	  offset    =    0;    parseEndOffset();    offset    =    0;    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	180	None	replace
101	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
102	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
103	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	175	None	replace
104	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
105	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
106	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
107	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
108	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
109	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
110	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  startOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  startOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >=  startOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	175	None	replace
111	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
112	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
113	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
114	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
115	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
116	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
117	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
118	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
119	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset!=  len)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  len  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset!=  len)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset!=  len)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  len	75	None	replace
120	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
121	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
122	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
123	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
124	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(milliseconds,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(milliseconds,  parseEndOffset);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	110	1	replace
125	[BUG]  [BUGGY]  offset  =  Math.max(milliseconds,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(milliseconds,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(milliseconds,  parseEndOffset);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	110	1	replace
126	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  pos);  [CE]  no  suitable  method  found  for  max(int,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(parseEndOffset,  pos);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	non-compiled	[CE]  no  suitable  method  found  for  max(int,ParsePosition)	110	None	replace
127	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(parseEndOffset,  milliseconds);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	110	1	replace
128	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  milliseconds);  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(parseEndOffset,  milliseconds);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	110	1	replace
129	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(offset,  parseEndOffset);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	110	1	replace
130	[BUG]  [BUGGY]  offset  =  Math.max(offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(offset,  parseEndOffset);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	110	1	replace
131	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.min(parseEndOffset,  parseEndOffset);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	110	1	replace
132	[BUG]  [BUGGY]  offset  =  Math.min(parseEndOffset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.min(parseEndOffset,  parseEndOffset);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	110	1	replace
133	[BUG]  [BUGGY]  offset  =  Math.max(parseStartOffset,  parseEndOffset);  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseStartOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(parseStartOffset,  parseEndOffset);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	110	None	replace
134	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  parseEndOffset)-  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.min(parseEndOffset,  parseEndOffset)-  1;	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	110	1	replace
135	[BUG]  [BUGGY]  offset  =  Math.min(parseEndOffset,  parseEndOffset)-  1;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  parseEndOffset)-  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.min(parseEndOffset,  parseEndOffset)-  1;	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	110	1	replace
136	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  milliseconds  +  1;	  offset    =    startOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
137	[BUG]  [BUGGY]  offset  =  milliseconds  +  1;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  +  1;	  offset    =    startOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
138	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  date.length()  +  1;	  offset    =    startOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
139	[BUG]  [BUGGY]  offset  =  date.length()  +  1;  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.length()  +  1;	  offset    =    startOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	24	1	replace
140	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	70	1	add
141	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	70	1	add
142	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	70	1	add
143	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	70	1	add
144	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	70	None	add
145	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  >=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  >=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  >=  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
146	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
147	[BUG]  [BUGGY]  if(date.charAt(i)!=  '-')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.charAt(i)!=  '-')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.charAt(i)!=  '-')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
148	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
149	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  parseEndOffset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset    -    milliseconds;    offset  =  parseEndOffset  -  milliseconds;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
150	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  parseEndOffset  -  milliseconds;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  parseEndOffset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    milliseconds;    offset  =  parseEndOffset  -  milliseconds;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
151	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  parseStartOffset  -  milliseconds;  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  parseStartOffset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    milliseconds;    offset  =  parseStartOffset  -  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	93	None	add
152	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  Offset  offset  =  parseEndOffset  -  milliseconds;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  Offset  offset  =  parseEndOffset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    milliseconds;    Offset  offset  =  parseEndOffset  -  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol	93	None	add
153	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  Offset  =  parseEndOffset  -  milliseconds;  [CE]  cannot  find  symbol  Offset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  Offset  =  parseEndOffset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    milliseconds;    Offset  =  parseEndOffset  -  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol  Offset	93	None	add
154	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  byseEndOffset  -  milliseconds;  [CE]  cannot  find  symbol  byseEndOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  byseEndOffset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    milliseconds;    offset  =  byseEndOffset  -  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	93	None	add
155	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  milliseconds  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset    -    milliseconds;    offset  =  milliseconds  -  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
156	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  milliseconds  -  parseEndOffset;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  milliseconds  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    milliseconds;    offset  =  milliseconds  -  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
157	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
158	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
159	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
160	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
161	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
162	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
163	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
164	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
165	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ".);  }  [CE]  <identifier>  expected  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ".);  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ".);  }	  	non-compiled	[CE]  <identifier>  expected	219	None	add
166	[BUG]  [BUGGY]  offset  =  DateTimeUtils.currentTimeMillis();  [CE]  cannot  find  symbol  DateTimeUtils  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.currentTimeMillis();	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	133	None	replace
167	[BUG]  [BUGGY]  offset  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	133	None	replace
168	[BUG]  [BUGGY]  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	133	None	replace
169	[BUG]  [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	133	None	replace
170	[BUG]  [BUGGY]  offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    offset    =    offset;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	133	None	replace
171	[BUG]  [BUGGY]  offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    offset    =    offset;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	133	None	replace
172	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
173	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
174	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
175	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
176	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
177	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
178	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
179	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
180	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
181	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
182	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
183	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
184	[BUG]  [BUGGY]  offset  =  parseEndOffset.length()  -  1;  [CE]  int  cannot  be  dereferenced  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset.length()  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.length()  -  1;	  offset    =    parseEndOffset.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	84	None	replace
185	[BUG]  [BUGGY]  offset  =  parseEndOffset.length()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset.length()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.length()  +  1;	  offset    =    parseEndOffset.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	84	None	replace
186	[BUG]  [BUGGY]  offset  =  this.parseEndOffset.length();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.parseEndOffset.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.parseEndOffset.length();	  offset    =    parseEndOffset.length();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	84	None	replace
187	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset;  parseEndOffset  =  parseEndOffset;	  offset    =    parseEndOffset;    parseEndOffset    =    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	34	1	replace
188	[BUG]  [BUGGY]  offset  =  offset;  parseEndOffset  =  parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset;  parseEndOffset  =  parseEndOffset;	  offset    =    parseEndOffset;    parseEndOffset    =    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	34	1	replace
189	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset  +  1;	  offset    =    parseEndOffset;    parseEndOffset    =    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	34	1	replace
190	[BUG]  [BUGGY]  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset  +  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset  +  1;	  offset    =    parseEndOffset;    parseEndOffset    =    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	34	1	replace
191	[BUG]  [BUGGY]  offset  =  parseOffset;  parseEndOffset  =  parseOffset;  [CE]  cannot  find  symbol  parseOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseOffset;  parseEndOffset  =  parseOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseOffset;  parseEndOffset  =  parseOffset;	  offset    =    parseEndOffset;    parseEndOffset    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol  parseOffset	34	None	replace
192	[BUG]  [BUGGY]  offset  =  pos.getOffset();  parseEndOffset  =  pos.getLength();  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  parseEndOffset  =  pos.getLength();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  parseEndOffset  =  pos.getLength();	  offset    =    parseEndOffset;    parseEndOffset    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
193	[BUG]  [BUGGY]  if(date.charAt(i)!=  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.charAt(i)!=  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.charAt(i)!=  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	147	None	replace
194	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
195	[BUG]  [BUGGY]  if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	147	None	replace
196	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
197	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    parseEndOffset  =  0;  offset  =  0;  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        parseEndOffset    =    0;    offset  =  0;  parseEndOffset  =  0;	  	compilable	  [FE]  JsonSyntaxException  	184	1	add
198	[BUG]  [BUGGY]  offset    =    0;    parseEndOffset  =  0;  offset  =  0;  parseEndOffset  =  0;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    parseEndOffset  =  0;  offset  =  0;  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        parseEndOffset    =    0;    offset  =  0;  parseEndOffset  =  0;	  	compilable	  [FE]  JsonSyntaxException  	184	1	add
199	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    parseEndOffset  =  0;  parseEndOffset  =  0;  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        parseEndOffset    =    0;    parseEndOffset  =  0;  parseEndOffset  =  0;	  	compilable	  [FE]  JsonSyntaxException  	184	1	add
200	[BUG]  [BUGGY]  offset    =    0;    parseEndOffset  =  0;  parseEndOffset  =  0;  parseEndOffset  =  0;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    parseEndOffset  =  0;  parseEndOffset  =  0;  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        parseEndOffset    =    0;    parseEndOffset  =  0;  parseEndOffset  =  0;	  	compilable	  [FE]  JsonSyntaxException  	184	1	add
201	[BUG]  [BUGGY]  offset    =    0;    parseEndOffset  =  0;  int  offset  =  0;  parseEndOffset  =  0;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    parseEndOffset  =  0;  int  offset  =  0;  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        parseEndOffset    =    0;    int  offset  =  0;  parseEndOffset  =  0;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	184	None	add
202	[BUG]  [BUGGY]  offset    =    0;    parseEndOffset  =  0;  offset  =  0;  byseEndOffset  =  0;  [CE]  cannot  find  symbol  byseEndOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    parseEndOffset  =  0;  offset  =  0;  byseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        parseEndOffset    =    0;    offset  =  0;  byseEndOffset  =  0;	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	184	None	add
203	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    parseEndOffset  =  0;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        parseEndOffset    =    0;    if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	184	1	add
204	[BUG]  [BUGGY]  offset    =    0;    parseEndOffset  =  0;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    parseEndOffset  =  0;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        parseEndOffset    =    0;    if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	184	1	add
205	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    parseEndOffset  =  0;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        parseEndOffset    =    0;    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	184	1	add
206	[BUG]  [BUGGY]  offset    =    0;    parseEndOffset  =  0;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    parseEndOffset  =  0;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        parseEndOffset    =    0;    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	184	1	add
207	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	71	1	replace
208	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	71	1	replace
209	[BUG]  [BUGGY]  offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	71	None	replace
210	[BUG]  [BUGGY]  int  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	71	None	replace
211	[BUG]  [BUGGY]  offset  =  parseStartOffset();  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset();  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset();  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
212	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	71	1	replace
213	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	71	1	replace
214	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  length  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	71	None	replace
215	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  len)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  len  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  len)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  len)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  len	71	None	replace
216	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	compilable	  [FE]  JsonSyntaxException  	196	1	replace
217	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	compilable	  [FE]  JsonSyntaxException  	196	1	replace
218	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	compilable	  [FE]  JsonSyntaxException  	196	1	replace
219	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	compilable	  [FE]  JsonSyntaxException  	196	1	replace
220	[BUG]  [BUGGY]  offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	196	None	replace
221	[BUG]  [BUGGY]  offset  =  0;  parseEndOffset(date);  offset  =  0;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseEndOffset(date);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseEndOffset(date);  offset  =  0;	  offset    =    0;    parseEndOffset(    offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
222	[BUG]  [BUGGY]  offset  =  0;  parseEndOffset(date.length());  offset  =  0;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseEndOffset(date.length());  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseEndOffset(date.length());  offset  =  0;	  offset    =    0;    parseEndOffset(    offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
223	[BUG]  [BUGGY]  parseEndOffset(offset);  offset  =  0;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset(offset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset(offset);  offset  =  0;	  offset    =    0;    parseEndOffset(    offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
224	[BUG]  [BUGGY]  offset  =  0;  parseEndOffset(timezoneOffset);  offset  =  0;  [CE]  cannot  find  symbol  timezoneOffset  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseEndOffset(timezoneOffset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseEndOffset(timezoneOffset);  offset  =  0;	  offset    =    0;    parseEndOffset(    offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	182	None	replace
225	[BUG]  [BUGGY]  offset  =  0;  parseEndOffset(pos);  offset  =  0;  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseEndOffset(pos);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseEndOffset(pos);  offset  =  0;	  offset    =    0;    parseEndOffset(    offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
226	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  offset  =(parseEndOffset  +  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    +    milliseconds)/    10;    offset  =(parseEndOffset  +  milliseconds)/  10;	  	compilable	  [FE]  JsonSyntaxException  	120	1	add
227	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  offset  =(parseEndOffset  +  milliseconds)/  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  offset  =(parseEndOffset  +  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    +    milliseconds)/    10;    offset  =(parseEndOffset  +  milliseconds)/  10;	  	compilable	  [FE]  JsonSyntaxException  	120	1	add
228	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  parseEndOffset  =(parseEndOffset  +  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    +    milliseconds)/    10;    parseEndOffset  =(parseEndOffset  +  milliseconds)/  10;	  	compilable	  [FE]  JsonSyntaxException  	120	1	add
229	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  parseEndOffset  =(parseEndOffset  +  milliseconds)/  10;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  parseEndOffset  =(parseEndOffset  +  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    +    milliseconds)/    10;    parseEndOffset  =(parseEndOffset  +  milliseconds)/  10;	  	compilable	  [FE]  JsonSyntaxException  	120	1	add
230	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  int  offset  =(parseEndOffset  +  milliseconds)/  10;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  int  offset  =(parseEndOffset  +  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    +    milliseconds)/    10;    int  offset  =(parseEndOffset  +  milliseconds)/  10;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	120	None	add
231	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  pos  =(parseEndOffset  +  milliseconds)/  10;  [CE]  incompatible  types  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  pos  =(parseEndOffset  +  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    +    milliseconds)/    10;    pos  =(parseEndOffset  +  milliseconds)/  10;	  	non-compiled	[CE]  incompatible  types	120	None	add
232	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  offset  =(parseStartOffset  +  milliseconds)/  10;  [CE]  cannot  find  symbol  parseStartOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  offset  =(parseStartOffset  +  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    +    milliseconds)/    10;    offset  =(parseStartOffset  +  milliseconds)/  10;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	120	None	add
233	[BUG]  [BUGGY]  offset  =  pos.getOffset()?  parseEndOffset  :  pos.getOffset();  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()?  parseEndOffset  :  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()?  parseEndOffset  :  pos.getOffset();	  offset    =    parseEndOffset?    pos.getOffset()    :    pos.getOffset();    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
234	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getLength();  [CE]  incompatible  types  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getLength();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  pos.getLength();	  offset    =    parseEndOffset?    pos.getOffset()    :    pos.getOffset();    	non-compiled	[CE]  incompatible  types	27	None	replace
235	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getLowerCase();  [CE]  incompatible  types  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getLowerCase();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  pos.getLowerCase();	  offset    =    parseEndOffset?    pos.getOffset()    :    pos.getOffset();    	non-compiled	[CE]  incompatible  types	27	None	replace
236	[BUG]  [BUGGY]  offset  =  pos.getOffset()  :  parseEndOffset;  [CE]  ';'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()  :  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  :  parseEndOffset;	  offset    =    parseEndOffset?    pos.getOffset()    :    pos.getOffset();    	non-compiled	[CE]  ';'  expected	27	None	replace
237	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getStartOffset();  [CE]  incompatible  types  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getStartOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  pos.getStartOffset();	  offset    =    parseEndOffset?    pos.getOffset()    :    pos.getOffset();    	non-compiled	[CE]  incompatible  types	27	None	replace
238	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  milliseconds.getOffset();  [CE]  incompatible  types  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  milliseconds.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  milliseconds.getOffset();	  offset    =    parseEndOffset?    pos.getOffset()    :    pos.getOffset();    	non-compiled	[CE]  incompatible  types	27	None	replace
239	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	53	1	replace
240	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	53	1	replace
241	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	53	None	replace
242	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
243	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  length  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
244	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  startOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	53	None	replace
245	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	53	None	replace
246	[BUG]  [BUGGY]  offset  =  Math.max(milliseconds,  parseEndOffset));  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(milliseconds,  parseEndOffset));  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(milliseconds,  parseEndOffset));	  offset    =    Math.max(parseEndOffset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	113	None	replace
247	[BUG]  [BUGGY]  offset  =  Math.min(parseEndOffset,  parseEndOffset));  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  parseEndOffset));  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.min(parseEndOffset,  parseEndOffset));	  offset    =    Math.max(parseEndOffset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	113	None	replace
248	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  milliseconds));  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  milliseconds));  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(parseEndOffset,  milliseconds));	  offset    =    Math.max(parseEndOffset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	113	None	replace
249	[BUG]  [BUGGY]  offset  =  Math.min(parseEndOffset,  milliseconds));  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  milliseconds));  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.min(parseEndOffset,  milliseconds));	  offset    =    Math.max(parseEndOffset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	113	None	replace
250	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  pos));  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  pos));  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(parseEndOffset,  pos));	  offset    =    Math.max(parseEndOffset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	113	None	replace
251	[BUG]  [BUGGY]  offset  =  Math.max(milliseconds,  pos));  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(milliseconds,  pos));  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(milliseconds,  pos));	  offset    =    Math.max(parseEndOffset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	113	None	replace
252	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  parseEndOffset  +  1);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.min(parseEndOffset,  parseEndOffset  +  1);	  offset    =    Math.max(parseEndOffset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	113	1	replace
253	[BUG]  [BUGGY]  offset  =  Math.min(parseEndOffset,  parseEndOffset  +  1);  [FE]  JsonSyntaxException  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  parseEndOffset  +  1);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.min(parseEndOffset,  parseEndOffset  +  1);	  offset    =    Math.max(parseEndOffset,    parseEndOffset));    	compilable	  [FE]  JsonSyntaxException  	113	1	replace
254	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  -  milliseconds;	  offset    =    offset    -    parseStartOffset;    	compilable	  [FE]  JsonSyntaxException  	166	1	replace
255	[BUG]  [BUGGY]  offset  =  offset  -  milliseconds;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  milliseconds;	  offset    =    offset    -    parseStartOffset;    	compilable	  [FE]  JsonSyntaxException  	166	1	replace
256	[BUG]  [BUGGY]  offset  =  offset  -  pos;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  pos;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  pos;	  offset    =    offset    -    parseStartOffset;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	166	None	replace
257	[BUG]  [BUGGY]  offset  =  offset  -  dateOffset;  [CE]  cannot  find  symbol  dateOffset  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  dateOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  dateOffset;	  offset    =    offset    -    parseStartOffset;    	non-compiled	[CE]  cannot  find  symbol  dateOffset	166	None	replace
258	[BUG]  [BUGGY]  offset  =  offset  -  this.timezoneOffset;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  this.timezoneOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  this.timezoneOffset;	  offset    =    offset    -    parseStartOffset;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	166	None	replace
259	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  day;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  -  day;	  offset    =    offset    -    parseStartOffset;    	compilable	  [FE]  JsonSyntaxException  	166	1	replace
260	[BUG]  [BUGGY]  offset  =  offset  -  day;  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  day;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  day;	  offset    =    offset    -    parseStartOffset;    	compilable	  [FE]  JsonSyntaxException  	166	1	replace
261	[BUG]  [BUGGY]  offset  =  offset  -  date;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  date;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  date;	  offset    =    offset    -    parseStartOffset;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	166	None	replace
262	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	189	1	add
263	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	189	1	add
264	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	189	1	add
265	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	189	1	add
266	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	189	None	add
267	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	195	1	add
268	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	195	1	add
269	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	195	1	add
270	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	195	1	add
271	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	195	None	add
272	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }	  	compilable	  [FE]  JsonSyntaxException  	195	1	add
273	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }	  	compilable	  [FE]  JsonSyntaxException  	195	1	add
274	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  /  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  milliseconds  /  1;	  offset    =    milliseconds    -    1;    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
275	[BUG]  [BUGGY]  offset  =  milliseconds  /  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  /  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  /  1;	  offset    =    milliseconds    -    1;    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
276	[BUG]  [BUGGY]  offset  =  milliseconds  -  1L;  [CE]  possible  loss  of  precision  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  -  1L;	  offset    =    milliseconds    -    1;    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
277	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  milliseconds  -  2;	  offset    =    milliseconds    -    1;    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
278	[BUG]  [BUGGY]  offset  =  milliseconds  -  2;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  -  2;	  offset    =    milliseconds    -    1;    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
279	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  milliseconds  -  1  +  1;	  offset    =    milliseconds    -    1;    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
280	[BUG]  [BUGGY]  offset  =  milliseconds  -  1  +  1;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  -  1  +  1;	  offset    =    milliseconds    -    1;    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
281	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  *  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  milliseconds  *  1;	  offset    =    milliseconds    -    1;    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
282	[BUG]  [BUGGY]  offset  =  milliseconds  *  1;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  *  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  *  1;	  offset    =    milliseconds    -    1;    	compilable	  [FE]  JsonSyntaxException  	11	1	replace
283	[BUG]  [BUGGY]  int  offset  =  0;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  0;	  offset    =    0;    int    offset    =    0;    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	150	None	replace
284	[BUG]  [BUGGY]  parseEndOffset  =  0;  int  offset  =  0;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  0;  int  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  0;  int  offset  =  0;	  offset    =    0;    int    offset    =    0;    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	150	None	replace
285	[BUG]  [BUGGY]  pos  =  0;  int  offset  =  0;  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  pos  =  0;  int  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	pos  =  0;  int  offset  =  0;	  offset    =    0;    int    offset    =    0;    	non-compiled	[CE]  incompatible  types	150	None	replace
286	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	parseEndOffset  =  0;	  offset    =    0;    int    offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	150	1	replace
287	[BUG]  [BUGGY]  parseEndOffset  =  0;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  0;	  offset    =    0;    int    offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	150	1	replace
288	[BUG]  [BUGGY]  parseEndOffset  =  0;  bytesOffset  =  0;  [CE]  cannot  find  symbol  bytesOffset  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  0;  bytesOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  0;  bytesOffset  =  0;	  offset    =    0;    int    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  bytesOffset	150	None	replace
289	[BUG]  [BUGGY]  parseEndOffset  -  offset;  int  offset  =  0;  [CE]  not  a  statement  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -  offset;  int  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  -  offset;  int  offset  =  0;	  offset    =    0;    int    offset    =    0;    	non-compiled	[CE]  not  a  statement	150	None	replace
290	[BUG]  [BUGGY]  pos  =  endOffset  -  1;  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  pos  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	pos  =  endOffset  -  1;	  offset    =    endOffset    -    1;    pos    =    endOffset    -    1;    	non-compiled	[CE]  incompatible  types	103	None	replace
291	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  pos  =  endOffset  +  1;  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  pos  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  pos  =  endOffset  +  1;	  offset    =    endOffset    -    1;    pos    =    endOffset    -    1;    	non-compiled	[CE]  incompatible  types	103	None	replace
292	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  pos  =  endOffset  -  1;  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  pos  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1;  pos  =  endOffset  -  1;	  offset    =    endOffset    -    1;    pos    =    endOffset    -    1;    	non-compiled	[CE]  incompatible  types	103	None	replace
293	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  pos  =  endOffset  -  1;  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  pos  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1;  pos  =  endOffset  -  1;	  offset    =    endOffset    -    1;    pos    =    endOffset    -    1;    	non-compiled	[CE]  incompatible  types	103	None	replace
294	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseEndOffset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(offset  -  parseEndOffset)%  2;	  offset    =(parseEndOffset    -    offset)%    2;    	compilable	  [FE]  JsonSyntaxException  	158	1	replace
295	[BUG]  [BUGGY]  offset  =(offset  -  parseEndOffset)%  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseEndOffset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  parseEndOffset)%  2;	  offset    =(parseEndOffset    -    offset)%    2;    	compilable	  [FE]  JsonSyntaxException  	158	1	replace
296	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  milliseconds)%  2;	  offset    =(parseEndOffset    -    offset)%    2;    	compilable	  [FE]  JsonSyntaxException  	158	1	replace
297	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)%  2;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  milliseconds)%  2;	  offset    =(parseEndOffset    -    offset)%    2;    	compilable	  [FE]  JsonSyntaxException  	158	1	replace
298	[BUG]  [BUGGY]  offset  =(parseStartOffset  -  offset)%  2;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseStartOffset  -  offset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseStartOffset  -  offset)%  2;	  offset    =(parseEndOffset    -    offset)%    2;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	158	None	replace
299	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  -  offset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(milliseconds  -  offset)%  2;	  offset    =(parseEndOffset    -    offset)%    2;    	compilable	  [FE]  JsonSyntaxException  	158	1	replace
300	[BUG]  [BUGGY]  offset  =(milliseconds  -  offset)%  2;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  -  offset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(milliseconds  -  offset)%  2;	  offset    =(parseEndOffset    -    offset)%    2;    	compilable	  [FE]  JsonSyntaxException  	158	1	replace
301	[BUG]  [BUGGY]  offset  =(offset  -  parseStartOffset)%  2;  [CE]  cannot  find  symbol  parseStartOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseStartOffset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  parseStartOffset)%  2;	  offset    =(parseEndOffset    -    offset)%    2;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	158	None	replace
302	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  /  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  /  2;	  offset    =    endOffset    +    2;    	compilable	  [FE]  JsonSyntaxException  	22	1	replace
303	[BUG]  [BUGGY]  offset  =  endOffset  /  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  /  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  /  2;	  offset    =    endOffset    +    2;    	compilable	  [FE]  JsonSyntaxException  	22	1	replace
304	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  2;	  offset    =    endOffset    +    2;    	compilable	  [FE]  JsonSyntaxException  	22	1	replace
305	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  2;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  2;	  offset    =    endOffset    +    2;    	compilable	  [FE]  JsonSyntaxException  	22	1	replace
306	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length()  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  date.length()  -  1;	  offset    =    date.length();    	compilable	  [FE]  JsonSyntaxException  	83	1	replace
307	[BUG]  [BUGGY]  offset  =  date.length()  -  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length()  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.length()  -  1;	  offset    =    date.length();    	compilable	  [FE]  JsonSyntaxException  	83	1	replace
308	[BUG]  [BUGGY]  offset  =  milliseconds.length()  +  1;  [CE]  int  cannot  be  dereferenced  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds.length()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds.length()  +  1;	  offset    =    pos.length()    +    1;    	non-compiled	[CE]  int  cannot  be  dereferenced	85	None	replace
309	[BUG]  [BUGGY]  offset  =  parseStartOffset.length()  +  1;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset.length()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset.length()  +  1;	  offset    =    pos.length()    +    1;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	85	None	replace
310	[BUG]  [BUGGY]  offset  =  this.date.length()  +  1;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.date.length()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.date.length()  +  1;	  offset    =    pos.length()    +    1;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	85	None	replace
311	[BUG]  [BUGGY]  offset  =  0;  parseOffset(date,  pos);  offset  =  0;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseOffset(date,  pos);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseOffset(date,  pos);  offset  =  0;	  offset    =    0;    parseOffset(offset,    pos);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
312	[BUG]  [BUGGY]  parseOffset(date,  pos);  offset  =  0;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseOffset(date,  pos);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseOffset(date,  pos);  offset  =  0;	  offset    =    0;    parseOffset(offset,    pos);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
313	[BUG]  [BUGGY]  parseOffset(offset,  pos);  offset  =  0;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseOffset(offset,  pos);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseOffset(offset,  pos);  offset  =  0;	  offset    =    0;    parseOffset(offset,    pos);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
314	[BUG]  [BUGGY]  offset  =  0;  parseOffset(date,  pos);  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseOffset(date,  pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseOffset(date,  pos);	  offset    =    0;    parseOffset(offset,    pos);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
315	[BUG]  [BUGGY]  parseOffset(pos,  offset);  offset  =  0;  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseOffset(pos,  offset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseOffset(pos,  offset);  offset  =  0;	  offset    =    0;    parseOffset(offset,    pos);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
316	[BUG]  [BUGGY]  offset  =  parseOffset(date,  pos);  offset  =  0;  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseOffset(date,  pos);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseOffset(date,  pos);  offset  =  0;	  offset    =    0;    parseOffset(offset,    pos);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
317	[BUG]  [BUGGY]  offset  =  endOffset  -  10.0;  [CE]  possible  loss  of  precision  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  10.0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  10.0;	  offset    =    endOffset    -    1L;    	non-compiled	[CE]  possible  loss  of  precision	139	None	replace
318	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  -=  endOffset  -  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  -=  endOffset  -  1L;	  offset    =    endOffset    -    1L;    	compilable	  [FE]  JsonSyntaxException  	139	1	replace
319	[BUG]  [BUGGY]  offset  -=  endOffset  -  1L;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  -=  endOffset  -  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  -=  endOffset  -  1L;	  offset    =    endOffset    -    1L;    	compilable	  [FE]  JsonSyntaxException  	139	1	replace
320	[BUG]  [BUGGY]  offset  =  startOffset  -  1L;  [CE]  cannot  find  symbol  startOffset  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  -  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  -  1L;	  offset    =    endOffset    -    1L;    	non-compiled	[CE]  cannot  find  symbol  startOffset	139	None	replace
321	[BUG]  [BUGGY]  offset  =  endOffset  -  1);  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1);	  offset    =    endOffset    -    1L;    	non-compiled	[CE]  ';'  expected	139	None	replace
322	[BUG]  [BUGGY]  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	126	None	replace
323	[BUG]  [BUGGY]  offset  =  0;  }  else  if(date.length()  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  }  else  if(date.length()  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  }  else  if(date.length()  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	126	None	replace
324	[BUG]  [BUGGY]  offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	126	None	replace
325	[BUG]  [BUGGY]  offset  =  0;  }  else  if(date.length()!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  }  else  if(date.length()!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  }  else  if(date.length()!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	126	None	replace
326	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseEndOffset  -  offset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    offset)/    2;    offset  =(parseEndOffset  -  offset)/  2;	  	compilable	  [FE]  JsonSyntaxException  	159	1	add
327	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseEndOffset  -  offset)/  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseEndOffset  -  offset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    2;    offset  =(parseEndOffset  -  offset)/  2;	  	compilable	  [FE]  JsonSyntaxException  	159	1	add
328	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseEndOffset  -  offset)/  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    offset)/    2;    offset  =(parseEndOffset  -  offset)/  1;	  	compilable	  [FE]  JsonSyntaxException  	159	1	add
329	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseEndOffset  -  offset)/  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseEndOffset  -  offset)/  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    2;    offset  =(parseEndOffset  -  offset)/  1;	  	compilable	  [FE]  JsonSyntaxException  	159	1	add
330	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseEndOffset  -  offset)/  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    offset)/    2;    offset  =(parseEndOffset  -  offset)/  3;	  	compilable	  [FE]  JsonSyntaxException  	159	1	add
331	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseEndOffset  -  offset)/  3;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseEndOffset  -  offset)/  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    2;    offset  =(parseEndOffset  -  offset)/  3;	  	compilable	  [FE]  JsonSyntaxException  	159	1	add
332	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseStartOffset  -  offset)/  2;  [CE]  cannot  find  symbol  parseStartOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseStartOffset  -  offset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    2;    offset  =(parseStartOffset  -  offset)/  2;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	159	None	add
333	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  Offset  =(parseEndOffset  -  offset)/  2;  [CE]  cannot  find  symbol  Offset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  Offset  =(parseEndOffset  -  offset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    2;    Offset  =(parseEndOffset  -  offset)/  2;	  	non-compiled	[CE]  cannot  find  symbol  Offset	159	None	add
334	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  pos  =(parseEndOffset  -  offset)/  2;  [CE]  incompatible  types  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  pos  =(parseEndOffset  -  offset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    2;    pos  =(parseEndOffset  -  offset)/  2;	  	non-compiled	[CE]  incompatible  types	159	None	add
335	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }	  	compilable	  [FE]  JsonSyntaxException  	191	1	add
336	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }	  	compilable	  [FE]  JsonSyntaxException  	191	1	add
337	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }	  	compilable	  [FE]  JsonSyntaxException  	191	1	add
338	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }	  	compilable	  [FE]  JsonSyntaxException  	191	1	add
339	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	191	None	add
340	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseEndOffset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(offset  -  parseEndOffset)/  10;	  offset    =(parseEndOffset    -    offset)/    10;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
341	[BUG]  [BUGGY]  offset  =(offset  -  parseEndOffset)/  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseEndOffset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  parseEndOffset)/  10;	  offset    =(parseEndOffset    -    offset)/    10;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
342	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  -  offset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(milliseconds  -  offset)/  10;	  offset    =(parseEndOffset    -    offset)/    10;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
343	[BUG]  [BUGGY]  offset  =(milliseconds  -  offset)/  10;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  -  offset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(milliseconds  -  offset)/  10;	  offset    =(parseEndOffset    -    offset)/    10;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
344	[BUG]  [BUGGY]  offset  =(parseStartOffset  -  offset)/  10;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseStartOffset  -  offset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseStartOffset  -  offset)/  10;	  offset    =(parseEndOffset    -    offset)/    10;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	117	None	replace
345	[BUG]  [BUGGY]  offset  =(offset  -  parseStartOffset)/  10;  [CE]  cannot  find  symbol  parseStartOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseStartOffset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  parseStartOffset)/  10;	  offset    =(parseEndOffset    -    offset)/    10;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	117	None	replace
346	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
347	[BUG]  [BUGGY]  offset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
348	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
349	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
350	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	216	None	replace
351	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	216	None	replace
352	[BUG]  [BUGGY]  offset  =  pos  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	216	None	replace
353	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  +  1;  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
354	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1;  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
355	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
356	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
357	[BUG]  [BUGGY]  offset  =  0;  parseEndOffset.add( "n ");  offset  =  0;  [CE]  int  cannot  be  dereferenced  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseEndOffset.add( "n ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseEndOffset.add( "n ");  offset  =  0;	  offset    =    0;    result.add(   "n   ");    offset    =    0;    	non-compiled	[CE]  int  cannot  be  dereferenced	181	None	replace
358	[BUG]  [BUGGY]  offset  =  0;  result.add( "null ");  offset  =  0;  [CE]  cannot  find  symbol  result  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  result.add( "null ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  result.add( "null ");  offset  =  0;	  offset    =    0;    result.add(   "n   ");    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  result	181	None	replace
359	[BUG]  [BUGGY]  offset  =  0;  result.add( "no-digits ");  offset  =  0;  [CE]  cannot  find  symbol  result  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  result.add( "no-digits ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  result.add( "no-digits ");  offset  =  0;	  offset    =    0;    result.add(   "n   ");    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  result	181	None	replace
360	[BUG]  [BUGGY]  offset  =  0;  this.date.add( "null ");  offset  =  0;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  this.date.add( "null ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  this.date.add( "null ");  offset  =  0;	  offset    =    0;    result.add(   "n   ");    offset    =    0;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	181	None	replace
361	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	add
362	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
363	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
364	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
365	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
366	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
367	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
368	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	add
369	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	add
370	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  parseEndOffset;  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        parseEndOffset;        offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	31	1	add
371	[BUG]  [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  parseEndOffset;  offset  =  parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  parseEndOffset;  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	31	1	add
372	[BUG]  [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  parseStartOffset;  offset  =  parseEndOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  parseStartOffset;  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        offset    =    parseEndOffset;    offset  =  parseStartOffset;  offset  =  parseEndOffset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	31	None	add
373	[BUG]  [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  Offset  offset  =  parseEndOffset;  offset  =  parseEndOffset;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  Offset  offset  =  parseEndOffset;  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        offset    =    parseEndOffset;    Offset  offset  =  parseEndOffset;  offset  =  parseEndOffset;	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
374	[BUG]  [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  byseEndOffset;  offset  =  parseEndOffset;  [CE]  cannot  find  symbol  byseEndOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  byseEndOffset;  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        offset    =    parseEndOffset;    offset  =  byseEndOffset;  offset  =  parseEndOffset;	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	31	None	add
375	[BUG]  [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  parseEndOffset;  offset  =  parseStartOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  parseEndOffset;  offset  =  parseStartOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  parseStartOffset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	31	None	add
376	[BUG]  [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  pos.getOffset();  offset  =  pos.getOffset();  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  offset  =  pos.getOffset();  offset  =  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        offset    =    parseEndOffset;    offset  =  pos.getOffset();  offset  =  pos.getOffset();	  	non-compiled	[CE]  cannot  find  symbol	31	None	add
377	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(!timezoneIndicator.hasNext())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
378	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  timezoneIndicator.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(!timezoneIndicator.hasNext())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	200	None	replace
379	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(!timezoneIndicator.hasNext())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	200	None	replace
380	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	For(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(!timezoneIndicator.hasNext())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	200	None	replace
381	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(!timezoneIndicator.hasNext())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	200	None	replace
382	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  'catch'  without  'try'  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(!timezoneIndicator.hasNext())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	200	None	replace
383	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  -parseEndOffset;	  offset    =    0;    offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	124	1	replace
384	[BUG]  [BUGGY]  offset  =  -parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  -parseEndOffset;	  offset    =    0;    offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	124	1	replace
385	[BUG]  [BUGGY]  offset  =  parseStartOffset(parseEndOffset);  offset  =  0;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset(parseEndOffset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset(parseEndOffset);  offset  =  0;	  offset    =    0;    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
386	[BUG]  [BUGGY]  offset  =  parseStartOffset;  offset  =  0;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  offset  =  0;	  offset    =    0;    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	124	None	replace
387	[BUG]  [BUGGY]  offset  =  parseEndOffset(date.getOffset());  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset(date.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset(date.getOffset());	  offset    =    date.getOffset();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
388	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  offset  =(parseEndOffset  -  offset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    offset)%    10;    offset  =(parseEndOffset  -  offset)%  10;	  	compilable	  [FE]  JsonSyntaxException  	161	1	add
389	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  offset  =(parseEndOffset  -  offset)%  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  offset  =(parseEndOffset  -  offset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    10;    offset  =(parseEndOffset  -  offset)%  10;	  	compilable	  [FE]  JsonSyntaxException  	161	1	add
390	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  int  offset  =(parseEndOffset  -  offset)%  10;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  int  offset  =(parseEndOffset  -  offset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    10;    int  offset  =(parseEndOffset  -  offset)%  10;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	161	None	add
391	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  offset  =(parseEndOffset  -  offset)%)  10;  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  offset  =(parseEndOffset  -  offset)%)  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    10;    offset  =(parseEndOffset  -  offset)%)  10;	  	non-compiled	[CE]  illegal  start  of  expression	161	None	add
392	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  pos  =(parseEndOffset  -  offset)%  10;  [CE]  incompatible  types  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  pos  =(parseEndOffset  -  offset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    10;    pos  =(parseEndOffset  -  offset)%  10;	  	non-compiled	[CE]  incompatible  types	161	None	add
393	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  Offset  =(parseEndOffset  -  offset)%  10;  [CE]  cannot  find  symbol  Offset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  Offset  =(parseEndOffset  -  offset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    10;    Offset  =(parseEndOffset  -  offset)%  10;	  	non-compiled	[CE]  cannot  find  symbol  Offset	161	None	add
394	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  offset  =(parseStartOffset  -  offset)%  10;  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  offset  =(parseStartOffset  -  offset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    10;    offset  =(parseStartOffset  -  offset)%  10;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	161	None	add
395	[BUG]  [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	130	None	replace
396	[BUG]  [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  ==  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  ==  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  offset  =  0;  }  else  if(date.length()  ==  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	130	None	replace
397	[BUG]  [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	130	None	replace
398	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	72	1	add
399	[BUG]  [BUGGY]  offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	72	1	add
400	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	72	1	add
401	[BUG]  [BUGGY]  offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	72	1	add
402	[BUG]  [BUGGY]  offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  offset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  offset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  offset  =  offset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	72	None	add
403	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	72	1	add
404	[BUG]  [BUGGY]  offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	72	1	add
405	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  offset  =(parseEndOffset  -  offset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    offset)/    10;    offset  =(parseEndOffset  -  offset)/  10;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
406	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  offset  =(parseEndOffset  -  offset)/  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  offset  =(parseEndOffset  -  offset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    10;    offset  =(parseEndOffset  -  offset)/  10;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
407	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  int  offset  =(parseEndOffset  -  offset)/  10;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  int  offset  =(parseEndOffset  -  offset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    10;    int  offset  =(parseEndOffset  -  offset)/  10;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	116	None	add
408	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  offset  =(parseStartOffset  -  offset)/  10;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  offset  =(parseStartOffset  -  offset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    10;    offset  =(parseStartOffset  -  offset)/  10;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	116	None	add
409	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  Offset  =(parseEndOffset  -  offset)/  10;  [CE]  cannot  find  symbol  Offset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  Offset  =(parseEndOffset  -  offset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    10;    Offset  =(parseEndOffset  -  offset)/  10;	  	non-compiled	[CE]  cannot  find  symbol  Offset	116	None	add
410	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  pos  =(parseEndOffset  -  offset)/  10;  [CE]  incompatible  types  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  pos  =(parseEndOffset  -  offset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    10;    pos  =(parseEndOffset  -  offset)/  10;	  	non-compiled	[CE]  incompatible  types	116	None	add
411	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  offset  =(parseEndOffset  -  offset)/  100;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    offset)/    10;    offset  =(parseEndOffset  -  offset)/  100;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
412	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  offset  =(parseEndOffset  -  offset)/  100;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  offset  =(parseEndOffset  -  offset)/  100;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    10;    offset  =(parseEndOffset  -  offset)/  100;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
413	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	211	1	add
414	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	211	1	add
415	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	211	1	add
416	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	211	1	add
417	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	211	1	add
418	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	211	1	add
419	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	211	1	add
420	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	211	1	add
421	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	211	None	add
422	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  JsonSyntaxException  	211	1	add
423	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  	compilable	  [FE]  JsonSyntaxException  	211	1	add
424	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset;  offset  =  offset  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset    -    parseEndOffset;    offset  =  offset  -  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	89	1	add
425	[BUG]  [BUGGY]  offset  =  offset  -  parseEndOffset;  offset  =  offset  -  parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset;  offset  =  offset  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    parseEndOffset;    offset  =  offset  -  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	89	1	add
426	[BUG]  [BUGGY]  offset  =  offset  -  parseEndOffset;  offset  =  offset  -  parseStartOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset;  offset  =  offset  -  parseStartOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    parseEndOffset;    offset  =  offset  -  parseStartOffset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	89	None	add
427	[BUG]  [BUGGY]  offset  =  offset  -  parseEndOffset;  int  offset  =  offset  -  parseEndOffset;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset;  int  offset  =  offset  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    parseEndOffset;    int  offset  =  offset  -  parseEndOffset;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	89	None	add
428	[BUG]  [BUGGY]  offset  =  offset  -  parseEndOffset;  Offset  offset  =  offset  -  parseEndOffset;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset;  Offset  offset  =  offset  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    parseEndOffset;    Offset  offset  =  offset  -  parseEndOffset;	  	non-compiled	[CE]  cannot  find  symbol	89	None	add
429	[BUG]  [BUGGY]  offset  =  offset  -  parseEndOffset;  offset  =  offset  -  byseEndOffset;  [CE]  cannot  find  symbol  byseEndOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset;  offset  =  offset  -  byseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    parseEndOffset;    offset  =  offset  -  byseEndOffset;	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	89	None	add
430	[BUG]  [BUGGY]  offset  =  offset  -  parseEndOffset;  pos  =  offset  -  parseEndOffset;  [CE]  incompatible  types  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset;  pos  =  offset  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    parseEndOffset;    pos  =  offset  -  parseEndOffset;	  	non-compiled	[CE]  incompatible  types	89	None	add
431	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	45	1	add
432	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	45	1	add
433	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	45	1	add
434	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	45	1	add
435	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  endOffset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	45	None	add
436	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  startOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  startOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  endOffset  =  startOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	45	None	add
437	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  endOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	45	None	add
438	[BUG]  [BUGGY]  offset  =  milliseconds.length()  -  1;  [CE]  int  cannot  be  dereferenced  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds.length()  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds.length()  -  1;	  offset    =    milliseconds.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	87	None	replace
439	[BUG]  [BUGGY]  offset  =  fraction.length();  [CE]  int  cannot  be  dereferenced  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  fraction.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  fraction.length();	  offset    =    milliseconds.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	87	None	replace
440	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
441	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
442	[BUG]  [BUGGY]  offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	192	None	replace
443	[BUG]  [BUGGY]  int  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	192	None	replace
444	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
445	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
446	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  length)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [CE]  cannot  find  symbol  length  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  length)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  length)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	192	None	replace
447	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset;  if(parseEndOffset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	parseEndOffset  =  offset;  if(parseEndOffset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
448	[BUG]  [BUGGY]  parseEndOffset  =  offset;  if(parseEndOffset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset;  if(parseEndOffset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  offset;  if(parseEndOffset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
449	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    milliseconds    -    1;    offset  =  milliseconds  -  1;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
450	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  offset  =  milliseconds  -  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    offset  =  milliseconds  -  1;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
451	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  milliseconds  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	10	None	add
452	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date);  offset  =  milliseconds  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date);  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date);  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	10	None	add
453	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  milliseconds  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	10	None	add
454	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  milliseconds  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	10	None	add
455	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date,  pos);  offset  =  milliseconds  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date,  pos);  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date,  pos);  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	10	None	add
456	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date,  offset);  offset  =  milliseconds  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date,  offset);  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date,  offset);  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	10	None	add
457	[BUG]  [BUGGY]  offset  =  pos;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    	non-compiled	[CE]  incompatible  types	138	None	replace
458	[BUG]  [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	138	None	replace
459	[BUG]  [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	138	None	replace
460	[BUG]  [BUGGY]  offset  =  date.length();  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.length();  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	138	None	replace
461	[BUG]  [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  parseStartOffset  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	138	None	replace
462	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  milliseconds;  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  milliseconds;	  offset    =    parseEndOffset?    pos.getOffset()    :    parseEndOffset;    	non-compiled	[CE]  incompatible  types	197	None	replace
463	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  byseEndOffset;  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  byseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  byseEndOffset;	  offset    =    parseEndOffset?    pos.getOffset()    :    parseEndOffset;    	non-compiled	[CE]  incompatible  types	197	None	replace
464	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  endOffset;  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  endOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  endOffset;	  offset    =    parseEndOffset?    pos.getOffset()    :    parseEndOffset;    	non-compiled	[CE]  incompatible  types	197	None	replace
465	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  parseStartOffset;  [CE]  incompatible  types  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  parseStartOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  parseStartOffset;	  offset    =    parseEndOffset?    pos.getOffset()    :    parseEndOffset;    	non-compiled	[CE]  incompatible  types	197	None	replace
466	[BUG]  [BUGGY]  offset  =  valueOffset  +  1;  [CE]  cannot  find  symbol  valueOffset  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  valueOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  valueOffset  +  1;	  offset    =    parseStartOffset    +    1;    	non-compiled	[CE]  cannot  find  symbol  valueOffset	221	None	replace
467	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	46	1	replace
468	[BUG]  [BUGGY]  offset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	46	1	replace
469	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	46	1	replace
470	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	46	1	replace
471	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	46	None	replace
472	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	46	None	replace
473	[BUG]  [BUGGY]  offset  =  pos  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	46	None	replace
474	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  +  1;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	46	1	replace
475	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	46	1	replace
476	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
477	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
478	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	55	None	replace
479	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
480	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
481	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
482	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
483	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	55	None	replace
484	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	55	None	replace
485	[BUG]  [BUGGY]  offset  =  date.getOffset()  -  1;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.getOffset()  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.getOffset()  -  1;	  offset    =    pos.getOffset()    -    1;    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
486	[BUG]  [BUGGY]  offset  =  parseEndOffset.getOffset()  -  1;  [CE]  int  cannot  be  dereferenced  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset.getOffset()  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.getOffset()  -  1;	  offset    =    pos.getOffset()    -    1;    	non-compiled	[CE]  int  cannot  be  dereferenced	205	None	replace
487	[BUG]  [BUGGY]  offset  =  parseStartOffset.getOffset()  -  1;  [CE]  cannot  find  symbol  parseStartOffset  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset.getOffset()  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset.getOffset()  -  1;	  offset    =    pos.getOffset()    -    1;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	205	None	replace
488	[BUG]  [BUGGY]  offset  =  pos.getOffset()  +  1;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  +  1;	  offset    =    pos.getOffset()    -    1;    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
489	[BUG]  [BUGGY]  offset  =  this.date.getOffset()  -  1;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.date.getOffset()  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.date.getOffset()  -  1;	  offset    =    pos.getOffset()    -    1;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	205	None	replace
490	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)    ==    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
491	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)    ==    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
492	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  int  endOffset  =  endOffset  -  2;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  int  endOffset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1;  int  endOffset  =  endOffset  -  2;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    2;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	204	None	replace
493	[BUG]  [BUGGY]  offset  =  parseStartOffset  -  1;  int  endOffset  =  endOffset  -  2;  [CE]  cannot  find  symbol  parseStartOffset  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  -  1;  int  endOffset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  -  1;  int  endOffset  =  endOffset  -  2;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    2;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	204	None	replace
494	[BUG]  [BUGGY]  int  endOffset  =  endOffset  -  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    2;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	204	None	replace
495	[BUG]  [BUGGY]  offset  =  offset  -  1;  int  endOffset  =  endOffset  -  2;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  int  endOffset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  1;  int  endOffset  =  endOffset  -  2;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    2;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	204	None	replace
496	[BUG]  [BUGGY]  offset  =  pos.getOffset();  int  endOffset  =  endOffset  -  2;  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  int  endOffset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  int  endOffset  =  endOffset  -  2;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    2;    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
497	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	172	1	add
498	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	172	1	add
499	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	172	1	add
500	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	172	1	add
501	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  endOffset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  endOffset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    int  endOffset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	172	None	add
502	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	172	1	add
503	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	172	1	add
504	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	172	1	add
505	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	172	1	add
506	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	172	1	add
507	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	172	1	add
508	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    int  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	172	None	add
509	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseEndOffset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(offset  -  parseEndOffset)%  10;	  offset    =(parseEndOffset    -    offset)%    10;    	compilable	  [FE]  JsonSyntaxException  	162	1	replace
510	[BUG]  [BUGGY]  offset  =(offset  -  parseEndOffset)%  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseEndOffset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  parseEndOffset)%  10;	  offset    =(parseEndOffset    -    offset)%    10;    	compilable	  [FE]  JsonSyntaxException  	162	1	replace
511	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  milliseconds)%  10;	  offset    =(parseEndOffset    -    offset)%    10;    	compilable	  [FE]  JsonSyntaxException  	162	1	replace
512	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)%  10;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  milliseconds)%  10;	  offset    =(parseEndOffset    -    offset)%    10;    	compilable	  [FE]  JsonSyntaxException  	162	1	replace
513	[BUG]  [BUGGY]  offset  =(parseStartOffset  -  offset)%  10;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseStartOffset  -  offset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseStartOffset  -  offset)%  10;	  offset    =(parseEndOffset    -    offset)%    10;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	162	None	replace
514	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  -  offset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(milliseconds  -  offset)%  10;	  offset    =(parseEndOffset    -    offset)%    10;    	compilable	  [FE]  JsonSyntaxException  	162	1	replace
515	[BUG]  [BUGGY]  offset  =(milliseconds  -  offset)%  10;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  -  offset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(milliseconds  -  offset)%  10;	  offset    =(parseEndOffset    -    offset)%    10;    	compilable	  [FE]  JsonSyntaxException  	162	1	replace
516	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  100;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  offset)%  100;	  offset    =(parseEndOffset    -    offset)%    10;    	compilable	  [FE]  JsonSyntaxException  	162	1	replace
517	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  100;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  100;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)%  100;	  offset    =(parseEndOffset    -    offset)%    10;    	compilable	  [FE]  JsonSyntaxException  	162	1	replace
518	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
519	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
520	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	169	None	replace
521	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
522	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
523	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
524	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
525	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
526	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
527	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	169	None	replace
528	[BUG]  [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  milliseconds.getOffset());  [CE]  int  cannot  be  dereferenced  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  milliseconds.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.parseDate(date,  pos,  milliseconds.getOffset());	  offset    =    DateUtils.parseDate(date,    pos.getOffset());    	non-compiled	[CE]  int  cannot  be  dereferenced	29	None	replace
529	[BUG]  [BUGGY]  offset  =  DateUtils.parseDate(date,  milliseconds.getOffset());  [CE]  int  cannot  be  dereferenced  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.parseDate(date,  milliseconds.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.parseDate(date,  milliseconds.getOffset());	  offset    =    DateUtils.parseDate(date,    pos.getOffset());    	non-compiled	[CE]  int  cannot  be  dereferenced	29	None	replace
530	[BUG]  [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  timezoneOffset.getOffset());  [CE]  cannot  find  symbol  timezoneOffset  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  timezoneOffset.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.parseDate(date,  pos,  timezoneOffset.getOffset());	  offset    =    DateUtils.parseDate(date,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	29	None	replace
531	[BUG]  [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  date.getOffset());  [CE]  cannot  find  symbol  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  date.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.parseDate(date,  pos,  date.getOffset());	  offset    =    DateUtils.parseDate(date,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
532	[BUG]  [BUGGY]  offset  =  DateUtils.parseDate(date,  parseEndOffset,  pos.getOffset());  [CE]  cannot  find  symbol  [FE]                                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.parseDate(date,  parseEndOffset,  pos.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.parseDate(date,  parseEndOffset,  pos.getOffset());	  offset    =    DateUtils.parseDate(date,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
533	[BUG]  [BUGGY]  offset  =  DateUtils.parseDate(date,  pos.getOffset(),  milliseconds);  [CE]  cannot  find  symbol  [FE]                                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.parseDate(date,  pos.getOffset(),  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.parseDate(date,  pos.getOffset(),  milliseconds);	  offset    =    DateUtils.parseDate(date,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
534	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
535	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
536	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
537	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
538	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    int  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	56	None	add
539	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getStartOffset();  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getStartOffset();  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.getStartOffset();  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	56	None	add
540	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
541	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
542	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
543	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
544	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  startOffset  +  1;  }  [CE]  cannot  find  symbol  startOffset  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  startOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  startOffset  +  1;  }	  	non-compiled	[CE]  cannot  find  symbol  startOffset	56	None	add
545	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  offset  =  offset;  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    offset  =  offset;  offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
546	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  offset  =  offset;  offset  =  offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  offset  =  offset;  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    offset  =  offset;  offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
547	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
548	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
549	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
550	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
551	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
552	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
553	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
554	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
555	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
556	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
557	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
558	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
559	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
560	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
561	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
562	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
563	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    int  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	52	None	add
564	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getStartOffset();  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getStartOffset();  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.getStartOffset();  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	52	None	add
565	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  parseEndOffset(offset);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  parseEndOffset(offset);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  parseEndOffset(offset);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	52	None	add
566	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
567	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
568	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
569	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
570	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getStartOffset();  offset  =  endOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getStartOffset();  offset  =  endOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.getStartOffset();  offset  =  endOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	52	None	add
571	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  3;	  offset    =    endOffset    +    3;    	compilable	  [FE]  JsonSyntaxException  	142	1	replace
572	[BUG]  [BUGGY]  offset  =  endOffset  -  3;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  3;	  offset    =    endOffset    +    3;    	compilable	  [FE]  JsonSyntaxException  	142	1	replace
573	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  /  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  /  3;	  offset    =    endOffset    +    3;    	compilable	  [FE]  JsonSyntaxException  	142	1	replace
574	[BUG]  [BUGGY]  offset  =  endOffset  /  3;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  /  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  /  3;	  offset    =    endOffset    +    3;    	compilable	  [FE]  JsonSyntaxException  	142	1	replace
575	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  +  0;	  offset    =    endOffset    +    3;    	compilable	  [FE]  JsonSyntaxException  	142	1	replace
576	[BUG]  [BUGGY]  offset  =  endOffset  +  0;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  0;	  offset    =    endOffset    +    3;    	compilable	  [FE]  JsonSyntaxException  	142	1	replace
577	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
578	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
579	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
580	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
581	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
582	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
583	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    int  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	54	None	add
584	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
585	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
586	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
587	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
588	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
589	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	54	1	add
590	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    int  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	54	None	add
591	[BUG]  [BUGGY]  offset  =  timezoneIndicator;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  timezoneIndicator;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneIndicator;	  offset    =    timezoneOffset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	145	None	replace
592	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  offset  =(parseEndOffset  -  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    milliseconds)/    10;    offset  =(parseEndOffset  -  milliseconds)/  10;	  	compilable	  [FE]  JsonSyntaxException  	118	1	add
593	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  offset  =(parseEndOffset  -  milliseconds)/  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  offset  =(parseEndOffset  -  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    milliseconds)/    10;    offset  =(parseEndOffset  -  milliseconds)/  10;	  	compilable	  [FE]  JsonSyntaxException  	118	1	add
594	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  int  offset  =(parseEndOffset  -  milliseconds)/  10;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  int  offset  =(parseEndOffset  -  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    milliseconds)/    10;    int  offset  =(parseEndOffset  -  milliseconds)/  10;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	118	None	add
595	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  offset  =(parseStartOffset  -  milliseconds)/  10;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  offset  =(parseStartOffset  -  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    milliseconds)/    10;    offset  =(parseStartOffset  -  milliseconds)/  10;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	118	None	add
596	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  pos  =(parseEndOffset  -  milliseconds)/  10;  [CE]  incompatible  types  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  pos  =(parseEndOffset  -  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    milliseconds)/    10;    pos  =(parseEndOffset  -  milliseconds)/  10;	  	non-compiled	[CE]  incompatible  types	118	None	add
597	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  Offset  =(parseEndOffset  -  milliseconds)/  10;  [CE]  cannot  find  symbol  Offset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  Offset  =(parseEndOffset  -  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    milliseconds)/    10;    Offset  =(parseEndOffset  -  milliseconds)/  10;	  	non-compiled	[CE]  cannot  find  symbol  Offset	118	None	add
598	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  offset  =(parseEndOffset  -  milliseconds)/  100;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    milliseconds)/    10;    offset  =(parseEndOffset  -  milliseconds)/  100;	  	compilable	  [FE]  JsonSyntaxException  	118	1	add
599	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  offset  =(parseEndOffset  -  milliseconds)/  100;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  offset  =(parseEndOffset  -  milliseconds)/  100;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    milliseconds)/    10;    offset  =(parseEndOffset  -  milliseconds)/  100;	  	compilable	  [FE]  JsonSyntaxException  	118	1	add
600	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  pos;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  pos;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  pos;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	64	None	replace
601	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  date;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  date;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  date;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	64	None	replace
602	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  min;  [CE]  cannot  find  symbol  min  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  min;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  min;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	non-compiled	[CE]  cannot  find  symbol  min	64	None	replace
603	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  date.length;  [CE]  cannot  find  symbol  length  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  date.length;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  date.length;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	non-compiled	[CE]  cannot  find  symbol  length	64	None	replace
604	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  day;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  -  day;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	compilable	  [FE]  JsonSyntaxException  	64	1	replace
605	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  day;  [FE]  JsonSyntaxException  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  day;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  day;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	compilable	  [FE]  JsonSyntaxException  	64	1	replace
606	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  this.day;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  this.day;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  this.day;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	64	None	replace
607	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  2;	  offset    =    1;    	compilable	  [FE]  JsonSyntaxException  	115	1	replace
608	[BUG]  [BUGGY]  offset  =  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  2;	  offset    =    1;    	compilable	  [FE]  JsonSyntaxException  	115	1	replace
609	[BUG]  [BUGGY]  offset  =  parseStartOffset(milliseconds);  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset(milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset(milliseconds);	  offset    =    1;    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
610	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        -        1;        offset    =    endOffset    -    2;    offset  =  endOffset  -  1;  offset  =  endOffset  -  2;	  	compilable	  [FE]  JsonSyntaxException  	202	1	add
611	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    2;    offset  =  endOffset  -  1;  offset  =  endOffset  -  2;	  	compilable	  [FE]  JsonSyntaxException  	202	1	add
612	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  Offset  endOffset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  Offset  endOffset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    2;    Offset  endOffset  =  endOffset  -  1;  offset  =  endOffset  -  2;	  	non-compiled	[CE]  cannot  find  symbol	202	None	add
613	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  int  endOffset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  int  endOffset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    2;    int  endOffset  =  endOffset  -  1;  offset  =  endOffset  -  2;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	202	None	add
614	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  Offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [CE]  cannot  find  symbol  Offset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  Offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    2;    Offset  =  endOffset  -  1;  offset  =  endOffset  -  2;	  	non-compiled	[CE]  cannot  find  symbol  Offset	202	None	add
615	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  endOffset  -  1;  offset  =  endOffset  -  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        -        1;        offset    =    endOffset    -    2;    offset  =  endOffset  -  1;  offset  =  endOffset  -  3;	  	compilable	  [FE]  JsonSyntaxException  	202	1	add
616	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  endOffset  -  1;  offset  =  endOffset  -  3;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  endOffset  -  1;  offset  =  endOffset  -  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    2;    offset  =  endOffset  -  1;  offset  =  endOffset  -  3;	  	compilable	  [FE]  JsonSyntaxException  	202	1	add
617	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  startOffset  -  1;  offset  =  endOffset  -  2;  [CE]  cannot  find  symbol  startOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  startOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    2;    offset  =  startOffset  -  1;  offset  =  endOffset  -  2;	  	non-compiled	[CE]  cannot  find  symbol  startOffset	202	None	add
618	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  offset;  offset  =  milliseconds  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    milliseconds    -    offset;    offset  =  milliseconds  -  offset;	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
619	[BUG]  [BUGGY]  offset  =  milliseconds  -  offset;  offset  =  milliseconds  -  offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  offset;  offset  =  milliseconds  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    offset;    offset  =  milliseconds  -  offset;	  	compilable	  [FE]  JsonSyntaxException  	91	1	add
620	[BUG]  [BUGGY]  offset  =  milliseconds  -  offset;  offset  =  milliseconds  -  off;  [CE]  cannot  find  symbol  off  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  offset;  offset  =  milliseconds  -  off;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    offset;    offset  =  milliseconds  -  off;	  	non-compiled	[CE]  cannot  find  symbol  off	91	None	add
621	[BUG]  [BUGGY]  offset  =  milliseconds  -  offset;  int  offset  =  milliseconds  -  offset;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  offset;  int  offset  =  milliseconds  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    offset;    int  offset  =  milliseconds  -  offset;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	91	None	add
622	[BUG]  [BUGGY]  offset  =  milliseconds  -  offset;  Offset  offset  =  milliseconds  -  offset;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  offset;  Offset  offset  =  milliseconds  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    offset;    Offset  offset  =  milliseconds  -  offset;	  	non-compiled	[CE]  cannot  find  symbol	91	None	add
623	[BUG]  [BUGGY]  offset  =  milliseconds  -  offset;  Offset  =  milliseconds  -  offset;  [CE]  cannot  find  symbol  Offset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  offset;  Offset  =  milliseconds  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    offset;    Offset  =  milliseconds  -  offset;	  	non-compiled	[CE]  cannot  find  symbol  Offset	91	None	add
624	[BUG]  [BUGGY]  offset  =  milliseconds  -  offset;  offset  =  milliseconds  -  offset);  [CE]  ';'  expected  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  offset;  offset  =  milliseconds  -  offset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    offset;    offset  =  milliseconds  -  offset);	  	non-compiled	[CE]  ';'  expected	91	None	add
625	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
626	[BUG]  [BUGGY]  if(date.charAt(i)!=  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.charAt(i)!=  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.charAt(i)!=  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
627	[BUG]  [BUGGY]  if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  'catch'  without  'try'  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
628	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
629	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
630	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1,  pos.getOffset();  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1,  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1,  pos.getOffset();	  offset    =    parseEndOffset,    pos.getOffset();    	non-compiled	[CE]  ';'  expected	198	None	replace
631	[BUG]  [BUGGY]  offset  =  parseStartOffset,  pos.getOffset();  [CE]  ';'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset,  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset,  pos.getOffset();	  offset    =    parseEndOffset,    pos.getOffset();    	non-compiled	[CE]  ';'  expected	198	None	replace
632	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  0,  pos.getOffset();  [CE]  ';'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  0,  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  0,  pos.getOffset();	  offset    =    parseEndOffset,    pos.getOffset();    	non-compiled	[CE]  ';'  expected	198	None	replace
633	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1,  pos.getOffset();  [CE]  ';'  expected  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1,  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1,  pos.getOffset();	  offset    =    parseEndOffset,    pos.getOffset();    	non-compiled	[CE]  ';'  expected	198	None	replace
634	[BUG]  [BUGGY]  offset  =  parseEndOffset,  pos.getOffset()  +  1;  [CE]  ';'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset,  pos.getOffset()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset,  pos.getOffset()  +  1;	  offset    =    parseEndOffset,    pos.getOffset();    	non-compiled	[CE]  ';'  expected	198	None	replace
635	[BUG]  [BUGGY]  offset  =  parseEndOffset,  pos.getStartOffset();  [CE]  ';'  expected  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset,  pos.getStartOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset,  pos.getStartOffset();	  offset    =    parseEndOffset,    pos.getOffset();    	non-compiled	[CE]  ';'  expected	198	None	replace
636	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	68	1	add
637	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	68	1	add
638	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	68	1	add
639	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	68	1	add
640	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	68	None	add
641	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  parseEndOffset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    parseEndOffset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	68	1	add
642	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  parseEndOffset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  parseEndOffset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    parseEndOffset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	68	1	add
643	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  int  endOffset  =  endOffset  -  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  int  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1;  int  endOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
644	[BUG]  [BUGGY]  int  endOffset  =  parseEndOffset  -  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  parseEndOffset  -  1;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
645	[BUG]  [BUGGY]  offset  =  pos.getOffset();  int  endOffset  =  endOffset  -  1;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  int  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  int  endOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
646	[BUG]  [BUGGY]  offset  =  pos.length();  int  endOffset  =  endOffset  -  1;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.length();  int  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.length();  int  endOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
647	[BUG]  [BUGGY]  offset  =  pos.getOffset();  int  endOffset  =  pos.getOffset();  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  int  endOffset  =  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  int  endOffset  =  pos.getOffset();	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
648	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  3;  offset  =  endOffset  +  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    3;    offset  =  endOffset  +  3;	  	compilable	  [FE]  JsonSyntaxException  	141	1	add
649	[BUG]  [BUGGY]  offset  =  endOffset  +  3;  offset  =  endOffset  +  3;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  3;  offset  =  endOffset  +  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    3;    offset  =  endOffset  +  3;	  	compilable	  [FE]  JsonSyntaxException  	141	1	add
650	[BUG]  [BUGGY]  offset  =  endOffset  +  3;  int  endOffset  =  endOffset  +  3;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  3;  int  endOffset  =  endOffset  +  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    3;    int  endOffset  =  endOffset  +  3;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	141	None	add
651	[BUG]  [BUGGY]  offset  =  endOffset  +  3;  Offset  endOffset  =  endOffset  +  3;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  3;  Offset  endOffset  =  endOffset  +  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    3;    Offset  endOffset  =  endOffset  +  3;	  	non-compiled	[CE]  cannot  find  symbol	141	None	add
652	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  3;  offset  =  endOffset  +  4;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    3;    offset  =  endOffset  +  4;	  	compilable	  [FE]  JsonSyntaxException  	141	1	add
653	[BUG]  [BUGGY]  offset  =  endOffset  +  3;  offset  =  endOffset  +  4;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  3;  offset  =  endOffset  +  4;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    3;    offset  =  endOffset  +  4;	  	compilable	  [FE]  JsonSyntaxException  	141	1	add
654	[BUG]  [BUGGY]  offset  =  endOffset  +  3;  parseEndOffset  +  3;  [CE]  not  a  statement  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  3;  parseEndOffset  +  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    3;    parseEndOffset  +  3;	  	non-compiled	[CE]  not  a  statement	141	None	add
655	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  3;  offset  =  endOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    3;    offset  =  endOffset  +  2;	  	compilable	  [FE]  JsonSyntaxException  	141	1	add
656	[BUG]  [BUGGY]  offset  =  endOffset  +  3;  offset  =  endOffset  +  2;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  3;  offset  =  endOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    3;    offset  =  endOffset  +  2;	  	compilable	  [FE]  JsonSyntaxException  	141	1	add
657	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
658	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	4	None	replace
659	[BUG]  [BUGGY]  if(date.charAt(i)!=  '-')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  'catch'  without  'try'  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.charAt(i)!=  '-')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.charAt(i)!=  '-')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	4	None	replace
660	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
661	[BUG]  [BUGGY]  if(date.charAt(i)  ==  '-')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  'catch'  without  'try'  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.charAt(i)  ==  '-')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.charAt(i)  ==  '-')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	4	None	replace
662	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  -=  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  -=  milliseconds;	  offset    =    milliseconds;    	compilable	  [FE]  JsonSyntaxException  	108	1	replace
663	[BUG]  [BUGGY]  offset  -=  milliseconds;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  -=  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  -=  milliseconds;	  offset    =    milliseconds;    	compilable	  [FE]  JsonSyntaxException  	108	1	replace
664	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  offset  =  parseEndOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset    -    offset    +    1;    offset  =  parseEndOffset  -  offset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	207	1	add
665	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  offset  =  parseEndOffset  -  offset  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  offset  =  parseEndOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset    +    1;    offset  =  parseEndOffset  -  offset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	207	1	add
666	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  offset  =  parseStartOffset  -  offset  +  1;  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  offset  =  parseStartOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset    +    1;    offset  =  parseStartOffset  -  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	207	None	add
667	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  Offset  offset  =  parseEndOffset  -  offset  +  1;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  Offset  offset  =  parseEndOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset    +    1;    Offset  offset  =  parseEndOffset  -  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol	207	None	add
668	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  Offset  =  parseEndOffset  -  offset  +  1;  [CE]  cannot  find  symbol  Offset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  Offset  =  parseEndOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset    +    1;    Offset  =  parseEndOffset  -  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Offset	207	None	add
669	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  offset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset    -    offset    +    1;    offset  =  parseEndOffset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	207	1	add
670	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  offset  =  parseEndOffset  +  1;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  offset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset    +    1;    offset  =  parseEndOffset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	207	1	add
671	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  offset  =  byseEndOffset  -  offset  +  1;  [CE]  cannot  find  symbol  byseEndOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  offset  =  byseEndOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset    +    1;    offset  =  byseEndOffset  -  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	207	None	add
672	[BUG]  [BUGGY]  offset  =  DateTimeUtils.getTimeZone(date);  offset  =  offset;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.getTimeZone(date);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.getTimeZone(date);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	136	None	replace
673	[BUG]  [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	136	None	replace
674	[BUG]  [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	136	None	replace
675	[BUG]  [BUGGY]  offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    offset    =    offset;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	136	None	replace
676	[BUG]  [BUGGY]  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	136	None	replace
677	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	214	1	replace
678	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	214	1	replace
679	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	214	None	replace
680	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  length  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	214	None	replace
681	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	214	1	replace
682	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	214	1	replace
683	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
684	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	214	None	replace
685	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset    -    1;    offset  =  offset  -  1;	  	compilable	  [FE]  JsonSyntaxException  	14	1	add
686	[BUG]  [BUGGY]  offset  =  offset  -  1;  offset  =  offset  -  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    offset  =  offset  -  1;	  	compilable	  [FE]  JsonSyntaxException  	14	1	add
687	[BUG]  [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	add
688	[BUG]  [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date);  offset  =  offset  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date);  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date);  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	add
689	[BUG]  [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	add
690	[BUG]  [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateUtils.timezoneIndicator(date);  offset  =  offset  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateUtils.timezoneIndicator(date);  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    timezoneIndicator  =  DateUtils.timezoneIndicator(date);  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	add
691	[BUG]  [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  offset  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	add
692	[BUG]  [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date,  offset);  offset  =  offset  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date,  offset);  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date,  offset);  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	add
693	[BUG]  [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateUtils.getTimeZone(date);  offset  =  offset  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateUtils.getTimeZone(date);  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    timezoneIndicator  =  DateUtils.getTimeZone(date);  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	add
694	[BUG]  [BUGGY]  offset  =  pos  -  parseEndOffset;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  -  parseEndOffset;	  offset    =    pos    -    offset;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	97	None	replace
695	[BUG]  [BUGGY]  offset  =  pos  -  milliseconds;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  -  milliseconds;	  offset    =    pos    -    offset;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	97	None	replace
696	[BUG]  [BUGGY]  offset  =  pos  -  parseStartOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  -  parseStartOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  -  parseStartOffset;	  offset    =    pos    -    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	97	None	replace
697	[BUG]  [BUGGY]  offset  =  pos  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  -  1;	  offset    =    pos    -    offset;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	97	None	replace
698	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        -        1;        offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  1;	  	compilable	  [FE]  JsonSyntaxException  	98	1	add
699	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  1;	  	compilable	  [FE]  JsonSyntaxException  	98	1	add
700	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  int  endOffset  =  endOffset  -  1;  offset  =  endOffset  -  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  int  endOffset  =  endOffset  -  1;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    1;    int  endOffset  =  endOffset  -  1;  offset  =  endOffset  -  1;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	98	None	add
701	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  Offset  endOffset  =  endOffset  -  1;  offset  =  endOffset  -  1;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  Offset  endOffset  =  endOffset  -  1;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    1;    Offset  endOffset  =  endOffset  -  1;  offset  =  endOffset  -  1;	  	non-compiled	[CE]  cannot  find  symbol	98	None	add
702	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  Offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  [CE]  cannot  find  symbol  Offset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  Offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    1;    Offset  =  endOffset  -  1;  offset  =  endOffset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  Offset	98	None	add
703	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  startOffset  -  1;  offset  =  endOffset  -  1;  [CE]  cannot  find  symbol  startOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  startOffset  -  1;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    1;    offset  =  startOffset  -  1;  offset  =  endOffset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  startOffset	98	None	add
704	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	98	None	add
705	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	69	1	replace
706	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	69	1	replace
707	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
708	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "No  time  zone  indicator ");  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "No  time  zone  indicator ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "No  time  zone  indicator ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
709	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
710	[BUG]  [BUGGY]  offset  =  parseStartOffset;  Offset  offset  =  parseEndOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  Offset  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  Offset  offset  =  parseEndOffset;	  offset    =    parseEndOffset;    Offset    offset    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	36	None	replace
711	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  Offset  offset  =  parseEndOffset;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  Offset  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1;  Offset  offset  =  parseEndOffset;	  offset    =    parseEndOffset;    Offset    offset    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
712	[BUG]  [BUGGY]  offset  =  0;  Offset  offset  =  0;  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  Offset  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  Offset  offset  =  0;	  offset    =    parseEndOffset;    Offset    offset    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
713	[BUG]  [BUGGY]  offset  =  endOffset;  Offset  offset  =  parseEndOffset;  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  Offset  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset;  Offset  offset  =  parseEndOffset;	  offset    =    parseEndOffset;    Offset    offset    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
714	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  parseEndOffset;	  offset    =    offset    -    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
715	[BUG]  [BUGGY]  offset  =  endOffset  -  parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  parseEndOffset;	  offset    =    offset    -    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
716	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  /  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  /  parseEndOffset;	  offset    =    offset    -    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
717	[BUG]  [BUGGY]  offset  =  offset  /  parseEndOffset;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  /  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  /  parseEndOffset;	  offset    =    offset    -    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
718	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  parseEndOffset;	  offset    =    offset    -    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
719	[BUG]  [BUGGY]  offset  =  offset  +  parseEndOffset;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  parseEndOffset;	  offset    =    offset    -    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
720	[BUG]  [BUGGY]  offset  =  offset  -  minOffset;  [CE]  cannot  find  symbol  minOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  minOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  minOffset;	  offset    =    offset    -    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol  minOffset	90	None	replace
721	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  -  date.length();	  offset    =    offset    -    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
722	[BUG]  [BUGGY]  offset  =  offset  -  date.length();  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  date.length();	  offset    =    offset    -    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
723	[BUG]  [BUGGY]  parseOffset(offset);  offset  =  0;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseOffset(offset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseOffset(offset);  offset  =  0;	  offset    =    0;    parseOffset(offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
724	[BUG]  [BUGGY]  offset  =  0;  parseOffset(date);  offset  =  0;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseOffset(date);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseOffset(date);  offset  =  0;	  offset    =    0;    parseOffset(offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
725	[BUG]  [BUGGY]  offset  =  0;  parseOffset(date.length());  offset  =  0;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseOffset(date.length());  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseOffset(date.length());  offset  =  0;	  offset    =    0;    parseOffset(offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
726	[BUG]  [BUGGY]  offset  =  0;  parseOffset(timezoneOffset);  offset  =  0;  [CE]  cannot  find  symbol  timezoneOffset  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseOffset(timezoneOffset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseOffset(timezoneOffset);  offset  =  0;	  offset    =    0;    parseOffset(offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	149	None	replace
727	[BUG]  [BUGGY]  offset  =  parseEndOffset(offset);  offset  =  0;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset(offset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset(offset);  offset  =  0;	  offset    =    0;    parseOffset(offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
728	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  -  1;  offset  =  endOffset  -  2;	  offset    =    endOffset    -    1;    offset    =    endOffset    -    2;    	compilable	  [FE]  JsonSyntaxException  	203	1	replace
729	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  endOffset  -  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1;  offset  =  endOffset  -  2;	  offset    =    endOffset    -    1;    offset    =    endOffset    -    2;    	compilable	  [FE]  JsonSyntaxException  	203	1	replace
730	[BUG]  [BUGGY]  offset  =  startOffset  -  1;  offset  =  endOffset  -  2;  [CE]  cannot  find  symbol  startOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  -  1;  offset  =  endOffset  -  2;	  offset    =    endOffset    -    1;    offset    =    endOffset    -    2;    	non-compiled	[CE]  cannot  find  symbol  startOffset	203	None	replace
731	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  startOffset  -  2;  [CE]  cannot  find  symbol  startOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  startOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1;  offset  =  startOffset  -  2;	  offset    =    endOffset    -    1;    offset    =    endOffset    -    2;    	non-compiled	[CE]  cannot  find  symbol  startOffset	203	None	replace
732	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    >=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
733	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    >=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	199	None	replace
734	[BUG]  [BUGGY]  if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    >=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	199	None	replace
735	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >>  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >>  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >>  '0')  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    >=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	199	None	replace
736	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	215	1	add
737	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	215	1	add
738	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	215	1	add
739	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	215	1	add
740	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  endOffset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  endOffset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    int  endOffset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	215	None	add
741	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  endOffset  =  startOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  endOffset  =  startOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    int  endOffset  =  startOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	215	None	add
742	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    int  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	215	None	add
743	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  endOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  endOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    int  endOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	215	None	add
744	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        parseEndOffset;        parseEndOffset    =    parseEndOffset;    offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	33	1	add
745	[BUG]  [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        parseEndOffset    =    parseEndOffset;    offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	33	1	add
746	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        parseEndOffset;        parseEndOffset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	33	1	add
747	[BUG]  [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        parseEndOffset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	33	1	add
748	[BUG]  [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  offset  =  parseStartOffset;  parseEndOffset  =  parseEndOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  offset  =  parseStartOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        parseEndOffset    =    parseEndOffset;    offset  =  parseStartOffset;  parseEndOffset  =  parseEndOffset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	33	None	add
749	[BUG]  [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  Offset  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  Offset  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        parseEndOffset    =    parseEndOffset;    Offset  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
750	[BUG]  [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  parseStartOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  parseStartOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        parseEndOffset    =    parseEndOffset;    parseStartOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	33	None	add
751	[BUG]  [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  offset  =  parseEndOffset;  parseEndOffset  =  parseStartOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  offset  =  parseEndOffset;  parseEndOffset  =  parseStartOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        parseEndOffset    =    parseEndOffset;    offset  =  parseEndOffset;  parseEndOffset  =  parseStartOffset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	33	None	add
752	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
753	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
754	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
755	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
756	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
757	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
758	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
759	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
760	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
761	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
762	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value: ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value: ");  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
763	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value: ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value: ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value: ");  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
764	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -=  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  1;  parseEndOffset  -=  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	104	1	replace
765	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -=  1;  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -=  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  parseEndOffset  -=  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	104	1	replace
766	[BUG]  [BUGGY]  parseEndOffset  -  1;  [CE]  not  a  statement  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	non-compiled	[CE]  not  a  statement	104	None	replace
767	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  parseEndOffset  -  1;  [CE]  not  a  statement  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1;  parseEndOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	non-compiled	[CE]  not  a  statement	104	None	replace
768	[BUG]  [BUGGY]  offset  =  pos.getOffset();  parseEndOffset  -=  pos.getOffset();  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  parseEndOffset  -=  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  parseEndOffset  -=  pos.getOffset();	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
769	[BUG]  [BUGGY]  offset  =  pos.getOffset();  parseEndOffset  -  1;  [CE]  not  a  statement  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  parseEndOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	non-compiled	[CE]  not  a  statement	104	None	replace
770	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -=  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  1;  parseEndOffset  -=  2;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	104	1	replace
771	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -=  2;  [FE]  JsonSyntaxException  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -=  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  parseEndOffset  -=  2;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	104	1	replace
772	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  +  1;  [CE]  not  a  statement  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  parseEndOffset  +  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	non-compiled	[CE]  not  a  statement	104	None	replace
773	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
774	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  }  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
775	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    Math.max(0,    parseEndOffset);    offset  =  Math.max(0,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	111	1	add
776	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(0,    parseEndOffset);    offset  =  Math.max(0,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	111	1	add
777	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  parseStartOffset);  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  parseStartOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(0,    parseEndOffset);    offset  =  Math.max(0,  parseStartOffset);	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	111	None	add
778	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  int  offset  =  Math.max(0,  parseEndOffset);  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  int  offset  =  Math.max(0,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(0,    parseEndOffset);    int  offset  =  Math.max(0,  parseEndOffset);	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	111	None	add
779	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  pos  =  Math.max(0,  parseEndOffset);  [CE]  incompatible  types  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  pos  =  Math.max(0,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(0,    parseEndOffset);    pos  =  Math.max(0,  parseEndOffset);	  	non-compiled	[CE]  incompatible  types	111	None	add
780	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  Offset  =  Math.max(0,  parseEndOffset);  [CE]  cannot  find  symbol  Offset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  Offset  =  Math.max(0,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(0,    parseEndOffset);    Offset  =  Math.max(0,  parseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  Offset	111	None	add
781	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  byseEndOffset);  [CE]  cannot  find  symbol  byseEndOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  byseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(0,    parseEndOffset);    offset  =  Math.max(0,  byseEndOffset);	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	111	None	add
782	[BUG]  [BUGGY]  parseOffset(offset,  0);  offset  =  0;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseOffset(offset,  0);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseOffset(offset,  0);  offset  =  0;	  offset    =    0;    parseOffset(offset,    0);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
783	[BUG]  [BUGGY]  offset  =  0;  parseOffset(date,  0);  offset  =  0;  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseOffset(date,  0);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseOffset(date,  0);  offset  =  0;	  offset    =    0;    parseOffset(offset,    0);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
784	[BUG]  [BUGGY]  offset  =  0;  parseOffset(offset,  1);  offset  =  0;  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseOffset(offset,  1);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseOffset(offset,  1);  offset  =  0;	  offset    =    0;    parseOffset(offset,    0);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
785	[BUG]  [BUGGY]  offset  =  parseOffset(offset,  0);  offset  =  0;  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseOffset(offset,  0);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseOffset(offset,  0);  offset  =  0;	  offset    =    0;    parseOffset(offset,    0);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
786	[BUG]  [BUGGY]  parseOffset(date,  0);  offset  =  0;  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseOffset(date,  0);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseOffset(date,  0);  offset  =  0;	  offset    =    0;    parseOffset(offset,    0);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
787	[BUG]  [BUGGY]  offset  =  parseStartOffset;  offset  =  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  offset  =  offset;	  offset    =    offset;    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	67	None	replace
788	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  offset  =  offset;	  offset    =    offset;    offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	67	1	replace
789	[BUG]  [BUGGY]  offset  =  parseEndOffset;  offset  =  offset;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  offset  =  offset;	  offset    =    offset;    offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	67	1	replace
790	[BUG]  [BUGGY]  offset  =  parseEndOffset;  offset  =  pos;  [CE]  incompatible  types  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  offset  =  pos;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  offset  =  pos;	  offset    =    offset;    offset    =    offset;    	non-compiled	[CE]  incompatible  types	67	None	replace
791	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  offset  =  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    offset  =  date.length();	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
792	[BUG]  [BUGGY]  offset  =  date.length();  offset  =  date.length();  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  offset  =  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    offset  =  date.length();	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
793	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
794	[BUG]  [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
795	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
796	[BUG]  [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
797	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
798	[BUG]  [BUGGY]  offset  =  date.length();  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
799	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  date.length();  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  date.length();  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
800	[BUG]  [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  date.length();  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  date.length();  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  date.length();  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
801	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  date.length();  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  date.length();  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
802	[BUG]  [BUGGY]  offset  =  date.length();  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  date.length();  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  date.length();  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  date.length();  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
803	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
804	[BUG]  [BUGGY]  offset  =  date.length();  if(offset  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
805	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
806	[BUG]  [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
807	[BUG]  [BUGGY]  offset  =  date.getLocalMillis();  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.getLocalMillis();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.getLocalMillis();	  offset    =    pos.getLocalMillis();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
808	[BUG]  [BUGGY]  offset  =  parseEndOffset.getLocalMillis();  [CE]  int  cannot  be  dereferenced  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset.getLocalMillis();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.getLocalMillis();	  offset    =    pos.getLocalMillis();    	non-compiled	[CE]  int  cannot  be  dereferenced	42	None	replace
809	[BUG]  [BUGGY]  offset  =  DateUtils.getLocalMillis(pos);  [CE]  cannot  find  symbol  DateUtils  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getLocalMillis(pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getLocalMillis(pos);	  offset    =    pos.getLocalMillis();    	non-compiled	[CE]  cannot  find  symbol  DateUtils	42	None	replace
810	[BUG]  [BUGGY]  offset  =  this.date.getLocalMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.date.getLocalMillis();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.date.getLocalMillis();	  offset    =    pos.getLocalMillis();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	42	None	replace
811	[BUG]  [BUGGY]  offset  =  parseStartOffset.getLocalMillis();  [CE]  cannot  find  symbol  parseStartOffset  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset.getLocalMillis();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset.getLocalMillis();	  offset    =    pos.getLocalMillis();    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	42	None	replace
812	[BUG]  [BUGGY]  offset  =  pos.getLocalMillis()  +  1;  [CE]  cannot  find  symbol  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getLocalMillis()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getLocalMillis()  +  1;	  offset    =    pos.getLocalMillis();    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
813	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  offset  =  0;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    offset  =  0;  offset  =  0;	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
814	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  offset  =  0;  offset  =  0;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  offset  =  0;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    offset  =  0;  offset  =  0;	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
815	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
816	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
817	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
818	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
819	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
820	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
821	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  ==  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  ==  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
822	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  ==  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  ==  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  ==  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
823	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  int  offset  =  0;  offset  =  0;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  int  offset  =  0;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    int  offset  =  0;  offset  =  0;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	123	None	add
824	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
825	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
826	[BUG]  [BUGGY]  offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	190	None	replace
827	[BUG]  [BUGGY]  offset  =  parseStartOffset();  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset();  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset();  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	190	None	replace
828	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
829	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
830	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  length)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  length  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  length)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  length)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	190	None	replace
831	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  len)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  len  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  len)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  len)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  len	190	None	replace
832	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
833	[BUG]  [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
834	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    ==    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
835	[BUG]  [BUGGY]  if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    ==    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	148	None	replace
836	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    ==    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
837	[BUG]  [BUGGY]  while(offset  <  =  date.length())  {  if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  =  date.length())  {  if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  =  date.length())  {  if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  }	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
838	[BUG]  [BUGGY]  while(offset  <  date.length())  {  if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  date.length())  {  if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  date.length())  {  if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  }	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
839	[BUG]  [BUGGY]  if(offset  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
840	[BUG]  [BUGGY]  parseEndOffset(date.length()  -  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset(date.length()  -  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset(date.length()  -  offset)  {  throw  new  IllegalArgumentException( " ");  }	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	58	None	replace
841	[BUG]  [BUGGY]  while(offset  <  =  date.length())  {  if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( "No  time  zone  indicator ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  =  date.length())  {  if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( "No  time  zone  indicator ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  =  date.length())  {  if(date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( "No  time  zone  indicator ");  }	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
842	[BUG]  [BUGGY]  while(offset  <  =  date.length())  {  if(date.charAt(offset)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  =  date.length())  {  if(date.charAt(offset)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  =  date.length())  {  if(date.charAt(offset)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
843	[BUG]  [BUGGY]  while(offset  <  0  ||  date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  0  ||  date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  0  ||  date.length()  <  =  offset)  {  throw  new  IllegalArgumentException( " ");	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
844	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.min(parseEndOffset,  milliseconds);	  offset    =    Math.max(offset,    milliseconds);    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
845	[BUG]  [BUGGY]  offset  =  Math.min(parseEndOffset,  milliseconds);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.min(parseEndOffset,  milliseconds);	  offset    =    Math.max(offset,    milliseconds);    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
846	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.min(milliseconds,  parseEndOffset);	  offset    =    Math.max(offset,    milliseconds);    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
847	[BUG]  [BUGGY]  offset  =  Math.min(milliseconds,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(milliseconds,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.min(milliseconds,  parseEndOffset);	  offset    =    Math.max(offset,    milliseconds);    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
848	[BUG]  [BUGGY]  offset  =  Math.max(milliseconds,  parseStartOffset);  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(milliseconds,  parseStartOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(milliseconds,  parseStartOffset);	  offset    =    Math.max(offset,    milliseconds);    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	106	None	replace
849	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds  -  1);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(offset,  milliseconds  -  1);	  offset    =    Math.max(offset,    milliseconds);    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
850	[BUG]  [BUGGY]  offset  =  Math.max(offset,  milliseconds  -  1);  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds  -  1);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(offset,  milliseconds  -  1);	  offset    =    Math.max(offset,    milliseconds);    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
851	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
852	[BUG]  [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
853	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
854	[BUG]  [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
855	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
856	[BUG]  [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
857	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
858	[BUG]  [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
859	[BUG]  [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	76	None	add
860	[BUG]  [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	76	None	add
861	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
862	[BUG]  [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
863	[BUG]  [BUGGY]  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
864	[BUG]  [BUGGY]  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IndexOutOfBoundsException( " ",  parseEndOffset);  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IndexOutOfBoundsException( " ",  parseEndOffset);  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IndexOutOfBoundsException( " ",  parseEndOffset);  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
865	[BUG]  [BUGGY]  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
866	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(0,  milliseconds);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
867	[BUG]  [BUGGY]  offset  =  Math.max(0,  milliseconds);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(0,  milliseconds);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
868	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(1,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(1,  parseEndOffset);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
869	[BUG]  [BUGGY]  offset  =  Math.max(1,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(1,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(1,  parseEndOffset);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
870	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset  -  1);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(0,  parseEndOffset  -  1);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
871	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset  -  1);  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset  -  1);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(0,  parseEndOffset  -  1);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
872	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseStartOffset);  [CE]  cannot  find  symbol  parseStartOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseStartOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(0,  parseStartOffset);	  offset    =    Math.max(0,    parseEndOffset);    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	112	None	replace
873	[BUG]  [BUGGY]  offset  =  Math.max(10.0,  parseEndOffset);  [CE]  possible  loss  of  precision  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(10.0,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(10.0,  parseEndOffset);	  offset    =    Math.max(0,    parseEndOffset);    	non-compiled	[CE]  possible  loss  of  precision	112	None	replace
874	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset  +  1);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(0,  parseEndOffset  +  1);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
875	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset  +  1);  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset  +  1);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(0,  parseEndOffset  +  1);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
876	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(0,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.min(0,  parseEndOffset);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
877	[BUG]  [BUGGY]  offset  =  Math.min(0,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(0,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.min(0,  parseEndOffset);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
878	[BUG]  [BUGGY]  offset  =  0;  parseEndOffset.add( "- ");  offset  =  0;  [CE]  int  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseEndOffset.add( "- ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseEndOffset.add( "- ");  offset  =  0;	  offset    =    0;    result.add(   "-   ");    offset    =    0;    	non-compiled	[CE]  int  cannot  be  dereferenced	183	None	replace
879	[BUG]  [BUGGY]  offset  =  0;  parseStartOffset.add( "- ");  offset  =  0;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseStartOffset.add( "- ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseStartOffset.add( "- ");  offset  =  0;	  offset    =    0;    result.add(   "-   ");    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	183	None	replace
880	[BUG]  [BUGGY]  offset  =  0;  this.timezoneIndicator.add( "- ");  offset  =  0;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  this.timezoneIndicator.add( "- ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  this.timezoneIndicator.add( "- ");  offset  =  0;	  offset    =    0;    result.add(   "-   ");    offset    =    0;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	183	None	replace
881	[BUG]  [BUGGY]  offset  =  0;  this.date.add( "- ");  offset  =  0;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  this.date.add( "- ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  this.date.add( "- ");  offset  =  0;	  offset    =    0;    result.add(   "-   ");    offset    =    0;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	183	None	replace
882	[BUG]  [BUGGY]  offset  =  pos  -  parseEndOffset.getOffset();  [CE]  int  cannot  be  dereferenced  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  -  parseEndOffset.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  -  parseEndOffset.getOffset();	  offset    =    parseEndOffset    -    pos.getOffset();    	non-compiled	[CE]  int  cannot  be  dereferenced	30	None	replace
883	[BUG]  [BUGGY]  offset  =  offset  -  pos.getOffset();  [CE]  cannot  find  symbol  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  pos.getOffset();	  offset    =    parseEndOffset    -    pos.getOffset();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
884	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  date.getOffset();  [CE]  cannot  find  symbol  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  date.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  date.getOffset();	  offset    =    parseEndOffset    -    pos.getOffset();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
885	[BUG]  [BUGGY]  offset  =  endOffset  -  pos.getOffset();  [CE]  cannot  find  symbol  [FE]                                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  pos.getOffset();	  offset    =    parseEndOffset    -    pos.getOffset();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
886	[BUG]  [BUGGY]  offset  =  date.length()  -  pos.getOffset();  [CE]  cannot  find  symbol  [FE]                                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length()  -  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.length()  -  pos.getOffset();	  offset    =    parseEndOffset    -    pos.getOffset();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
887	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  -  parseEndOffset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(milliseconds  -  parseEndOffset)/  10;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	119	1	replace
888	[BUG]  [BUGGY]  offset  =(milliseconds  -  parseEndOffset)/  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  -  parseEndOffset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(milliseconds  -  parseEndOffset)/  10;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	119	1	replace
889	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  milliseconds)/  2;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	119	1	replace
890	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  2;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  milliseconds)/  2;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	119	1	replace
891	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(offset  -  milliseconds)/  10;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	119	1	replace
892	[BUG]  [BUGGY]  offset  =(offset  -  milliseconds)/  10;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  milliseconds)/  10;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	119	1	replace
893	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  1000;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  milliseconds)/  1000;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	119	1	replace
894	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  1000;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  1000;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  milliseconds)/  1000;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	119	1	replace
895	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  milliseconds)/  3;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	119	1	replace
896	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  3;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  milliseconds)/  3;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	119	1	replace
897	[BUG]  [BUGGY]  offset  =(parseStartOffset  -  milliseconds)/  10;  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseStartOffset  -  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseStartOffset  -  milliseconds)/  10;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	119	None	replace
898	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  -1;	  offset    =    -offset;    	compilable	  [FE]  JsonSyntaxException  	177	1	replace
899	[BUG]  [BUGGY]  offset  =  -1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  -1;	  offset    =    -offset;    	compilable	  [FE]  JsonSyntaxException  	177	1	replace
900	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  -offset  +  1;	  offset    =    -offset;    	compilable	  [FE]  JsonSyntaxException  	177	1	replace
901	[BUG]  [BUGGY]  offset  =  -offset  +  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  -offset  +  1;	  offset    =    -offset;    	compilable	  [FE]  JsonSyntaxException  	177	1	replace
902	[BUG]  [BUGGY]  offset  =  -parseStartOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -parseStartOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  -parseStartOffset;	  offset    =    -offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	177	None	replace
903	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  -offset  -  1;	  offset    =    -offset;    	compilable	  [FE]  JsonSyntaxException  	177	1	replace
904	[BUG]  [BUGGY]  offset  =  -offset  -  1;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  -offset  -  1;	  offset    =    -offset;    	compilable	  [FE]  JsonSyntaxException  	177	1	replace
905	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  -offset  +  2;	  offset    =    -offset;    	compilable	  [FE]  JsonSyntaxException  	177	1	replace
906	[BUG]  [BUGGY]  offset  =  -offset  +  2;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  -offset  +  2;	  offset    =    -offset;    	compilable	  [FE]  JsonSyntaxException  	177	1	replace
907	[BUG]  [BUGGY]  offset  =  parseEndOffset;  pos  =  0;  offset  =  0;  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  pos  =  0;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  pos  =  0;  offset  =  0;	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  incompatible  types	152	None	replace
908	[BUG]  [BUGGY]  offset  =  parseStartOffset;  pos  =  0;  offset  =  0;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  pos  =  0;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  pos  =  0;  offset  =  0;	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	152	None	replace
909	[BUG]  [BUGGY]  offset  =  parseEndOffset;  pos  =  0;  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  pos  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  pos  =  0;	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  incompatible  types	152	None	replace
910	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  0;  offset  =  0;  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  0;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  offset;  pos  =  0;  offset  =  0;	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  incompatible  types	152	None	replace
911	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  offset  =  0;	  offset    =    0;    pos    =    0;    offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	152	1	replace
912	[BUG]  [BUGGY]  offset  =  parseEndOffset;  offset  =  0;  [FE]  JsonSyntaxException  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  offset  =  0;	  offset    =    0;    pos    =    0;    offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	152	1	replace
913	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
914	[BUG]  [BUGGY]  offset  =  offset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
915	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
916	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
917	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
918	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
919	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
920	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
921	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
922	[BUG]  [BUGGY]  offset  =  offset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;  if(offset!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
923	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	173	None	replace
924	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
925	[BUG]  [BUGGY]  offset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
926	[BUG]  [BUGGY]  offset  =  date.getLength();  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.getLength();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.getLength();	  offset    =    pos.getLength();    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
927	[BUG]  [BUGGY]  offset  =  parseEndOffset.getLength();  [CE]  int  cannot  be  dereferenced  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset.getLength();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.getLength();	  offset    =    pos.getLength();    	non-compiled	[CE]  int  cannot  be  dereferenced	210	None	replace
928	[BUG]  [BUGGY]  offset  =  parseStartOffset.getLength();  [CE]  cannot  find  symbol  parseStartOffset  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset.getLength();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset.getLength();	  offset    =    pos.getLength();    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	210	None	replace
929	[BUG]  [BUGGY]  offset  =  DateUtils.getLength(pos);  [CE]  cannot  find  symbol  DateUtils  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getLength(pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getLength(pos);	  offset    =    pos.getLength();    	non-compiled	[CE]  cannot  find  symbol  DateUtils	210	None	replace
930	[BUG]  [BUGGY]  offset  =  this.date.getLength();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.date.getLength();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.date.getLength();	  offset    =    pos.getLength();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	210	None	replace
931	[BUG]  [BUGGY]  offset  =  DateTimeUtils.getLength(pos);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.getLength(pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.getLength(pos);	  offset    =    pos.getLength();    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	210	None	replace
932	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  1;  parseEndOffset  =  0;	  offset    =    0;    parseEndOffset    =    0;    	compilable	  [FE]  JsonSyntaxException  	185	1	replace
933	[BUG]  [BUGGY]  offset  =  1;  parseEndOffset  =  0;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  1;  parseEndOffset  =  0;	  offset    =    0;    parseEndOffset    =    0;    	compilable	  [FE]  JsonSyntaxException  	185	1	replace
934	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -1;  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  -1;  parseEndOffset  =  0;	  offset    =    0;    parseEndOffset    =    0;    	compilable	  [FE]  JsonSyntaxException  	185	1	replace
935	[BUG]  [BUGGY]  offset  =  -1;  parseEndOffset  =  0;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -1;  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  -1;  parseEndOffset  =  0;	  offset    =    0;    parseEndOffset    =    0;    	compilable	  [FE]  JsonSyntaxException  	185	1	replace
936	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseEndOffset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  parseEndOffset  =  1;	  offset    =    0;    parseEndOffset    =    0;    	compilable	  [FE]  JsonSyntaxException  	185	1	replace
937	[BUG]  [BUGGY]  offset  =  0;  parseEndOffset  =  1;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseEndOffset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseEndOffset  =  1;	  offset    =    0;    parseEndOffset    =    0;    	compilable	  [FE]  JsonSyntaxException  	185	1	replace
938	[BUG]  [BUGGY]  offset  =  0;  byseEndOffset  =  0;  [CE]  cannot  find  symbol  byseEndOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  byseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  byseEndOffset  =  0;	  offset    =    0;    parseEndOffset    =    0;    	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	185	None	replace
939	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	48	1	replace
940	[BUG]  [BUGGY]  offset  =  offset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	48	1	replace
941	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	48	1	replace
942	[BUG]  [BUGGY]  offset  =  offset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	48	1	replace
943	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	48	1	replace
944	[BUG]  [BUGGY]  offset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	48	1	replace
945	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	48	None	replace
946	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  offset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset    +    1;    offset  =  parseEndOffset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	19	1	add
947	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  offset  =  parseEndOffset  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  offset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    +    1;    offset  =  parseEndOffset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	19	1	add
948	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  Offset  offset  =  parseEndOffset  +  1;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  Offset  offset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    +    1;    Offset  offset  =  parseEndOffset  +  1;	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
949	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  pos  =  parseEndOffset  +  1;  [CE]  incompatible  types  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  pos  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    +    1;    pos  =  parseEndOffset  +  1;	  	non-compiled	[CE]  incompatible  types	19	None	add
950	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  offset  =  parseStartOffset  +  1;  [CE]  cannot  find  symbol  parseStartOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  offset  =  parseStartOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    +    1;    offset  =  parseStartOffset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	19	None	add
951	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  Offset  =  parseEndOffset  +  1;  [CE]  cannot  find  symbol  Offset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  Offset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    +    1;    Offset  =  parseEndOffset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Offset	19	None	add
952	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  parseEndOffset  +  1;  [CE]  not  a  statement  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    +    1;    parseEndOffset  +  1;	  	non-compiled	[CE]  not  a  statement	19	None	add
953	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  milliseconds;	  offset    =    endOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	96	1	replace
954	[BUG]  [BUGGY]  offset  =  endOffset  -  milliseconds;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  milliseconds;	  offset    =    endOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	96	1	replace
955	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  date.length();	  offset    =    endOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	96	1	replace
956	[BUG]  [BUGGY]  offset  =  endOffset  -  date.length();  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  date.length();	  offset    =    endOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	96	1	replace
957	[BUG]  [BUGGY]  offset  =  endOffset  -  parseStartOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  parseStartOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  parseStartOffset;	  offset    =    endOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	96	None	replace
958	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  endOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  -  endOffset;	  offset    =    endOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	96	1	replace
959	[BUG]  [BUGGY]  offset  =  offset  -  endOffset;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  endOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  endOffset;	  offset    =    endOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	96	1	replace
960	[BUG]  [BUGGY]  offset  =  length  -  1;  [CE]  cannot  find  symbol  length  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  length  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  length  -  1;	  offset    =    endOffset    -    1;    offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	99	None	replace
961	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	compilable	  [FE]  JsonSyntaxException  	220	1	replace
962	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	compilable	  [FE]  JsonSyntaxException  	220	1	replace
963	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	220	None	replace
964	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	compilable	  [FE]  JsonSyntaxException  	220	1	replace
965	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.. ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	compilable	  [FE]  JsonSyntaxException  	220	1	replace
966	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	compilable	  [FE]  JsonSyntaxException  	220	1	replace
967	[BUG]  [BUGGY]  offset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	compilable	  [FE]  JsonSyntaxException  	220	1	replace
968	[BUG]  [BUGGY]  offset  =  this.parseEndOffset.getOffset();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.parseEndOffset.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.parseEndOffset.getOffset();	  offset    =    parseEndOffset.getOffset();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	26	None	replace
969	[BUG]  [BUGGY]  offset  =  byseEndOffset.getOffset();  [CE]  cannot  find  symbol  byseEndOffset  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  byseEndOffset.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  byseEndOffset.getOffset();	  offset    =    parseEndOffset.getOffset();    	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	26	None	replace
970	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  2;	  offset    =    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
971	[BUG]  [BUGGY]  offset  =  offset  +  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  2;	  offset    =    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
972	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  /  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  /  1;	  offset    =    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
973	[BUG]  [BUGGY]  offset  =  offset  /  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  /  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  /  1;	  offset    =    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
974	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  3;	  offset    =    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
975	[BUG]  [BUGGY]  offset  =  offset  +  3;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  3;	  offset    =    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
976	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  0;  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  0;	  offset    =    parseEndOffset?    pos.getOffset()    :    pos;    	non-compiled	[CE]  incompatible  types	143	None	replace
977	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  1;  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  1;	  offset    =    parseEndOffset?    pos.getOffset()    :    pos;    	non-compiled	[CE]  incompatible  types	143	None	replace
978	[BUG]  [BUGGY]  offset  =  pos?  parseEndOffset.getOffset()  :  parseEndOffset;  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos?  parseEndOffset.getOffset()  :  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos?  parseEndOffset.getOffset()  :  parseEndOffset;	  offset    =    parseEndOffset?    pos.getOffset()    :    pos;    	non-compiled	[CE]  incompatible  types	143	None	replace
979	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset    -    1;    offset  =  parseEndOffset  -  1;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
980	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  parseEndOffset  -  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    1;    offset  =  parseEndOffset  -  1;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
981	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  Offset  offset  =  parseEndOffset  -  1;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  Offset  offset  =  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    1;    Offset  offset  =  parseEndOffset  -  1;	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
982	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  parseStartOffset  -  1;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  parseStartOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    1;    offset  =  parseStartOffset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	8	None	add
983	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  Offset  =  parseEndOffset  -  1;  [CE]  cannot  find  symbol  Offset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  Offset  =  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    1;    Offset  =  parseEndOffset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  Offset	8	None	add
984	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  byseEndOffset  -  1;  [CE]  cannot  find  symbol  byseEndOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  byseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    1;    offset  =  byseEndOffset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	8	None	add
985	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  parseEndOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset    -    1;    offset  =  parseEndOffset  -  2;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
986	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  parseEndOffset  -  2;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  offset  =  parseEndOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    1;    offset  =  parseEndOffset  -  2;	  	compilable	  [FE]  JsonSyntaxException  	8	1	add
987	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length()  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  date.length()  -  offset;	  offset    =    timezoneOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	165	1	replace
988	[BUG]  [BUGGY]  offset  =  date.length()  -  offset;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length()  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.length()  -  offset;	  offset    =    timezoneOffset    -    offset;    	compilable	  [FE]  JsonSyntaxException  	165	1	replace
989	[BUG]  [BUGGY]  offset  =  date.length  -  offset;  [CE]  cannot  find  symbol  length  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.length  -  offset;	  offset    =    timezoneOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  length	165	None	replace
990	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
991	[BUG]  [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
992	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
993	[BUG]  [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
994	[BUG]  [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  offset  =  offset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	74	None	add
995	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
996	[BUG]  [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
997	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
998	[BUG]  [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  offset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
999	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
1000	[BUG]  [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset!=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	74	1	add
1001	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  -  parseEndOffset  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	208	1	replace
1002	[BUG]  [BUGGY]  offset  =  offset  -  parseEndOffset  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  parseEndOffset  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	208	1	replace
1003	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  -  milliseconds  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	208	1	replace
1004	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  milliseconds  +  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  milliseconds  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	208	1	replace
1005	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  milliseconds  -  offset  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	208	1	replace
1006	[BUG]  [BUGGY]  offset  =  milliseconds  -  offset  +  1;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  -  offset  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	208	1	replace
1007	[BUG]  [BUGGY]  offset  =  pos.offset  -  offset  +  1;  [CE]  cannot  find  symbol  offset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  offset  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	non-compiled	[CE]  cannot  find  symbol  offset	208	None	replace
1008	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  offset  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	208	1	replace
1009	[BUG]  [BUGGY]  offset  =  endOffset  -  offset  +  1;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  offset  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	208	1	replace
1010	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  pos  +  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  pos  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  pos  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	208	None	replace
1011	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  dateOffset  +  1;  [CE]  cannot  find  symbol  dateOffset  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  dateOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  dateOffset  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	non-compiled	[CE]  cannot  find  symbol  dateOffset	208	None	replace
1012	[BUG]  [BUGGY]  offset  =  timezoneOffset.length();  [CE]  cannot  find  symbol  timezoneOffset  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  timezoneOffset.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneOffset.length();	  offset    =    parseStartOffset.length();    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	86	None	replace
1013	[BUG]  [BUGGY]  offset  =  this.timezoneOffset.length();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.timezoneOffset.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.timezoneOffset.length();	  offset    =    parseStartOffset.length();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	86	None	replace
1014	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  milliseconds  -  parseEndOffset;	  offset    =    parseEndOffset    -    milliseconds;    	compilable	  [FE]  JsonSyntaxException  	94	1	replace
1015	[BUG]  [BUGGY]  offset  =  milliseconds  -  parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  -  parseEndOffset;	  offset    =    parseEndOffset    -    milliseconds;    	compilable	  [FE]  JsonSyntaxException  	94	1	replace
1016	[BUG]  [BUGGY]  offset  =  pos.getOffset()  -  milliseconds;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  -  milliseconds;	  offset    =    parseEndOffset    -    milliseconds;    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
1017	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  fraction  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  fraction  -  milliseconds;	  offset    =    parseEndOffset    -    milliseconds;    	compilable	  [FE]  JsonSyntaxException  	94	1	replace
1018	[BUG]  [BUGGY]  offset  =  fraction  -  milliseconds;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  fraction  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  fraction  -  milliseconds;	  offset    =    parseEndOffset    -    milliseconds;    	compilable	  [FE]  JsonSyntaxException  	94	1	replace
1019	[BUG]  [BUGGY]  offset  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset;  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	135	None	replace
1020	[BUG]  [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	135	None	replace
1021	[BUG]  [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	135	None	replace
1022	[BUG]  [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	135	None	replace
1023	[BUG]  [BUGGY]  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	135	None	replace
1024	[BUG]  [BUGGY]  offset  =  parseEndOffset;  pos  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  pos  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  pos  =  DateTimeUtils.getTimezoneIndicator(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	135	None	replace
1025	[BUG]  [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  cannot  find  symbol  parseStartOffset  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	135	None	replace
1026	[BUG]  [BUGGY]  offset  =  offset  -  parseEndOffset;  pos  =  parseEndOffset  -  offset;  [CE]  incompatible  types  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset;  pos  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  parseEndOffset;  pos  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    pos    =    parseEndOffset    -    offset;    	non-compiled	[CE]  incompatible  types	164	None	replace
1027	[BUG]  [BUGGY]  pos  =  parseEndOffset  -  offset;  [CE]  incompatible  types  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  pos  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	pos  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    pos    =    parseEndOffset    -    offset;    	non-compiled	[CE]  incompatible  types	164	None	replace
1028	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  pos  =  parseEndOffset  -  1;  [CE]  incompatible  types  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  pos  =  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1;  pos  =  parseEndOffset  -  1;	  offset    =    parseEndOffset    -    offset;    pos    =    parseEndOffset    -    offset;    	non-compiled	[CE]  incompatible  types	164	None	replace
1029	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  1;  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  1;	  offset    =    parseEndOffset    -    offset;    pos    =    parseEndOffset    -    offset;    	non-compiled	[CE]  incompatible  types	164	None	replace
1030	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  fraction;  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  fraction;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  fraction;	  offset    =    parseEndOffset    -    offset;    pos    =    parseEndOffset    -    offset;    	non-compiled	[CE]  incompatible  types	164	None	replace
1031	[BUG]  [BUGGY]  offset  =(offset  -  parseEndOffset)?  1  :  0;  [CE]  incompatible  types  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseEndOffset)?  1  :  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  parseEndOffset)?  1  :  0;	  offset    =(parseEndOffset    -    offset)?    1    :    0;    	non-compiled	[CE]  incompatible  types	188	None	replace
1032	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)?  1  :  0;  [CE]  incompatible  types  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)?  1  :  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  milliseconds)?  1  :  0;	  offset    =(parseEndOffset    -    offset)?    1    :    0;    	non-compiled	[CE]  incompatible  types	188	None	replace
1033	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  date)?  1  :  0;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  date)?  1  :  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  date)?  1  :  0;	  offset    =(parseEndOffset    -    offset)?    1    :    0;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	188	None	replace
1034	[BUG]  [BUGGY]  offset  =(parseStartOffset  -  offset)?  1  :  0;  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseStartOffset  -  offset)?  1  :  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseStartOffset  -  offset)?  1  :  0;	  offset    =(parseEndOffset    -    offset)?    1    :    0;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	188	None	replace
1035	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  start)?  1  :  0;  [CE]  cannot  find  symbol  start  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  start)?  1  :  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  start)?  1  :  0;	  offset    =(parseEndOffset    -    offset)?    1    :    0;    	non-compiled	[CE]  cannot  find  symbol  start	188	None	replace
1036	[BUG]  [BUGGY]  offset  =(offset  -  parseEndOffset)?  1L  :  0;  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseEndOffset)?  1L  :  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  parseEndOffset)?  1L  :  0;	  offset    =(parseEndOffset    -    offset)?    1    :    0;    	non-compiled	[CE]  incompatible  types	188	None	replace
1037	[BUG]  [BUGGY]  offset  =  date.intValue();  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.intValue();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.intValue();	  offset    =    pos.intValue();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
1038	[BUG]  [BUGGY]  offset  =  pos.longValue();  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.longValue();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.longValue();	  offset    =    pos.intValue();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
1039	[BUG]  [BUGGY]  offset  =  parseEndOffset.intValue();  [CE]  int  cannot  be  dereferenced  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset.intValue();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.intValue();	  offset    =    pos.intValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	41	None	replace
1040	[BUG]  [BUGGY]  offset  =  DateUtils.intValue(pos);  [CE]  cannot  find  symbol  DateUtils  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.intValue(pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.intValue(pos);	  offset    =    pos.intValue();    	non-compiled	[CE]  cannot  find  symbol  DateUtils	41	None	replace
1041	[BUG]  [BUGGY]  offset  =  this.date.intValue();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.date.intValue();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.date.intValue();	  offset    =    pos.intValue();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	41	None	replace
1042	[BUG]  [BUGGY]  offset  =  pos.doubleValue();  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.doubleValue();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.doubleValue();	  offset    =    pos.intValue();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
1043	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    milliseconds;    offset  =  milliseconds;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1044	[BUG]  [BUGGY]  offset  =  milliseconds;  offset  =  milliseconds;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    offset  =  milliseconds;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1045	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  ==  0)  {  offset  =  milliseconds;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    milliseconds;    if(offset  ==  0)  {  offset  =  milliseconds;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1046	[BUG]  [BUGGY]  offset  =  milliseconds;  if(offset  ==  0)  {  offset  =  milliseconds;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  ==  0)  {  offset  =  milliseconds;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    if(offset  ==  0)  {  offset  =  milliseconds;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1047	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  <  milliseconds)  {  offset  =  milliseconds;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    milliseconds;    if(offset  <  milliseconds)  {  offset  =  milliseconds;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1048	[BUG]  [BUGGY]  offset  =  milliseconds;  if(offset  <  milliseconds)  {  offset  =  milliseconds;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  <  milliseconds)  {  offset  =  milliseconds;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    if(offset  <  milliseconds)  {  offset  =  milliseconds;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1049	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  <  milliseconds)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    milliseconds;    if(offset  <  milliseconds)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1050	[BUG]  [BUGGY]  offset  =  milliseconds;  if(offset  <  milliseconds)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  <  milliseconds)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    if(offset  <  milliseconds)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1051	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  <  milliseconds)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  milliseconds;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    milliseconds;    if(offset  <  milliseconds)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  milliseconds;  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1052	[BUG]  [BUGGY]  offset  =  milliseconds;  if(offset  <  milliseconds)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  milliseconds;  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  <  milliseconds)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  milliseconds;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    if(offset  <  milliseconds)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  milliseconds;  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1053	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  milliseconds;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    milliseconds;    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  milliseconds;  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1054	[BUG]  [BUGGY]  offset  =  milliseconds;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  milliseconds;  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  milliseconds;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  milliseconds;  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1055	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    milliseconds;    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1056	[BUG]  [BUGGY]  offset  =  milliseconds;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1057	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    milliseconds;    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  milliseconds;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1058	[BUG]  [BUGGY]  offset  =  milliseconds;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  milliseconds;  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  milliseconds;	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1059	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)    ==    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1060	[BUG]  [BUGGY]  if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  'catch'  without  'try'  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.charAt(i)  ==  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)    ==    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	6	None	replace
1061	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)    ==    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1062	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i  +  1)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i  +  1)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i  +  1)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)    ==    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	6	None	replace
1063	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	212	None	replace
1064	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  length  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	212	None	replace
1065	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	212	None	replace
1066	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	212	None	replace
1067	[BUG]  [BUGGY]  offset  =  endOffset;  pos.setLength(parseEndOffset);  offset  =  offset;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  pos.setLength(parseEndOffset);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset;  pos.setLength(parseEndOffset);  offset  =  offset;	  offset    =    offset;    pos.setLength(parseEndOffset);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
1068	[BUG]  [BUGGY]  offset  =  pos.setLength(parseEndOffset);  offset  =  offset;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.setLength(parseEndOffset);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.setLength(parseEndOffset);  offset  =  offset;	  offset    =    offset;    pos.setLength(parseEndOffset);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
1069	[BUG]  [BUGGY]  pos.setLength(parseEndOffset);  offset  =  offset;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  pos.setLength(parseEndOffset);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	pos.setLength(parseEndOffset);  offset  =  offset;	  offset    =    offset;    pos.setLength(parseEndOffset);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
1070	[BUG]  [BUGGY]  offset  =  pos.getLength();  offset  =  offset;  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getLength();  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getLength();  offset  =  offset;	  offset    =    offset;    pos.setLength(parseEndOffset);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
1071	[BUG]  [BUGGY]  offset  =  parseStartOffset(parseEndOffset);  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset(parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset(parseEndOffset);	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
1072	[BUG]  [BUGGY]  offset  =  parseStartOffset(parseEndOffset,  pos);  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset(parseEndOffset,  pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset(parseEndOffset,  pos);	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
1073	[BUG]  [BUGGY]  offset  =  parseEndOffset(parseEndOffset,  pos);  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset(parseEndOffset,  pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset(parseEndOffset,  pos);	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
1074	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	49	1	add
1075	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	49	1	add
1076	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	49	1	add
1077	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	49	1	add
1078	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  endOffset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	49	None	add
1079	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	49	None	add
1080	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  startOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  startOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  endOffset  =  startOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	49	None	add
1081	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  endOffset  =  offset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	49	None	add
1082	[BUG]  [BUGGY]  offset  =  this.date.length()  -  1;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.date.length()  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.date.length()  -  1;	  offset    =    this.date.length();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	88	None	replace
1083	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	43	1	add
1084	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	43	1	add
1085	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  int  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  int  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        offset    =    endOffset    +    1;    int  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	43	None	add
1086	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  int  endOffset  =  endOffset  +  1;  offset  =  endOffset  +  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  int  endOffset  =  endOffset  +  1;  offset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        offset    =    endOffset    +    1;    int  endOffset  =  endOffset  +  1;  offset  =  endOffset  +  1;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	43	None	add
1087	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  offset  =  startOffset  +  1;  [CE]  cannot  find  symbol  startOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  offset  =  startOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  startOffset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  startOffset	43	None	add
1088	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  offset  =  endOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  2;	  	compilable	  [FE]  JsonSyntaxException  	43	1	add
1089	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  offset  =  endOffset  +  2;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  offset  =  endOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  2;	  	compilable	  [FE]  JsonSyntaxException  	43	1	add
1090	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1091	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1092	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1093	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1094	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1095	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1096	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1097	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1098	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1099	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1100	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1101	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1102	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	168	None	add
1103	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -=  startOffset;  offset  =  endOffset  -  1;  [CE]  cannot  find  symbol  startOffset  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -=  startOffset;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  parseEndOffset  -=  startOffset;  offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    startOffset;    offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  startOffset	154	None	replace
1104	[BUG]  [BUGGY]  parseEndOffset  -  startOffset;  offset  =  endOffset  -  1;  [CE]  not  a  statement  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -  startOffset;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  -  startOffset;  offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    startOffset;    offset    =    endOffset    -    1;    	non-compiled	[CE]  not  a  statement	154	None	replace
1105	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseEndOffset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(offset  -  parseEndOffset)/  2;	  offset    =(parseEndOffset    -    offset)/    2;    	compilable	  [FE]  JsonSyntaxException  	160	1	replace
1106	[BUG]  [BUGGY]  offset  =(offset  -  parseEndOffset)/  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseEndOffset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  parseEndOffset)/  2;	  offset    =(parseEndOffset    -    offset)/    2;    	compilable	  [FE]  JsonSyntaxException  	160	1	replace
1107	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  -  offset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(milliseconds  -  offset)/  2;	  offset    =(parseEndOffset    -    offset)/    2;    	compilable	  [FE]  JsonSyntaxException  	160	1	replace
1108	[BUG]  [BUGGY]  offset  =(milliseconds  -  offset)/  2;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  -  offset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(milliseconds  -  offset)/  2;	  offset    =(parseEndOffset    -    offset)/    2;    	compilable	  [FE]  JsonSyntaxException  	160	1	replace
1109	[BUG]  [BUGGY]  offset  =(parseStartOffset  -  offset)/  2;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseStartOffset  -  offset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseStartOffset  -  offset)/  2;	  offset    =(parseEndOffset    -    offset)/    2;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	160	None	replace
1110	[BUG]  [BUGGY]  offset  =(offset  -  parseStartOffset)/  2;  [CE]  cannot  find  symbol  parseStartOffset  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseStartOffset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  parseStartOffset)/  2;	  offset    =(parseEndOffset    -    offset)/    2;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	160	None	replace
1111	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  date)/  2;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  date)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  date)/  2;	  offset    =(parseEndOffset    -    offset)/    2;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	160	None	replace
1112	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  -  2;	  offset    =    offset    -    1;    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
1113	[BUG]  [BUGGY]  offset  =  offset  -  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  2;	  offset    =    offset    -    1;    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
1114	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	50	None	replace
1115	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	50	None	replace
1116	[BUG]  [BUGGY]  offset  =  pos  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	50	None	replace
1117	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  -  2;	  offset    =    parseEndOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
1118	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  2;	  offset    =    parseEndOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	9	1	replace
1119	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  -=  0L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  -=  0L;	  offset    =    0L;    	compilable	  [FE]  JsonSyntaxException  	122	1	replace
1120	[BUG]  [BUGGY]  offset  -=  0L;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  -=  0L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  -=  0L;	  offset    =    0L;    	compilable	  [FE]  JsonSyntaxException  	122	1	replace
1121	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0x7F;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0x7F;	  offset    =    0L;    	compilable	  [FE]  JsonSyntaxException  	122	1	replace
1122	[BUG]  [BUGGY]  offset  =  0x7F;  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0x7F;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0x7F;	  offset    =    0L;    	compilable	  [FE]  JsonSyntaxException  	122	1	replace
1123	[BUG]  [BUGGY]  offset  =  0l;  [CE]  possible  loss  of  precision  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0l;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0l;	  offset    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	122	None	replace
1124	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0xff;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0xff;	  offset    =    0L;    	compilable	  [FE]  JsonSyntaxException  	122	1	replace
1125	[BUG]  [BUGGY]  offset  =  0xff;  [FE]  JsonSyntaxException  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0xff;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0xff;	  offset    =    0L;    	compilable	  [FE]  JsonSyntaxException  	122	1	replace
1126	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0x7f;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0x7f;	  offset    =    0L;    	compilable	  [FE]  JsonSyntaxException  	122	1	replace
1127	[BUG]  [BUGGY]  offset  =  0x7f;  [FE]  JsonSyntaxException  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0x7f;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0x7f;	  offset    =    0L;    	compilable	  [FE]  JsonSyntaxException  	122	1	replace
1128	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    ==    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1129	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    ==    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
1130	[BUG]  [BUGGY]  if(date.charAt(i)  ==  '-')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  'catch'  without  'try'  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.charAt(i)  ==  '-')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.charAt(i)  ==  '-')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    ==    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	5	None	replace
1131	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	171	1	replace
1132	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	171	1	replace
1133	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	171	None	replace
1134	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	171	1	replace
1135	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	171	1	replace
1136	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >>  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  incompatible  types  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >>  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >>  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	171	None	replace
1137	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	171	None	replace
1138	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds);  offset  =  Math.max(offset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    Math.max(offset,    milliseconds);    offset  =  Math.max(offset,  milliseconds);	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
1139	[BUG]  [BUGGY]  offset  =  Math.max(offset,  milliseconds);  offset  =  Math.max(offset,  milliseconds);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds);  offset  =  Math.max(offset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(offset,    milliseconds);    offset  =  Math.max(offset,  milliseconds);	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
1140	[BUG]  [BUGGY]  offset  =  Math.max(offset,  milliseconds);  pos  =  Math.max(offset,  milliseconds);  offset  =  Math.max(offset,  milliseconds);  [CE]  incompatible  types  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds);  pos  =  Math.max(offset,  milliseconds);  offset  =  Math.max(offset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(offset,    milliseconds);    pos  =  Math.max(offset,  milliseconds);  offset  =  Math.max(offset,  milliseconds);	  	non-compiled	[CE]  incompatible  types	105	None	add
1141	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds);  parseEndOffset  =  Math.max(offset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    Math.max(offset,    milliseconds);    parseEndOffset  =  Math.max(offset,  milliseconds);	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
1142	[BUG]  [BUGGY]  offset  =  Math.max(offset,  milliseconds);  parseEndOffset  =  Math.max(offset,  milliseconds);  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds);  parseEndOffset  =  Math.max(offset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(offset,    milliseconds);    parseEndOffset  =  Math.max(offset,  milliseconds);	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
1143	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds);  parseEndOffset  =  Math.max(offset,  milliseconds);  offset  =  Math.max(offset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    Math.max(offset,    milliseconds);    parseEndOffset  =  Math.max(offset,  milliseconds);  offset  =  Math.max(offset,  milliseconds);	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
1144	[BUG]  [BUGGY]  offset  =  Math.max(offset,  milliseconds);  parseEndOffset  =  Math.max(offset,  milliseconds);  offset  =  Math.max(offset,  milliseconds);  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds);  parseEndOffset  =  Math.max(offset,  milliseconds);  offset  =  Math.max(offset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(offset,    milliseconds);    parseEndOffset  =  Math.max(offset,  milliseconds);  offset  =  Math.max(offset,  milliseconds);	  	compilable	  [FE]  JsonSyntaxException  	105	1	add
1145	[BUG]  [BUGGY]  offset  =  Math.max(offset,  milliseconds);  int  offset  =  Math.max(offset,  milliseconds);  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds);  int  offset  =  Math.max(offset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(offset,    milliseconds);    int  offset  =  Math.max(offset,  milliseconds);	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	105	None	add
1146	[BUG]  [BUGGY]  offset  =  Math.max(offset,  milliseconds);  pos  =  Math.max(offset,  milliseconds);  [CE]  incompatible  types  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds);  pos  =  Math.max(offset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(offset,    milliseconds);    pos  =  Math.max(offset,  milliseconds);	  	non-compiled	[CE]  incompatible  types	105	None	add
1147	[BUG]  [BUGGY]  parseEndOffset  -  offset;  offset  =  endOffset  -  1;  [CE]  not  a  statement  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -  offset;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  -  offset;  offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    offset;    offset    =    endOffset    -    1;    	non-compiled	[CE]  not  a  statement	156	None	replace
1148	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -=  offset;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	parseEndOffset  -=  offset;  offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    offset;    offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	156	1	replace
1149	[BUG]  [BUGGY]  parseEndOffset  -=  offset;  offset  =  endOffset  -  1;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -=  offset;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  -=  offset;  offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    offset;    offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	156	1	replace
1150	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -=  endOffset;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	parseEndOffset  -=  endOffset;  offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    offset;    offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	156	1	replace
1151	[BUG]  [BUGGY]  parseEndOffset  -=  endOffset;  offset  =  endOffset  -  1;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -=  endOffset;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  -=  endOffset;  offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    offset;    offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	156	1	replace
1152	[BUG]  [BUGGY]  offset  =  pos.offset  -  parseEndOffset;  [CE]  cannot  find  symbol  offset  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  parseEndOffset;	  offset    =    pos.offset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  offset	187	None	replace
1153	[BUG]  [BUGGY]  offset  =  pos.offset  -  parseStartOffset;  [CE]  cannot  find  symbol  offset  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  parseStartOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  parseStartOffset;	  offset    =    pos.offset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  offset	187	None	replace
1154	[BUG]  [BUGGY]  offset  =  pos.offset  -  milliseconds;  [CE]  cannot  find  symbol  offset  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  milliseconds;	  offset    =    pos.offset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  offset	187	None	replace
1155	[BUG]  [BUGGY]  offset  =  pos.offset  -  bytesOffset;  [CE]  cannot  find  symbol  offset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  bytesOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  bytesOffset;	  offset    =    pos.offset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  offset	187	None	replace
1156	[BUG]  [BUGGY]  offset  =  pos.offset  -  bytesPerPosition;  [CE]  cannot  find  symbol  offset  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  bytesPerPosition;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  bytesPerPosition;	  offset    =    pos.offset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  offset	187	None	replace
1157	[BUG]  [BUGGY]  offset  =  pos.offset  -  timezoneOffset;  [CE]  cannot  find  symbol  offset  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  timezoneOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  timezoneOffset;	  offset    =    pos.offset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  offset	187	None	replace
1158	[BUG]  [BUGGY]  while(offset  <  endOffset)  {  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  endOffset)  {  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  endOffset)  {  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1159	[BUG]  [BUGGY]  while(offset  <  endOffset  &&  date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  endOffset  &&  date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  endOffset  &&  date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1160	[BUG]  [BUGGY]  while(offset  <  endOffset  &&  date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  endOffset  &&  date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  endOffset  &&  date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1161	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	7	1	replace
1162	[BUG]  [BUGGY]  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	7	1	replace
1163	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	7	1	replace
1164	[BUG]  [BUGGY]  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	7	1	replace
1165	[BUG]  [BUGGY]  parseEndOffset(date.length(),  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset(date.length(),  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset(date.length(),  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	7	None	replace
1166	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  2;  offset  =  endOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    2;    offset  =  endOffset  +  2;	  	compilable	  [FE]  JsonSyntaxException  	21	1	add
1167	[BUG]  [BUGGY]  offset  =  endOffset  +  2;  offset  =  endOffset  +  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  2;  offset  =  endOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    2;    offset  =  endOffset  +  2;	  	compilable	  [FE]  JsonSyntaxException  	21	1	add
1168	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  2;  offset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    +    2;    offset  =  endOffset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	21	1	add
1169	[BUG]  [BUGGY]  offset  =  endOffset  +  2;  offset  =  endOffset  +  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  2;  offset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    2;    offset  =  endOffset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	21	1	add
1170	[BUG]  [BUGGY]  offset  =  endOffset  +  2;  int  endOffset  =  endOffset  +  2;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  2;  int  endOffset  =  endOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    2;    int  endOffset  =  endOffset  +  2;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	21	None	add
1171	[BUG]  [BUGGY]  offset  =  endOffset  +  2;  Offset  endOffset  =  endOffset  +  2;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  2;  Offset  endOffset  =  endOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    2;    Offset  endOffset  =  endOffset  +  2;	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
1172	[BUG]  [BUGGY]  offset  =  endOffset  +  2;  int  endOffset  =  endOffset  +  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  2;  int  endOffset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    2;    int  endOffset  =  endOffset  +  1;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	21	None	add
1173	[BUG]  [BUGGY]  offset  =  endOffset  +  2;  Offset  =  endOffset  +  2;  [CE]  cannot  find  symbol  Offset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  2;  Offset  =  endOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    2;    Offset  =  endOffset  +  2;	  	non-compiled	[CE]  cannot  find  symbol  Offset	21	None	add
1174	[BUG]  [BUGGY]  offset  =  pos.offset  -  1;  [CE]  cannot  find  symbol  offset  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  1;	  offset    =    parseStartOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  offset	206	None	replace
1175	[BUG]  [BUGGY]  offset  =  pos.length  -  1;  [CE]  cannot  find  symbol  length  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.length  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.length  -  1;	  offset    =    parseStartOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	206	None	replace
1176	[BUG]  [BUGGY]  offset  =  pos.parseOffset(offset);  offset  =  pos.parseOffset(offset);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.parseOffset(offset);  offset  =  pos.parseOffset(offset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.parseOffset(offset);  offset  =  pos.parseOffset(offset);	  offset    =    parseEndOffset    -    offset;    offset    =    byseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
1177	[BUG]  [BUGGY]  offset  =  pos.parseOffset(timezoneOffset);  offset  =  pos.parseOffset(timezoneOffset);  [CE]  cannot  find  symbol  timezoneOffset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.parseOffset(timezoneOffset);  offset  =  pos.parseOffset(timezoneOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.parseOffset(timezoneOffset);  offset  =  pos.parseOffset(timezoneOffset);	  offset    =    parseEndOffset    -    offset;    offset    =    byseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	63	None	replace
1178	[BUG]  [BUGGY]  offset  =  pos.parseOffset(offset);  offset  =  pos.parseOffset(timezoneOffset);  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.parseOffset(offset);  offset  =  pos.parseOffset(timezoneOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.parseOffset(offset);  offset  =  pos.parseOffset(timezoneOffset);	  offset    =    parseEndOffset    -    offset;    offset    =    byseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
1179	[BUG]  [BUGGY]  offset  =  date.getStartOffset();  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.getStartOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.getStartOffset();	  offset    =    pos.getStartOffset();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
1180	[BUG]  [BUGGY]  offset  =  parseEndOffset.getStartOffset();  [CE]  int  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset.getStartOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.getStartOffset();	  offset    =    pos.getStartOffset();    	non-compiled	[CE]  int  cannot  be  dereferenced	163	None	replace
1181	[BUG]  [BUGGY]  offset  =  pos.getEndOffset();  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getEndOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getEndOffset();	  offset    =    pos.getStartOffset();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
1182	[BUG]  [BUGGY]  offset  =  parseStartOffset.getStartOffset();  [CE]  cannot  find  symbol  parseStartOffset  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset.getStartOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset.getStartOffset();	  offset    =    pos.getStartOffset();    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	163	None	replace
1183	[BUG]  [BUGGY]  offset  =  pos.getStartOffset()  +  1;  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getStartOffset()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getStartOffset()  +  1;	  offset    =    pos.getStartOffset();    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
1184	[BUG]  [BUGGY]  offset  =  DateUtils.getStartOffset(pos);  [CE]  cannot  find  symbol  DateUtils  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getStartOffset(pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getStartOffset(pos);	  offset    =    pos.getStartOffset();    	non-compiled	[CE]  cannot  find  symbol  DateUtils	163	None	replace
1185	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	213	1	add
1186	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	213	1	add
1187	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	213	1	add
1188	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	213	1	add
1189	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	213	1	add
1190	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	213	1	add
1191	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	213	1	add
1192	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	213	1	add
1193	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }	  	non-compiled	[CE]  cannot  find  symbol	213	None	add
1194	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }  [CE]  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }	  	non-compiled	[CE]  	213	None	add
1195	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1196	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1197	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1198	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1199	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1200	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1201	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1202	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1203	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1204	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1205	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1206	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1207	[BUG]  [BUGGY]  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	128	None	replace
1208	[BUG]  [BUGGY]  offset  =  0;  }  else  if(date.length()  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  }  else  if(date.length()  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  }  else  if(date.length()  ==  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	128	None	replace
1209	[BUG]  [BUGGY]  offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	128	None	replace
1210	[BUG]  [BUGGY]  offset  =  0;  }  else  if(date.length()!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  }  else  if(date.length()!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  }  else  if(date.length()!=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	128	None	replace
1211	[BUG]  [BUGGY]  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ",  parseEndOffset);  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ",  parseEndOffset);  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ",  parseEndOffset);  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	128	None	replace
1212	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
1213	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
1214	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  >=  len)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  len  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  >=  len)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  >=  len)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  len	77	None	replace
1215	[BUG]  [BUGGY]  offset  =  parseStartOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    Offset    offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	62	None	replace
1216	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    Offset    offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
1217	[BUG]  [BUGGY]  offset  =  pos.getOffset();  Offset  offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  Offset  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  Offset  offset  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    Offset    offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
1218	[BUG]  [BUGGY]  offset  =  parseStartOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  -  offset;  offset  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	60	None	replace
1219	[BUG]  [BUGGY]  offset  =  parseOffset  -  offset;  [CE]  cannot  find  symbol  parseOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  parseOffset	60	None	replace
1220	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  -=  endOffset  +  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  -=  endOffset  +  1L;	  offset    =    endOffset    +    1L;    	compilable	  [FE]  JsonSyntaxException  	140	1	replace
1221	[BUG]  [BUGGY]  offset  -=  endOffset  +  1L;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  -=  endOffset  +  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  -=  endOffset  +  1L;	  offset    =    endOffset    +    1L;    	compilable	  [FE]  JsonSyntaxException  	140	1	replace
1222	[BUG]  [BUGGY]  offset  =  endOffset  /  1L;  [CE]  possible  loss  of  precision  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  /  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  /  1L;	  offset    =    endOffset    +    1L;    	non-compiled	[CE]  possible  loss  of  precision	140	None	replace
1223	[BUG]  [BUGGY]  offset  =  startOffset  +  1L;  [CE]  cannot  find  symbol  startOffset  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1L;	  offset    =    endOffset    +    1L;    	non-compiled	[CE]  cannot  find  symbol  startOffset	140	None	replace
1224	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	73	1	replace
1225	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	73	1	replace
1226	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	73	1	replace
1227	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	73	1	replace
1228	[BUG]  [BUGGY]  offset  =  parseStartOffset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	73	None	replace
1229	[BUG]  [BUGGY]  offset  =  offset  -  parseEndOffset;  Offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  Offset  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset;  Offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  parseEndOffset;  Offset  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    Offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  Offset	65	None	replace
1230	[BUG]  [BUGGY]  offset  =  parseStartOffset  -  offset;  Offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  -  offset;  Offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  -  offset;  Offset  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    Offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	65	None	replace
1231	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  Offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  Offset  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  Offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  offset;  Offset  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    Offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  Offset	65	None	replace
1232	[BUG]  [BUGGY]  offset  =  pos.getOffset();  Offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  Offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  Offset  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    Offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1233	[BUG]  [BUGGY]  offset  =  pos.getOffset();  Offset  =  pos.getOffset();  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  Offset  =  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  Offset  =  pos.getOffset();	  offset    =    parseEndOffset    -    offset;    Offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1234	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset    +    1;    offset  =  offset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	17	1	add
1235	[BUG]  [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    offset  =  offset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	17	1	add
1236	[BUG]  [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    offset  =  offset  +  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
1237	[BUG]  [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    offset  =  offset  +  1;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
1238	[BUG]  [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    offset  =  offset  +  1;  }  else  if(date.length()  <  =  length())  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
1239	[BUG]  [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    offset  =  offset  +  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
1240	[BUG]  [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    offset  =  offset  +  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
1241	[BUG]  [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    offset  =  offset  +  1;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
1242	[BUG]  [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  numeric. ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  offset  =  offset  +  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  numeric. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    offset  =  offset  +  1;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  numeric. ");  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
1243	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	201	None	replace
1244	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  >=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	201	None	replace
1245	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
1246	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  milliseconds.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  milliseconds.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  milliseconds.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	201	None	replace
1247	[BUG]  [BUGGY]  if(date.charAt(i)!=  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOf  [CE]  '('  or  '['  expected  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.charAt(i)!=  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOf  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.charAt(i)!=  '0')  {  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOf	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  '('  or  '['  expected	201	None	replace
1248	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  fraction  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  fraction  +  1;	  offset    =    pos    +    1;    	compilable	  [FE]  JsonSyntaxException  	23	1	replace
1249	[BUG]  [BUGGY]  offset  =  fraction  +  1;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  fraction  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  fraction  +  1;	  offset    =    pos    +    1;    	compilable	  [FE]  JsonSyntaxException  	23	1	replace
1250	[BUG]  [BUGGY]  offset  =  pos  +  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  +  2;	  offset    =    pos    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	23	None	replace
1251	[BUG]  [BUGGY]  offset  =  bytesEndOffset;  [CE]  cannot  find  symbol  bytesEndOffset  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  bytesEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  bytesEndOffset;	  offset    =    startOffset;    	non-compiled	[CE]  cannot  find  symbol  bytesEndOffset	146	None	replace
1252	[BUG]  [BUGGY]  offset  =  bytesOffset;  [CE]  cannot  find  symbol  bytesOffset  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  bytesOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  bytesOffset;	  offset    =    startOffset;    	non-compiled	[CE]  cannot  find  symbol  bytesOffset	146	None	replace
1253	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
1254	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
1255	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	218	None	replace
1256	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
1257	[BUG]  [BUGGY]  offset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
1258	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [CE]  cannot  find  symbol  length  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  length)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	218	None	replace
1259	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
1260	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
1261	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [CE]  cannot  find  symbol  startOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	218	None	replace
1262	[BUG]  [BUGGY]  offset  =  date.getLowerCase();  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.getLowerCase();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.getLowerCase();	  offset    =    pos.getLowerCase();    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
1263	[BUG]  [BUGGY]  offset  =  parseEndOffset.getLowerCase();  [CE]  int  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset.getLowerCase();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.getLowerCase();	  offset    =    pos.getLowerCase();    	non-compiled	[CE]  int  cannot  be  dereferenced	179	None	replace
1264	[BUG]  [BUGGY]  offset  =  this.date.getLowerCase();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.date.getLowerCase();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.date.getLowerCase();	  offset    =    pos.getLowerCase();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	179	None	replace
1265	[BUG]  [BUGGY]  offset  =  DateUtils.getLowerCase(pos);  [CE]  cannot  find  symbol  DateUtils  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getLowerCase(pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getLowerCase(pos);	  offset    =    pos.getLowerCase();    	non-compiled	[CE]  cannot  find  symbol  DateUtils	179	None	replace
1266	[BUG]  [BUGGY]  offset  =  parse.getLowerCase();  [CE]  cannot  find  symbol  parse  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parse.getLowerCase();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parse.getLowerCase();	  offset    =    pos.getLowerCase();    	non-compiled	[CE]  cannot  find  symbol  parse	179	None	replace
1267	[BUG]  [BUGGY]  offset  =  pos.getLowerCase()  +  1;  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getLowerCase()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getLowerCase()  +  1;	  offset    =    pos.getLowerCase();    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
1268	[BUG]  [BUGGY]  offset  =  parseEndOffset.offset();  [CE]  int  cannot  be  dereferenced  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset.offset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.offset();	  offset    =    pos.offset();    	non-compiled	[CE]  int  cannot  be  dereferenced	209	None	replace
1269	[BUG]  [BUGGY]  offset  =  date.offset();  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.offset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.offset();	  offset    =    pos.offset();    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
1270	[BUG]  [BUGGY]  offset  =  parseStartOffset.offset();  [CE]  cannot  find  symbol  parseStartOffset  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset.offset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset.offset();	  offset    =    pos.offset();    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	209	None	replace
1271	[BUG]  [BUGGY]  offset  =  parseEndOffset(pos.offset());  [CE]  cannot  find  symbol  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset(pos.offset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset(pos.offset());	  offset    =    pos.offset();    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
1272	[BUG]  [BUGGY]  offset  =  timezoneOffset.offset();  [CE]  cannot  find  symbol  timezoneOffset  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  timezoneOffset.offset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneOffset.offset();	  offset    =    pos.offset();    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	209	None	replace
1273	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  offset  =  -offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    -offset;    offset  =  -offset;	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1274	[BUG]  [BUGGY]  offset  =  -offset;  offset  =  -offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  offset  =  -offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    offset  =  -offset;	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1275	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  0)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    -offset;    if(offset  <  0)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1276	[BUG]  [BUGGY]  offset  =  -offset;  if(offset  <  0)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  0)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    if(offset  <  0)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1277	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    -offset;    if(offset  <  -offset)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1278	[BUG]  [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    if(offset  <  -offset)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1279	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    -offset;    if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1280	[BUG]  [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1281	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  -offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    -offset;    if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  -offset;  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1282	[BUG]  [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  -offset;  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  -offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  -offset;  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1283	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    -offset;    if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1284	[BUG]  [BUGGY]  offset  =  -offset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1285	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  -offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    -offset;    if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  -offset;  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1286	[BUG]  [BUGGY]  offset  =  -offset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  -offset;  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  -offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  -offset;  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1287	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  -offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    -offset;    if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  -offset;	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1288	[BUG]  [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  -offset;  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  -offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    if(offset  <  -offset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  -offset;	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
1289	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  /  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  milliseconds  /  offset;	  offset    =    milliseconds    -    offset;    	compilable	  [FE]  JsonSyntaxException  	92	1	replace
1290	[BUG]  [BUGGY]  offset  =  milliseconds  /  offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  /  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  /  offset;	  offset    =    milliseconds    -    offset;    	compilable	  [FE]  JsonSyntaxException  	92	1	replace
1291	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  milliseconds  -  date.length();	  offset    =    milliseconds    -    offset;    	compilable	  [FE]  JsonSyntaxException  	92	1	replace
1292	[BUG]  [BUGGY]  offset  =  milliseconds  -  date.length();  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  -  date.length();	  offset    =    milliseconds    -    offset;    	compilable	  [FE]  JsonSyntaxException  	92	1	replace
1293	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  offset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    1;    offset  =  1;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
1294	[BUG]  [BUGGY]  offset  =  1;  offset  =  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  offset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    offset  =  1;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
1295	[BUG]  [BUGGY]  offset  =  1;  int  offset  =  1;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  int  offset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    int  offset  =  1;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	114	None	add
1296	[BUG]  [BUGGY]  offset  =  1;  Offset  offset  =  1;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  Offset  offset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    Offset  offset  =  1;	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
1297	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  offset  =  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    1;    offset  =  2;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
1298	[BUG]  [BUGGY]  offset  =  1;  offset  =  2;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  offset  =  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    offset  =  2;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
1299	[BUG]  [BUGGY]  offset  =  1;  int  offset  =  0;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  int  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    int  offset  =  0;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	114	None	add
1300	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    1;    offset  =  0;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
1301	[BUG]  [BUGGY]  offset  =  1;  offset  =  0;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    offset  =  0;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
1302	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  Offset  =  endOffset  -  1;  [CE]  cannot  find  symbol  Offset  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  Offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1;  Offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  Offset	102	None	replace
1303	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  Offset  =  endOffset  -  1;  [CE]  cannot  find  symbol  Offset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  Offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1;  Offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  Offset	102	None	replace
1304	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  Offset  =  endOffset  +  1;  [CE]  cannot  find  symbol  Offset  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  Offset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  Offset  =  endOffset  +  1;	  offset    =    endOffset    -    1;    Offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  Offset	102	None	replace
1305	[BUG]  [BUGGY]  offset  =  startOffset  -  1;  Offset  =  endOffset  -  1;  [CE]  cannot  find  symbol  startOffset  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  -  1;  Offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  -  1;  Offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  startOffset	102	None	replace
1306	[BUG]  [BUGGY]  offset  =  endOffset;  Offset  =  endOffset  -  1;  [CE]  cannot  find  symbol  Offset  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  Offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset;  Offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  Offset	102	None	replace
1307	[BUG]  [BUGGY]  Offset  =  endOffset  -  1;  [CE]  cannot  find  symbol  Offset  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  Offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	Offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  Offset	102	None	replace
1308	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  2;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    -    2;    offset  =  endOffset  -  2;	  	compilable	  [FE]  JsonSyntaxException  	12	1	add
1309	[BUG]  [BUGGY]  offset  =  endOffset  -  2;  offset  =  endOffset  -  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  2;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    2;    offset  =  endOffset  -  2;	  	compilable	  [FE]  JsonSyntaxException  	12	1	add
1310	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  2;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    -    2;    offset  =  endOffset  -  1;	  	compilable	  [FE]  JsonSyntaxException  	12	1	add
1311	[BUG]  [BUGGY]  offset  =  endOffset  -  2;  offset  =  endOffset  -  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  2;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    2;    offset  =  endOffset  -  1;	  	compilable	  [FE]  JsonSyntaxException  	12	1	add
1312	[BUG]  [BUGGY]  offset  =  endOffset  -  2;  int  endOffset  =  endOffset  -  2;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  2;  int  endOffset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    2;    int  endOffset  =  endOffset  -  2;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	12	None	add
1313	[BUG]  [BUGGY]  offset  =  endOffset  -  2;  Offset  endOffset  =  endOffset  -  2;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  2;  Offset  endOffset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    2;    Offset  endOffset  =  endOffset  -  2;	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
1314	[BUG]  [BUGGY]  offset  =  endOffset  -  2;  Offset  =  endOffset  -  2;  [CE]  cannot  find  symbol  Offset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  2;  Offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    2;    Offset  =  endOffset  -  2;	  	non-compiled	[CE]  cannot  find  symbol  Offset	12	None	add
1315	[BUG]  [BUGGY]  offset  =  endOffset  -  2;  int  endOffset  =  endOffset  -  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  2;  int  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    2;    int  endOffset  =  endOffset  -  1;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	12	None	add
1316	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	47	1	add
1317	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	47	1	add
1318	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	47	1	add
1319	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	47	1	add
1320	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  endOffset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	47	None	add
1321	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	47	1	add
1322	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	47	1	add
1323	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	47	1	add
1324	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	47	1	add
1325	[BUG]  [BUGGY]  offset  =  date.getLowerBound();  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.getLowerBound();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.getLowerBound();	  offset    =    pos.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
1326	[BUG]  [BUGGY]  offset  =  parseEndOffset.getLowerBound();  [CE]  int  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset.getLowerBound();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset.getLowerBound();	  offset    =    pos.getLowerBound();    	non-compiled	[CE]  int  cannot  be  dereferenced	178	None	replace
1327	[BUG]  [BUGGY]  offset  =  this.date.getLowerBound();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.date.getLowerBound();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.date.getLowerBound();	  offset    =    pos.getLowerBound();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	178	None	replace
1328	[BUG]  [BUGGY]  offset  =  pos.getUpperBound();  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getUpperBound();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getUpperBound();	  offset    =    pos.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
1329	[BUG]  [BUGGY]  offset  =  parseStartOffset.getLowerBound();  [CE]  cannot  find  symbol  parseStartOffset  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset.getLowerBound();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset.getLowerBound();	  offset    =    pos.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	178	None	replace
1330	[BUG]  [BUGGY]  offset  =  DateUtils.getLowerBound(pos);  [CE]  cannot  find  symbol  DateUtils  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getLowerBound(pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getLowerBound(pos);	  offset    =    pos.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol  DateUtils	178	None	replace
1331	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  parsed.   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	193	1	add
1332	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  parsed.   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  parsed.   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	193	1	add
1333	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  parsed.   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	193	1	add
1334	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  parsed.   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  parsed.   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  	compilable	  [FE]  JsonSyntaxException  	193	1	add
1335	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  parsed.   ");  }  int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  parsed.   ");  }  int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    int  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	193	None	add
1336	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  parsed.   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.. ");  }	  	compilable	  [FE]  JsonSyntaxException  	193	1	add
1337	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  parsed.   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.. ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  not  be  parsed.   ");  }  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.. ");  }	  	compilable	  [FE]  JsonSyntaxException  	193	1	add
1338	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	compilable	  [FE]  JsonSyntaxException  	194	1	replace
1339	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	compilable	  [FE]  JsonSyntaxException  	194	1	replace
1340	[BUG]  [BUGGY]  offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	194	None	replace
1341	[BUG]  [BUGGY]  offset  =  pos;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [CE]  incompatible  types  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	non-compiled	[CE]  incompatible  types	194	None	replace
1342	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.. ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	compilable	  [FE]  JsonSyntaxException  	194	1	replace
1343	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.. ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.. ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	compilable	  [FE]  JsonSyntaxException  	194	1	replace
1344	[BUG]  [BUGGY]  offset  =  parseEndOffset;  pos  =  parseEndOffset  +  1;  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  pos  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  pos  =  parseEndOffset  +  1;	  offset    =    parseEndOffset;    pos    =    parseEndOffset;    	non-compiled	[CE]  incompatible  types	37	None	replace
1345	[BUG]  [BUGGY]  offset  =  offset;  pos  =  parseEndOffset;  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset;  pos  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset;  pos  =  parseEndOffset;	  offset    =    parseEndOffset;    pos    =    parseEndOffset;    	non-compiled	[CE]  incompatible  types	37	None	replace
1346	[BUG]  [BUGGY]  offset  =  pos;  pos  =  parseEndOffset;  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos;  pos  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos;  pos  =  parseEndOffset;	  offset    =    parseEndOffset;    pos    =    parseEndOffset;    	non-compiled	[CE]  incompatible  types	37	None	replace
1347	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  pos  =  parseEndOffset;  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  pos  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1;  pos  =  parseEndOffset;	  offset    =    parseEndOffset;    pos    =    parseEndOffset;    	non-compiled	[CE]  incompatible  types	37	None	replace
1348	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  pos  =  parseEndOffset;  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  pos  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  pos  =  parseEndOffset;	  offset    =    parseEndOffset;    pos    =    parseEndOffset;    	non-compiled	[CE]  incompatible  types	37	None	replace
1349	[BUG]  [BUGGY]  pos  =  parseEndOffset;  [CE]  incompatible  types  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  pos  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	pos  =  parseEndOffset;	  offset    =    parseEndOffset;    pos    =    parseEndOffset;    	non-compiled	[CE]  incompatible  types	37	None	replace
1350	[BUG]  [BUGGY]  offset  =  parseStartOffset;  pos  =  parseEndOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  pos  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  pos  =  parseEndOffset;	  offset    =    parseEndOffset;    pos    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	37	None	replace
1351	[BUG]  [BUGGY]  offset  =  DateUtils.getOffset(date,  pos.getOffset());  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getOffset(date,  pos.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getOffset(date,  pos.getOffset());	  offset    =    DateUtils.getOffset(parseEndOffset,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1352	[BUG]  [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  date.getOffset());  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  date.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getOffset(parseEndOffset,  date.getOffset());	  offset    =    DateUtils.getOffset(parseEndOffset,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1353	[BUG]  [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos.getStartOffset());  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos.getStartOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getOffset(parseEndOffset,  pos.getStartOffset());	  offset    =    DateUtils.getOffset(parseEndOffset,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1354	[BUG]  [BUGGY]  offset  =  DateUtils.getOffset(parseStartOffset,  pos.getOffset());  [CE]  cannot  find  symbol  parseStartOffset  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getOffset(parseStartOffset,  pos.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getOffset(parseStartOffset,  pos.getOffset());	  offset    =    DateUtils.getOffset(parseEndOffset,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	144	None	replace
1355	[BUG]  [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  milliseconds.getOffset());  [CE]  int  cannot  be  dereferenced  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  milliseconds.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getOffset(parseEndOffset,  milliseconds.getOffset());	  offset    =    DateUtils.getOffset(parseEndOffset,    pos.getOffset());    	non-compiled	[CE]  int  cannot  be  dereferenced	144	None	replace
1356	[BUG]  [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos.getLocalMillis());  [CE]  cannot  find  symbol  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos.getLocalMillis());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getOffset(parseEndOffset,  pos.getLocalMillis());	  offset    =    DateUtils.getOffset(parseEndOffset,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1357	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  +  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(offset  +  milliseconds)/  10;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	121	1	replace
1358	[BUG]  [BUGGY]  offset  =(offset  +  milliseconds)/  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  +  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  +  milliseconds)/  10;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	121	1	replace
1359	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  +  milliseconds)/  2;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	121	1	replace
1360	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  2;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  +  milliseconds)/  2;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	121	1	replace
1361	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  +  parseEndOffset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(milliseconds  +  parseEndOffset)/  10;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	121	1	replace
1362	[BUG]  [BUGGY]  offset  =(milliseconds  +  parseEndOffset)/  10;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  +  parseEndOffset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(milliseconds  +  parseEndOffset)/  10;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	121	1	replace
1363	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  1000;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  +  milliseconds)/  1000;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	121	1	replace
1364	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  1000;  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  1000;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  +  milliseconds)/  1000;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	121	1	replace
1365	[BUG]  [BUGGY]  offset  =(parseStartOffset  +  milliseconds)/  10;  [CE]  cannot  find  symbol  parseStartOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseStartOffset  +  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseStartOffset  +  milliseconds)/  10;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	121	None	replace
1366	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  +  milliseconds)/  3;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	121	1	replace
1367	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  3;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  +  milliseconds)/  3;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	121	1	replace
1368	[BUG]  [BUGGY]  offset  =  tz.currentTimeMillis();  [CE]  cannot  find  symbol  tz  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  tz.currentTimeMillis();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  tz.currentTimeMillis();	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  tz	133	None	replace
1369	[BUG]  [BUGGY]  offset  =  tz.timezoneIndicator;  [CE]  cannot  find  symbol  tz  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  tz.timezoneIndicator;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  tz.timezoneIndicator;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  tz	133	None	replace
1370	[BUG]  [BUGGY]  offset  =  tz.getTimeZone();  [CE]  cannot  find  symbol  tz  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  tz.getTimeZone();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  tz.getTimeZone();	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  tz	133	None	replace
1371	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  parseEndOffset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset    +    1;    parseEndOffset  =  parseEndOffset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	19	1	add
1372	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  parseEndOffset  =  parseEndOffset  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  parseEndOffset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    +    1;    parseEndOffset  =  parseEndOffset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	19	1	add
1373	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  >=  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  >=  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  >=  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(!timezoneIndicator.hasNext())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	200	None	replace
1374	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " "));  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(!timezoneIndicator.hasNext())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	200	None	replace
1375	[BUG]  [BUGGY]  int  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  len  =  date.length();  i  <  len;  ++i)  {  if(!timezoneIndicator.hasNext())  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(!timezoneIndicator.hasNext())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  >  expected	200	None	replace
1376	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  long  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  offset)  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  long  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    long  offset  =  offset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	191	None	add
1377	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	compilable	  [FE]  JsonSyntaxException  	194	1	replace
1378	[BUG]  [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	compilable	  [FE]  JsonSyntaxException  	194	1	replace
1379	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	compilable	  [FE]  JsonSyntaxException  	194	1	replace
1380	[BUG]  [BUGGY]  offset  =  endOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed.   ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    parsed.   ");    }    	compilable	  [FE]  JsonSyntaxException  	194	1	replace
1381	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  byseEndOffset  -  1;  [CE]  not  a  statement  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  byseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  byseEndOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	non-compiled	[CE]  not  a  statement	104	None	replace
1382	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -  2;  [CE]  not  a  statement  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  parseEndOffset  -  2;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	non-compiled	[CE]  not  a  statement	104	None	replace
1383	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  1000;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  offset)%  1000;	  offset    =(parseEndOffset    -    offset)%    10;    	compilable	  [FE]  JsonSyntaxException  	162	1	replace
1384	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  1000;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)%  1000;	  offset    =(parseEndOffset    -    offset)%    10;    	compilable	  [FE]  JsonSyntaxException  	162	1	replace
1385	[BUG]  [BUGGY]  offset  =(offset  -  parseStartOffset)%  10;  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseStartOffset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  parseStartOffset)%  10;	  offset    =(parseEndOffset    -    offset)%    10;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	162	None	replace
1386	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1387	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1388	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1389	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1390	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1391	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1392	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  pos.setLength(parseEndOffset);  offset  =  offset;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  pos.setLength(parseEndOffset);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    pos.setLength(parseEndOffset);  offset  =  offset;	  	non-compiled	[CE]  cannot  find  symbol	66	None	add
1393	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1394	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1395	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	147	None	replace
1396	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	147	None	replace
1397	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  pos.length();  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  pos.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  pos.length();	  offset    =    parseEndOffset.length();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1398	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  Offset  offset  =(parseEndOffset  -  offset)%  10;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  Offset  offset  =(parseEndOffset  -  offset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    10;    Offset  offset  =(parseEndOffset  -  offset)%  10;	  	non-compiled	[CE]  cannot  find  symbol	161	None	add
1399	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	175	None	replace
1400	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  startOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	175	None	replace
1401	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
1402	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
1403	[BUG]  [BUGGY]  offset  =  pos.getOffset()  +  1;  int  endOffset  =  pos.getOffset()  +  1;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()  +  1;  int  endOffset  =  pos.getOffset()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  +  1;  int  endOffset  =  pos.getOffset()  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1404	[BUG]  [BUGGY]  offset  =  pos.getOffset()  +  1;  int  endOffset  =  pos.getEndOffset()  +  1;  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()  +  1;  int  endOffset  =  pos.getEndOffset()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  +  1;  int  endOffset  =  pos.getEndOffset()  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1405	[BUG]  [BUGGY]  offset  =  pos  +  1;  int  endOffset  =  pos  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  +  1;  int  endOffset  =  pos  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  +  1;  int  endOffset  =  pos  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	51	None	replace
1406	[BUG]  [BUGGY]  offset  =  null;  pos  =  0;  offset  =  0;  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  null;  pos  =  0;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  null;  pos  =  0;  offset  =  0;	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  incompatible  types	152	None	replace
1407	[BUG]  [BUGGY]  offset  =  1;  pos  =  0;  offset  =  0;  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  pos  =  0;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  1;  pos  =  0;  offset  =  0;	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  incompatible  types	152	None	replace
1408	[BUG]  [BUGGY]  pos  =  0;  offset  =  0;  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  pos  =  0;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	pos  =  0;  offset  =  0;	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  incompatible  types	152	None	replace
1409	[BUG]  [BUGGY]  offset  =  0;  this.parseEndOffset  =  0;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  this.parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  this.parseEndOffset  =  0;	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	152	None	replace
1410	[BUG]  [BUGGY]  offset  =  0;  parseStartOffset  =  0;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseStartOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseStartOffset  =  0;	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	152	None	replace
1411	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ".);  }  [CE]  <identifier>  expected  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ".);  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	213	None	add
1412	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }	  	compilable	  [FE]  JsonSyntaxException  	213	1	add
1413	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }	  	compilable	  [FE]  JsonSyntaxException  	213	1	add
1414	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }	  	compilable	  [FE]  JsonSyntaxException  	213	1	add
1415	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }	  	compilable	  [FE]  JsonSyntaxException  	213	1	add
1416	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  date);  }  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,String)  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  date);  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  date);  }	  	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,String)	213	None	add
1417	[BUG]  [BUGGY]  parseEndOffset();  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset();	  offset    =    0;    parseEndOffset();    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
1418	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds);  milliseconds  =  Math.max(offset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    Math.max(offset,    milliseconds);    milliseconds  =  Math.max(offset,  milliseconds);	  	compilable	  [FE]  AssertionFailedError  	105	1	add
1419	[BUG]  [BUGGY]  offset  =  Math.max(offset,  milliseconds);  milliseconds  =  Math.max(offset,  milliseconds);  [FE]  AssertionFailedError  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds);  milliseconds  =  Math.max(offset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(offset,    milliseconds);    milliseconds  =  Math.max(offset,  milliseconds);	  	compilable	  [FE]  AssertionFailedError  	105	1	add
1420	[BUG]  [BUGGY]  offset  =  timezoneOffset  +  1;  [CE]  cannot  find  symbol  timezoneOffset  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  timezoneOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneOffset  +  1;	  offset    =    parseStartOffset    +    1;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	221	None	replace
1421	[BUG]  [BUGGY]  offset  =  date.length  +  1;  [CE]  cannot  find  symbol  length  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.length  +  1;	  offset    =    parseStartOffset    +    1;    	non-compiled	[CE]  cannot  find  symbol  length	221	None	replace
1422	[BUG]  [BUGGY]  if(date.length()  <  =  endOffset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  endOffset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  endOffset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1423	[BUG]  [BUGGY]  if(date.length()  <  =  endOffset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  endOffset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  endOffset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1424	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  endOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  endOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  endOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1425	[BUG]  [BUGGY]  if(date.length()  <  =  endOffset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  endOffset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  endOffset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  }  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1426	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	58	1	replace
1427	[BUG]  [BUGGY]  if(offset  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	58	1	replace
1428	[BUG]  [BUGGY]  while(offset  <  =  date.length())  {  if(date.charAt(offset)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  =  date.length())  {  if(date.charAt(offset)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  =  date.length())  {  if(date.charAt(offset)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1429	[BUG]  [BUGGY]  while(offset  <  =  date.length())  {  if(date.charAt(offset)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  =  date.length())  {  if(date.charAt(offset)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  =  date.length())  {  if(date.charAt(offset)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1430	[BUG]  [BUGGY]  while(offset  <  =  date.length())  {  if(date.charAt(offset)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  =  date.length())  {  if(date.charAt(offset)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  =  date.length())  {  if(date.charAt(offset)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
1431	[BUG]  [BUGGY]  offset  =  parseEndOffset?  date.getOffset()  :  pos.getOffset();  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  date.getOffset()  :  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  date.getOffset()  :  pos.getOffset();	  offset    =    parseEndOffset?    pos.getOffset()    :    pos.getOffset();    	non-compiled	[CE]  incompatible  types	27	None	replace
1432	[BUG]  [BUGGY]  offset  =  parseStartOffset?  pos.getOffset()  :  pos.getOffset();  [CE]  cannot  find  symbol  parseStartOffset  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset?  pos.getOffset()  :  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset?  pos.getOffset()  :  pos.getOffset();	  offset    =    parseEndOffset?    pos.getOffset()    :    pos.getOffset();    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	27	None	replace
1433	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getLowerBound();  [CE]  incompatible  types  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getLowerBound();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  pos.getLowerBound();	  offset    =    parseEndOffset?    pos.getOffset()    :    pos.getOffset();    	non-compiled	[CE]  incompatible  types	27	None	replace
1434	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(offset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.min(offset,  parseEndOffset);	  offset    =    Math.max(offset,    milliseconds);    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
1435	[BUG]  [BUGGY]  offset  =  Math.min(offset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(offset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.min(offset,  parseEndOffset);	  offset    =    Math.max(offset,    milliseconds);    	compilable	  [FE]  JsonSyntaxException  	106	1	replace
1436	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	71	1	replace
1437	[BUG]  [BUGGY]  offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	71	1	replace
1438	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	71	1	replace
1439	[BUG]  [BUGGY]  offset  =  0;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	71	1	replace
1440	[BUG]  [BUGGY]  offset  =  startOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	71	None	replace
1441	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i  +  1)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i  +  1)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i  +  1)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
1442	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  offset;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  offset;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  offset;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
1443	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  parseEndOffset  =  endOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset;  parseEndOffset  =  endOffset;	  offset    =    parseEndOffset;    parseEndOffset    =    parseStartOffset;    	compilable	  [FE]  JsonSyntaxException  	38	1	replace
1444	[BUG]  [BUGGY]  offset  =  endOffset;  parseEndOffset  =  endOffset;  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  parseEndOffset  =  endOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset;  parseEndOffset  =  endOffset;	  offset    =    parseEndOffset;    parseEndOffset    =    parseStartOffset;    	compilable	  [FE]  JsonSyntaxException  	38	1	replace
1445	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  parseEndOffset  -  1;  [CE]  not  a  statement  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    1;    parseEndOffset  -  1;	  	non-compiled	[CE]  not  a  statement	8	None	add
1446	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	73	1	replace
1447	[BUG]  [BUGGY]  offset  =  0;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	73	1	replace
1448	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length()  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  date.length()  -  2;	  offset    =    date.length();    	compilable	  [FE]  JsonSyntaxException  	83	1	replace
1449	[BUG]  [BUGGY]  offset  =  date.length()  -  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length()  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.length()  -  2;	  offset    =    date.length();    	compilable	  [FE]  JsonSyntaxException  	83	1	replace
1450	[BUG]  [BUGGY]  offset  =  timezoneOffset.getStartOffset();  [CE]  cannot  find  symbol  timezoneOffset  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  timezoneOffset.getStartOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneOffset.getStartOffset();	  offset    =    pos.getStartOffset();    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	163	None	replace
1451	[BUG]  [BUGGY]  offset  =  startOffset.getStartOffset();  [CE]  cannot  find  symbol  startOffset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset.getStartOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset.getStartOffset();	  offset    =    pos.getStartOffset();    	non-compiled	[CE]  cannot  find  symbol  startOffset	163	None	replace
1452	[BUG]  [BUGGY]  offset  =  endOffset  +  2;  parseEndOffset(offset);  offset  =  endOffset  +  2;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  2;  parseEndOffset(offset);  offset  =  endOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    2;    parseEndOffset(offset);  offset  =  endOffset  +  2;	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
1453	[BUG]  [BUGGY]  offset  =  endOffset  +  2;  parseEndOffset(offset);  offset  =  endOffset  +  1;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  2;  parseEndOffset(offset);  offset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    2;    parseEndOffset(offset);  offset  =  endOffset  +  1;	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
1454	[BUG]  [BUGGY]  offset  =  startOffset  -  milliseconds;  [CE]  cannot  find  symbol  startOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  -  milliseconds;	  offset    =    parseEndOffset    -    milliseconds;    	non-compiled	[CE]  cannot  find  symbol  startOffset	94	None	replace
1455	[BUG]  [BUGGY]  offset  =  length  -  milliseconds;  [CE]  cannot  find  symbol  length  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  length  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  length  -  milliseconds;	  offset    =    parseEndOffset    -    milliseconds;    	non-compiled	[CE]  cannot  find  symbol  length	94	None	replace
1456	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
1457	[BUG]  [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	non-compiled	[CE]  'catch'  without  'try'	218	None	replace
1458	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
1459	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
1460	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOff  [CE]  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOff  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOff	  	non-compiled	[CE]  	78	None	add
1461	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	78	None	add
1462	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parse  [CE]  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parse  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  if(offset  <  parse	  	non-compiled	[CE]  	78	None	add
1463	[BUG]  [BUGGY]  int  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  0;  parseOffset(offset,  0);  offset  =  0;	  offset    =    0;    parseOffset(offset,    0);    offset    =    0;    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	153	None	replace
1464	[BUG]  [BUGGY]  parseOffset(timezoneOffset,  0);  offset  =  0;  [CE]  cannot  find  symbol  timezoneOffset  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseOffset(timezoneOffset,  0);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseOffset(timezoneOffset,  0);  offset  =  0;	  offset    =    0;    parseOffset(offset,    0);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	153	None	replace
1465	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  Offset  offset  =(parseEndOffset  -  offset)%  2;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  Offset  offset  =(parseEndOffset  -  offset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    2;    Offset  offset  =(parseEndOffset  -  offset)%  2;	  	non-compiled	[CE]  cannot  find  symbol	157	None	add
1466	[BUG]  [BUGGY]  offset  =  Math.max(milliseconds,  pos);  [CE]  no  suitable  method  found  for  max(int,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(milliseconds,  pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(milliseconds,  pos);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	non-compiled	[CE]  no  suitable  method  found  for  max(int,ParsePosition)	110	None	replace
1467	[BUG]  [BUGGY]  offset  =  Math.min(parseEndOffset,  pos);  [CE]  no  suitable  method  found  for  min(int,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.min(parseEndOffset,  pos);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	non-compiled	[CE]  no  suitable  method  found  for  min(int,ParsePosition)	110	None	replace
1468	[BUG]  [BUGGY]  offset  =  Math.min(parseEndOffset,  parseStartOffset);  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  parseStartOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.min(parseEndOffset,  parseStartOffset);	  offset    =    Math.max(parseEndOffset,    parseEndOffset);    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	110	None	replace
1469	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  +  1;  if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
1470	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1;  if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
1471	[BUG]  [BUGGY]  offset  =  parseEndOffset?  date.getOffset()  :  parseEndOffset;  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  date.getOffset()  :  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  date.getOffset()  :  parseEndOffset;	  offset    =    parseEndOffset?    pos.getOffset()    :    parseEndOffset;    	non-compiled	[CE]  incompatible  types	197	None	replace
1472	[BUG]  [BUGGY]  offset  =  DateTimeUtils.getLocalMillis(pos);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.getLocalMillis(pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.getLocalMillis(pos);	  offset    =    pos.getLocalMillis();    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	42	None	replace
1473	[BUG]  [BUGGY]  offset  =  timezoneIndicator.getLocalMillis();  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  timezoneIndicator.getLocalMillis();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneIndicator.getLocalMillis();	  offset    =    pos.getLocalMillis();    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	42	None	replace
1474	[BUG]  [BUGGY]  int  endOffset  =  endOffset  -  2;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  endOffset  -  2;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    2;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	204	None	replace
1475	[BUG]  [BUGGY]  offset  =  pos.offset  -  1;  int  endOffset  =  pos.offset  -  2;  [CE]  cannot  find  symbol  offset  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  1;  int  endOffset  =  pos.offset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  1;  int  endOffset  =  pos.offset  -  2;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    2;    	non-compiled	[CE]  cannot  find  symbol  offset	204	None	replace
1476	[BUG]  [BUGGY]  offset  =  parseEndOffset;  Offset  offset  =  parseEndOffset  +  1;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  Offset  offset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  Offset  offset  =  parseEndOffset  +  1;	  offset    =    parseEndOffset;    Offset    offset    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
1477	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  Offset  offset  =  parseEndOffset;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset;  Offset  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  offset;  Offset  offset  =  parseEndOffset;	  offset    =    parseEndOffset;    Offset    offset    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
1478	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	219	None	add
1479	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
1480	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
1481	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  break;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [CE]  break  outside  switch  or  loop  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  break;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  break;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	non-compiled	[CE]  break  outside  switch  or  loop	219	None	add
1482	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset!=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1483	[BUG]  [BUGGY]  offset  =  date.length();  if(offset!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset!=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1484	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  -1)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset  ==  -1)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1485	[BUG]  [BUGGY]  offset  =  date.length();  if(offset  ==  -1)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  -1)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset  ==  -1)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1486	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset!=  -1)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset!=  -1)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1487	[BUG]  [BUGGY]  offset  =  date.length();  if(offset!=  -1)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset!=  -1)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset!=  -1)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1488	[BUG]  [BUGGY]  offset  =  date.length();  pos.setLength(offset);  offset  =  date.length();  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  pos.setLength(offset);  offset  =  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    pos.setLength(offset);  offset  =  date.length();	  	non-compiled	[CE]  cannot  find  symbol	82	None	add
1489	[BUG]  [BUGGY]  offset  =  date.length();  pos.setLength(0);  offset  =  date.length();  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  pos.setLength(0);  offset  =  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    pos.setLength(0);  offset  =  date.length();	  	non-compiled	[CE]  cannot  find  symbol	82	None	add
1490	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  int  dateOffset  =  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    int  dateOffset  =  date.length();	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1491	[BUG]  [BUGGY]  offset  =  date.length();  int  dateOffset  =  date.length();  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  int  dateOffset  =  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    int  dateOffset  =  date.length();	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1492	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  1000;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  offset)/  1000;	  offset    =(parseEndOffset    -    offset)/    10;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
1493	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  1000;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  1000;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)/  1000;	  offset    =(parseEndOffset    -    offset)/    10;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
1494	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  offset)/  3;	  offset    =(parseEndOffset    -    offset)/    10;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
1495	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  3;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)/  3;	  offset    =(parseEndOffset    -    offset)/    10;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
1496	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  4;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  offset)/  4;	  offset    =(parseEndOffset    -    offset)/    10;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
1497	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  4;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  4;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)/  4;	  offset    =(parseEndOffset    -    offset)/    10;    	compilable	  [FE]  JsonSyntaxException  	117	1	replace
1498	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	parseEndOffset  =  endOffset  +  1;	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	57	1	replace
1499	[BUG]  [BUGGY]  parseEndOffset  =  endOffset  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  endOffset  +  1;	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	57	1	replace
1500	[BUG]  [BUGGY]  parseEndOffset  =  pos  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  pos  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  pos  +  1;	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	57	None	replace
1501	[BUG]  [BUGGY]  offset  =(milliseconds  -  parseStartOffset)/  10;  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(milliseconds  -  parseStartOffset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(milliseconds  -  parseStartOffset)/  10;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	119	None	replace
1502	[BUG]  [BUGGY]  offset  =(miniseconds  -  parseEndOffset)/  10;  [CE]  cannot  find  symbol  miniseconds  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(miniseconds  -  parseEndOffset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(miniseconds  -  parseEndOffset)/  10;	  offset    =(parseEndOffset    -    milliseconds)/    10;    	non-compiled	[CE]  cannot  find  symbol  miniseconds	119	None	replace
1503	[BUG]  [BUGGY]  parseEndOffset  -  startOffset;  [CE]  not  a  statement  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -  startOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  -  startOffset;	  offset    =    endOffset    -    1;    parseEndOffset    -    startOffset;    offset    =    endOffset    -    1;    	non-compiled	[CE]  not  a  statement	154	None	replace
1504	[BUG]  [BUGGY]  parseEndOffset  -  startOffset;  this.offset  =  endOffset  -  1;  [CE]  not  a  statement  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -  startOffset;  this.offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  -  startOffset;  this.offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    startOffset;    offset    =    endOffset    -    1;    	non-compiled	[CE]  not  a  statement	154	None	replace
1505	[BUG]  [BUGGY]  offset  =  DateTimeUtils.getLowerCase(pos);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.getLowerCase(pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.getLowerCase(pos);	  offset    =    pos.getLowerCase();    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	179	None	replace
1506	[BUG]  [BUGGY]  offset  =  pos.getLowerCase(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getLowerCase(timezoneIndicator);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getLowerCase(timezoneIndicator);	  offset    =    pos.getLowerCase();    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	179	None	replace
1507	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	174	None	add
1508	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	174	None	add
1509	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1510	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
1511	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  offset  =  startOffset  -  1;  [CE]  cannot  find  symbol  startOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  1;  offset  =  startOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  startOffset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  startOffset	98	None	add
1512	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        -        1;        offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  endOffset  -  1;	  	compilable	  [FE]  JsonSyntaxException  	98	1	add
1513	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  offset  =  endOffset  -  1;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  endOffset  -  1;	  	compilable	  [FE]  JsonSyntaxException  	98	1	add
1514	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
1515	[BUG]  [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
1516	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	parseEndOffset  =  offset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
1517	[BUG]  [BUGGY]  parseEndOffset  =  offset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  offset;  if(offset  <  0)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
1518	[BUG]  [BUGGY]  offset  =  pos;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [CE]  incompatible  types  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	non-compiled	[CE]  incompatible  types	192	None	replace
1519	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
1520	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
1521	[BUG]  [BUGGY]  offset  =  startOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [CE]  cannot  find  symbol  startOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	192	None	replace
1522	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  Offset  offset  =(parseEndOffset  -  milliseconds)/  10;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  Offset  offset  =(parseEndOffset  -  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    milliseconds)/    10;    Offset  offset  =(parseEndOffset  -  milliseconds)/  10;	  	non-compiled	[CE]  cannot  find  symbol	118	None	add
1523	[BUG]  [BUGGY]  offset  =  0;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	138	None	replace
1524	[BUG]  [BUGGY]  offset  =  tz;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  tz  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  tz;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  tz;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  tz	138	None	replace
1525	[BUG]  [BUGGY]  offset  =  date.offset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  offset  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.offset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.offset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  offset	138	None	replace
1526	[BUG]  [BUGGY]  offset  =(offset  -  byseEndOffset)?  1  :  0;  [CE]  cannot  find  symbol  byseEndOffset  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  byseEndOffset)?  1  :  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  byseEndOffset)?  1  :  0;	  offset    =(parseEndOffset    -    offset)?    1    :    0;    	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	188	None	replace
1527	[BUG]  [BUGGY]  offset  =(offset  -  parseStartOffset)?  1  :  0;  [CE]  cannot  find  symbol  parseStartOffset  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseStartOffset)?  1  :  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  parseStartOffset)?  1  :  0;	  offset    =(parseEndOffset    -    offset)?    1    :    0;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	188	None	replace
1528	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)?  1L  :  0;  [CE]  incompatible  types  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)?  1L  :  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)?  1L  :  0;	  offset    =(parseEndOffset    -    offset)?    1    :    0;    	non-compiled	[CE]  incompatible  types	188	None	replace
1529	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  pos.setLength(0);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  pos.setLength(0);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    pos.setLength(0);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
1530	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  pos.setTime(timezoneIndicator);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  pos.setTime(timezoneIndicator);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    pos.setTime(timezoneIndicator);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	49	None	add
1531	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0'  ||  date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0'  ||  date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)  ==  '0'  ||  date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)    ==    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	6	None	replace
1532	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
1533	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  -1)  {  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  -1)  {  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  -1)  {  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
1534	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  -1)  {  offset  =  endOffset  +  1;  if(offset  ==  startOffset)  {  offset  =  endOffset  +  1;  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  -1)  {  offset  =  endOffset  +  1;  if(offset  ==  startOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  -1)  {  offset  =  endOffset  +  1;  if(offset  ==  startOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
1535	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
1536	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
1537	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
1538	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  0)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
1539	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
1540	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	56	1	add
1541	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	4	None	replace
1542	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	50	1	replace
1543	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	50	1	replace
1544	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  'catch'  without  'try'	54	None	add
1545	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  'catch'  without  'try'	54	None	add
1546	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  'catch'  without  'try'	54	None	add
1547	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  'catch'  without  'try'	54	None	add
1548	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  3;	  offset    =    1;    	compilable	  [FE]  JsonSyntaxException  	115	1	replace
1549	[BUG]  [BUGGY]  offset  =  3;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  3;	  offset    =    1;    	compilable	  [FE]  JsonSyntaxException  	115	1	replace
1550	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  4;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  4;	  offset    =    1;    	compilable	  [FE]  JsonSyntaxException  	115	1	replace
1551	[BUG]  [BUGGY]  offset  =  4;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  4;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  4;	  offset    =    1;    	compilable	  [FE]  JsonSyntaxException  	115	1	replace
1552	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  10;	  offset    =    1;    	compilable	  [FE]  JsonSyntaxException  	115	1	replace
1553	[BUG]  [BUGGY]  offset  =  10;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  10;	  offset    =    1;    	compilable	  [FE]  JsonSyntaxException  	115	1	replace
1554	[BUG]  [BUGGY]  offset  =  milliseconds  -  offset;  pos  =  milliseconds  -  offset;  [CE]  incompatible  types  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  offset;  pos  =  milliseconds  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    offset;    pos  =  milliseconds  -  offset;	  	non-compiled	[CE]  incompatible  types	91	None	add
1555	[BUG]  [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	135	None	replace
1556	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i  +  1)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i  +  1)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i  +  1)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
1557	[BUG]  [BUGGY]  offset  =  byseEndOffset  -  offset;  [CE]  cannot  find  symbol  byseEndOffset  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  byseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  byseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    offset    =    byseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	63	None	replace
1558	[BUG]  [BUGGY]  offset  =  pos.seconds  -  offset;  [CE]  cannot  find  symbol  seconds  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.seconds  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.seconds  -  offset;	  offset    =    parseEndOffset    -    offset;    offset    =    byseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  seconds	63	None	replace
1559	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	For(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	201	None	replace
1560	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	201	None	replace
1561	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
1562	[BUG]  [BUGGY]  offset  =  0;  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
1563	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
1564	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
1565	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
1566	[BUG]  [BUGGY]  offset  =  0;  if(offset  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
1567	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  pos.setLength(0);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  pos.setLength(0);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    pos.setLength(0);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
1568	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	45	1	add
1569	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	45	1	add
1570	[BUG]  [BUGGY]  offset  =  pos?  parseEndOffset?  pos.getOffset()  :  parseEndOffset;  [CE]  :  expected  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos?  parseEndOffset?  pos.getOffset()  :  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos?  parseEndOffset?  pos.getOffset()  :  parseEndOffset;	  offset    =    parseEndOffset?    pos.getOffset()    :    pos;    	non-compiled	[CE]  :  expected	143	None	replace
1571	[BUG]  [BUGGY]  offset  =  parseEndOffset?  date.getOffset()  :  pos;  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  date.getOffset()  :  pos;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  date.getOffset()  :  pos;	  offset    =    parseEndOffset?    pos.getOffset()    :    pos;    	non-compiled	[CE]  incompatible  types	143	None	replace
1572	[BUG]  [BUGGY]  offset  =  pos.getOffset()?  parseEndOffset  :  pos;  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()?  parseEndOffset  :  pos;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()?  parseEndOffset  :  pos;	  offset    =    parseEndOffset?    pos.getOffset()    :    pos;    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
1573	[BUG]  [BUGGY]  parseOffset(date,  pos);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseOffset(date,  pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseOffset(date,  pos);	  offset    =    0;    parseOffset(offset,    pos);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
1574	[BUG]  [BUGGY]  parseOffset(offset,  pos);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseOffset(offset,  pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseOffset(offset,  pos);	  offset    =    0;    parseOffset(offset,    pos);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
1575	[BUG]  [BUGGY]  offset  =  parseDecimalOffset;  [CE]  cannot  find  symbol  parseDecimalOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseDecimalOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseDecimalOffset;	  offset    =    parseEndOffset;    offset    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol  parseDecimalOffset	32	None	replace
1576	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    ==    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	148	None	replace
1577	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    ==    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	148	None	replace
1578	[BUG]  [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	212	None	replace
1579	[BUG]  [BUGGY]  if(parseEndOffset  >  parseEndOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  parseEndOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  parseEndOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	212	None	replace
1580	[BUG]  [BUGGY]  offset  =  startOffset  -  offset;  [CE]  cannot  find  symbol  startOffset  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  -  offset;	  offset    =    length    -    offset;    	non-compiled	[CE]  cannot  find  symbol  startOffset	167	None	replace
1581	[BUG]  [BUGGY]  offset  =  date  +  1;  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date  +  1;	  offset    =    startOffset    +    1;    	non-compiled	[CE]  incompatible  types	24	None	replace
1582	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  endOffset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  int  endOffset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    int  endOffset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	172	None	add
1583	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	211	None	add
1584	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	211	1	add
1585	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	211	1	add
1586	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " "));  }	  	non-compiled	[CE]  	211	None	add
1587	[BUG]  [BUGGY]  offset  =  milliseconds;  pos.setLength(parseEndOffset);  offset  =  milliseconds;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  pos.setLength(parseEndOffset);  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    pos.setLength(parseEndOffset);  offset  =  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol	107	None	add
1588	[BUG]  [BUGGY]  offset  =  milliseconds;  pos.setOffset(offset);  offset  =  milliseconds;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  pos.setOffset(offset);  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    pos.setOffset(offset);  offset  =  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol	107	None	add
1589	[BUG]  [BUGGY]  offset  =  milliseconds;  pos.setLength(offset);  offset  =  milliseconds;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  pos.setLength(offset);  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    pos.setLength(offset);  offset  =  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol	107	None	add
1590	[BUG]  [BUGGY]  offset  =  milliseconds;  pos.setLength(0);  offset  =  milliseconds;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  pos.setLength(0);  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    pos.setLength(0);  offset  =  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol	107	None	add
1591	[BUG]  [BUGGY]  offset  =  milliseconds;  pos.setLength(parseStartOffset);  offset  =  milliseconds;  [CE]  cannot  find  symbol  parseStartOffset  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  pos.setLength(parseStartOffset);  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    pos.setLength(parseStartOffset);  offset  =  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	107	None	add
1592	[BUG]  [BUGGY]  offset  =  milliseconds;  pos.setLength(milliseconds);  offset  =  milliseconds;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  pos.setLength(milliseconds);  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    pos.setLength(milliseconds);  offset  =  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol	107	None	add
1593	[BUG]  [BUGGY]  offset  =  pos.getOffset();  Offset  endOffset  =  endOffset  -  1;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  Offset  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  Offset  endOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
1594	[BUG]  [BUGGY]  if(parseEndOffset  >  parseEndOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  parseEndOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  parseEndOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	169	None	replace
1595	[BUG]  [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	169	None	replace
1596	[BUG]  [BUGGY]  offset  =  parseStartOffset;  parseEndOffset  =  parseEndOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  parseEndOffset  =  parseEndOffset;	  offset    =    parseEndOffset;    parseEndOffset    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	34	None	replace
1597	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset;  parseEndOffset  =  parseEndOffset;	  offset    =    parseEndOffset;    parseEndOffset    =    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	34	1	replace
1598	[BUG]  [BUGGY]  offset  =  endOffset;  parseEndOffset  =  parseEndOffset;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset;  parseEndOffset  =  parseEndOffset;	  offset    =    parseEndOffset;    parseEndOffset    =    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	34	1	replace
1599	[BUG]  [BUGGY]  offset  =  startOffset;  parseEndOffset  =  startOffset;  [CE]  cannot  find  symbol  startOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset;  parseEndOffset  =  startOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset;  parseEndOffset  =  startOffset;	  offset    =    parseEndOffset;    parseEndOffset    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol  startOffset	34	None	replace
1600	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i  +  1)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i  +  1)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i  +  1)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)    ==    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	2	None	replace
1601	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  offset;  i++)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  offset;  i++)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  offset;  i++)  {  if(date.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)    ==    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	2	None	replace
1602	[BUG]  [BUGGY]  offset  =  offset  -  timezoneOffset;  [CE]  cannot  find  symbol  timezoneOffset  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  timezoneOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  timezoneOffset;	  offset    =    offset    -    parseStartOffset;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	166	None	replace
1603	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	215	1	add
1604	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	215	1	add
1605	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	compilable	  [FE]  JsonSyntaxException  	196	1	replace
1606	[BUG]  [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	compilable	  [FE]  JsonSyntaxException  	196	1	replace
1607	[BUG]  [BUGGY]  offset  =  pos;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [CE]  incompatible  types  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	non-compiled	[CE]  incompatible  types	196	None	replace
1608	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.offset()  :  pos.offset();  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.offset()  :  pos.offset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.offset()  :  pos.offset();	  offset    =    pos.offset();    	non-compiled	[CE]  incompatible  types	209	None	replace
1609	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.offset()  :  pos.offset;  [CE]  incompatible  types  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.offset()  :  pos.offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.offset()  :  pos.offset;	  offset    =    pos.offset();    	non-compiled	[CE]  incompatible  types	209	None	replace
1610	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.offset()  :  endOffset;  [CE]  incompatible  types  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.offset()  :  endOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.offset()  :  endOffset;	  offset    =    pos.offset();    	non-compiled	[CE]  incompatible  types	209	None	replace
1611	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
1612	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
1613	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	217	None	add
1614	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
1615	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value. ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
1616	[BUG]  [BUGGY]  offset  =  endOffset  -  start;  [CE]  cannot  find  symbol  start  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  start;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  start;	  offset    =    endOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  start	96	None	replace
1617	[BUG]  [BUGGY]  offset  =  endOffset  -  startOffset;  [CE]  cannot  find  symbol  startOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  startOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  startOffset;	  offset    =    endOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  startOffset	96	None	replace
1618	[BUG]  [BUGGY]  if(parseEndOffset  >  parseEndOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  parseEndOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  parseEndOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	171	None	replace
1619	[BUG]  [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	171	None	replace
1620	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  length)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  length  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >=  length)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >=  length)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	171	None	replace
1621	[BUG]  [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	add
1622	[BUG]  [BUGGY]  offset  =  offset  -  1;  pos.setLength(parseEndOffset);  offset  =  offset  -  1;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  pos.setLength(parseEndOffset);  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    pos.setLength(parseEndOffset);  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
1623	[BUG]  [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	add
1624	[BUG]  [BUGGY]  offset  =  offset  -  1;  pos.setLength(offset);  offset  =  offset  -  1;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  pos.setLength(offset);  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    pos.setLength(offset);  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
1625	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  0;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	parseEndOffset  =  0;  offset  =  0;	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	compilable	  [FE]  JsonSyntaxException  	130	1	replace
1626	[BUG]  [BUGGY]  parseEndOffset  =  0;  offset  =  0;  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  0;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  0;  offset  =  0;	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	compilable	  [FE]  JsonSyntaxException  	130	1	replace
1627	[BUG]  [BUGGY]  int  offset  =  parseEndOffset(date);  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  parseEndOffset(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  parseEndOffset(date);	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	130	None	replace
1628	[BUG]  [BUGGY]  parseEndOffset  =  pos;  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  pos;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  pos;	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	non-compiled	[CE]  incompatible  types	130	None	replace
1629	[BUG]  [BUGGY]  int  offset  =  parseEndOffset  -  startOffset;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  parseEndOffset  -  startOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  parseEndOffset  -  startOffset;	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	130	None	replace
1630	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  *  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  *  parseEndOffset;	  offset    =    offset    -    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
1631	[BUG]  [BUGGY]  offset  =  offset  *  parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  *  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  *  parseEndOffset;	  offset    =    offset    -    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	90	1	replace
1632	[BUG]  [BUGGY]  offset  =  offset  -  minSecondsOffset;  [CE]  cannot  find  symbol  minSecondsOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  minSecondsOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  minSecondsOffset;	  offset    =    offset    -    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol  minSecondsOffset	90	None	replace
1633	[BUG]  [BUGGY]  offset  =  offset  -  minSeconds;  [CE]  cannot  find  symbol  minSeconds  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  minSeconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  minSeconds;	  offset    =    offset    -    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol  minSeconds	90	None	replace
1634	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  startOffset  +  1;  offset  =  endOffset  +  1;  [CE]  cannot  find  symbol  startOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  startOffset  +  1;  offset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        offset    =    endOffset    +    1;    offset  =  startOffset  +  1;  offset  =  endOffset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  startOffset	43	None	add
1635	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  start;  [CE]  cannot  find  symbol  start  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  start;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  start;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  start	60	None	replace
1636	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  Offset  offset  =(parseEndOffset  -  offset)/  10;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  Offset  offset  =(parseEndOffset  -  offset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    10;    Offset  offset  =(parseEndOffset  -  offset)/  10;	  	non-compiled	[CE]  cannot  find  symbol	116	None	add
1637	[BUG]  [BUGGY]  parseEndOffset  =  0;  result.add( "- ");  offset  =  0;  [CE]  cannot  find  symbol  result  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  0;  result.add( "- ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  0;  result.add( "- ");  offset  =  0;	  offset    =    0;    result.add(   "-   ");    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  result	183	None	replace
1638	[BUG]  [BUGGY]  parseEndOffset  =  0;  parseFilter.add( "- ");  offset  =  0;  [CE]  cannot  find  symbol  parseFilter  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  0;  parseFilter.add( "- ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  0;  parseFilter.add( "- ");  offset  =  0;	  offset    =    0;    result.add(   "-   ");    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  parseFilter	183	None	replace
1639	[BUG]  [BUGGY]  offset  =  DateTimeUtils.getLowerBound(pos);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.getLowerBound(pos);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.getLowerBound(pos);	  offset    =    pos.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	178	None	replace
1640	[BUG]  [BUGGY]  offset  =  DateTimeUtils.getLowerBound();  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.getLowerBound();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.getLowerBound();	  offset    =    pos.getLowerBound();    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	178	None	replace
1641	[BUG]  [BUGGY]  int  offset  =  parseEndOffset(date.length()  -  offset);  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  parseEndOffset(date.length()  -  offset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  parseEndOffset(date.length()  -  offset);	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	127	None	replace
1642	[BUG]  [BUGGY]  offset  =  timezoneOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  timezoneOffset  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  timezoneOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    Offset    offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	62	None	replace
1643	[BUG]  [BUGGY]  offset  =  pos.getOffset();  Offset  offset  =  pos.getOffset();  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  Offset  offset  =  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  Offset  offset  =  pos.getOffset();	  offset    =    parseEndOffset    -    offset;    Offset    offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
1644	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  +  1;  if(offset  >=  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
1645	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1;  if(offset  >=  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
1646	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
1647	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
1648	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
1649	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	173	1	replace
1650	[BUG]  [BUGGY]  offset  =  pos  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  +  1;  if(offset  >=  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	173	None	replace
1651	[BUG]  [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1652	[BUG]  [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1653	[BUG]  [BUGGY]  if(parseEndOffset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1654	[BUG]  [BUGGY]  if(parseEndOffset  >=  -1)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  -1)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >=  -1)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1655	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	129	1	replace
1656	[BUG]  [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	129	1	replace
1657	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	129	1	replace
1658	[BUG]  [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	129	1	replace
1659	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	46	1	replace
1660	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	46	1	replace
1661	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  +  1;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	46	1	replace
1662	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	46	1	replace
1663	[BUG]  [BUGGY]  offset  =  pos  +  1L;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  +  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  +  1L;	  offset    =    pos    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	23	None	replace
1664	[BUG]  [BUGGY]  offset  =  DateTimeUtils.getOffset(date);  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.getOffset(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.getOffset(date);	  offset    =    date.getOffset();    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	25	None	replace
1665	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  offset  -  1  +  1;	  offset    =    offset    -    1;    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
1666	[BUG]  [BUGGY]  offset  =  offset  -  1  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  1  +  1;	  offset    =    offset    -    1;    	compilable	  [FE]  JsonSyntaxException  	15	1	replace
1667	[BUG]  [BUGGY]  offset  =  offset  -  1L;  [CE]  possible  loss  of  precision  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  1L;	  offset    =    offset    -    1;    	non-compiled	[CE]  possible  loss  of  precision	15	None	replace
1668	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  offset;  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  offset;  }	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	80	None	add
1669	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	80	None	add
1670	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  parseEndOffset  =  parseEndOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset    -    offset    +    1;    parseEndOffset  =  parseEndOffset  -  offset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	207	1	add
1671	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  parseEndOffset  =  parseEndOffset  -  offset  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  parseEndOffset  =  parseEndOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset    +    1;    parseEndOffset  =  parseEndOffset  -  offset  +  1;	  	compilable	  [FE]  JsonSyntaxException  	207	1	add
1672	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  pos  =  parseEndOffset  -  offset  +  1;  [CE]  incompatible  types  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  1;  pos  =  parseEndOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    offset    +    1;    pos  =  parseEndOffset  -  offset  +  1;	  	non-compiled	[CE]  incompatible  types	207	None	add
1673	[BUG]  [BUGGY]  offset    =    0;    parseEndOffset  =  0;  Offset  offset  =  0;  parseEndOffset  =  0;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    parseEndOffset  =  0;  Offset  offset  =  0;  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        parseEndOffset    =    0;    Offset  offset  =  0;  parseEndOffset  =  0;	  	non-compiled	[CE]  cannot  find  symbol	184	None	add
1674	[BUG]  [BUGGY]  offset    =    0;    parseEndOffset  =  0;  Offset  =  0;  parseEndOffset  =  0;  [CE]  cannot  find  symbol  Offset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    parseEndOffset  =  0;  Offset  =  0;  parseEndOffset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        parseEndOffset    =    0;    Offset  =  0;  parseEndOffset  =  0;	  	non-compiled	[CE]  cannot  find  symbol  Offset	184	None	add
1675	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
1676	[BUG]  [BUGGY]  offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
1677	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
1678	[BUG]  [BUGGY]  offset  =  0;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
1679	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
1680	[BUG]  [BUGGY]  offset  =  endOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
1681	[BUG]  [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset;  timezoneIndicator  =  DateTimeUtils.getDate(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getDate(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	137	None	replace
1682	[BUG]  [BUGGY]  offset  =  Math.max(offset,  parseEndOffset));  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  parseEndOffset));  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(offset,  parseEndOffset));	  offset    =    Math.max(parseEndOffset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	113	None	replace
1683	[BUG]  [BUGGY]  offset  =  Math.max(milliseconds,  timezoneOffset));  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(milliseconds,  timezoneOffset));  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(milliseconds,  timezoneOffset));	  offset    =    Math.max(parseEndOffset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	113	None	replace
1684	[BUG]  [BUGGY]  offset  =  1;  parseOffset(offset);  offset  =  1;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseOffset(offset);  offset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    parseOffset(offset);  offset  =  1;	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
1685	[BUG]  [BUGGY]  offset  =  1;  parseOffset  =  1;  [CE]  cannot  find  symbol  parseOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseOffset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    parseOffset  =  1;	  	non-compiled	[CE]  cannot  find  symbol  parseOffset	114	None	add
1686	[BUG]  [BUGGY]  offset  =  1;  parseOffset();  offset  =  1;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseOffset();  offset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    parseOffset();  offset  =  1;	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
1687	[BUG]  [BUGGY]  offset  =  1;  parseOffset(offset);  offset  =  0;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseOffset(offset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    parseOffset(offset);  offset  =  0;	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
1688	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  128;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  128;	  offset    =    endOffset    -    1L;    	compilable	  [FE]  JsonSyntaxException  	139	1	replace
1689	[BUG]  [BUGGY]  offset  =  endOffset  -  128;  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  128;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  128;	  offset    =    endOffset    -    1L;    	compilable	  [FE]  JsonSyntaxException  	139	1	replace
1690	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  Offset  offset  =(parseEndOffset  -  offset)/  2;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  Offset  offset  =(parseEndOffset  -  offset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    2;    Offset  offset  =(parseEndOffset  -  offset)/  2;	  	non-compiled	[CE]  cannot  find  symbol	159	None	add
1691	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseEndOffset  -  offset)/  4;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    offset)/    2;    offset  =(parseEndOffset  -  offset)/  4;	  	compilable	  [FE]  JsonSyntaxException  	159	1	add
1692	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseEndOffset  -  offset)/  4;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  offset  =(parseEndOffset  -  offset)/  4;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    2;    offset  =(parseEndOffset  -  offset)/  4;	  	compilable	  [FE]  JsonSyntaxException  	159	1	add
1693	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	168	None	add
1694	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1695	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1696	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	168	None	add
1697	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1698	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1699	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  timezoneOffset;  [CE]  cannot  find  symbol  timezoneOffset  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  timezoneOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  timezoneOffset;	  offset    =    parseEndOffset    -    offset;    pos    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	164	None	replace
1700	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  date;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  date;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  date;	  offset    =    parseEndOffset    -    offset;    pos    =    parseEndOffset    -    offset;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	164	None	replace
1701	[BUG]  [BUGGY]  offset  =  -offset;  pos.setOffset(offset);  offset  =  -offset;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  pos.setOffset(offset);  offset  =  -offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    pos.setOffset(offset);  offset  =  -offset;	  	non-compiled	[CE]  cannot  find  symbol	176	None	add
1702	[BUG]  [BUGGY]  offset  =  -offset;  pos.setLength(parseEndOffset);  offset  =  -offset;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  pos.setLength(parseEndOffset);  offset  =  -offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    pos.setLength(parseEndOffset);  offset  =  -offset;	  	non-compiled	[CE]  cannot  find  symbol	176	None	add
1703	[BUG]  [BUGGY]  offset  =  -offset;  pos.setLength(-offset);  offset  =  -offset;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  pos.setLength(-offset);  offset  =  -offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    pos.setLength(-offset);  offset  =  -offset;	  	non-compiled	[CE]  cannot  find  symbol	176	None	add
1704	[BUG]  [BUGGY]  offset  =  -offset;  pos.setLength(0);  offset  =  -offset;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  pos.setLength(0);  offset  =  -offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    pos.setLength(0);  offset  =  -offset;	  	non-compiled	[CE]  cannot  find  symbol	176	None	add
1705	[BUG]  [BUGGY]  offset  =  -offset;  pos.setLength(offset);  offset  =  -offset;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  pos.setLength(offset);  offset  =  -offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    pos.setLength(offset);  offset  =  -offset;	  	non-compiled	[CE]  cannot  find  symbol	176	None	add
1706	[BUG]  [BUGGY]  offset  =  -offset;  pos.setLength(parseStartOffset);  offset  =  -offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  pos.setLength(parseStartOffset);  offset  =  -offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    pos.setLength(parseStartOffset);  offset  =  -offset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	176	None	add
1707	[BUG]  [BUGGY]  offset  =  startOffset  -  pos.getOffset();  [CE]  cannot  find  symbol  startOffset  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  -  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  -  pos.getOffset();	  offset    =    parseEndOffset    -    pos.getOffset();    	non-compiled	[CE]  cannot  find  symbol  startOffset	30	None	replace
1708	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  milliseconds  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	10	None	add
1709	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  milliseconds  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	10	None	add
1710	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  pos.setOffset(  offset);  offset  =  milliseconds  -  1;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  pos.setOffset(  offset);  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    pos.setOffset(  offset);  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
1711	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -=  offset;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  1;  parseEndOffset  -=  offset;  offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    offset;    offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	156	1	replace
1712	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -=  offset;  offset  =  endOffset  -  1;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  parseEndOffset  -=  offset;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  parseEndOffset  -=  offset;  offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    offset;    offset    =    endOffset    -    1;    	compilable	  [FE]  JsonSyntaxException  	156	1	replace
1713	[BUG]  [BUGGY]  parseEndOffset  -  offset;  startOffset  =  endOffset  -  1;  [CE]  not  a  statement  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -  offset;  startOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  -  offset;  startOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    offset;    offset    =    endOffset    -    1;    	non-compiled	[CE]  not  a  statement	156	None	replace
1714	[BUG]  [BUGGY]  parseEndOffset  -  offset;  this.offset  =  endOffset  -  1;  [CE]  not  a  statement  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -  offset;  this.offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  -  offset;  this.offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    offset;    offset    =    endOffset    -    1;    	non-compiled	[CE]  not  a  statement	156	None	replace
1715	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  2  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  offset)%  2  +  1;	  offset    =(parseEndOffset    -    offset)%    2;    	compilable	  [FE]  JsonSyntaxException  	158	1	replace
1716	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  2  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  2  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)%  2  +  1;	  offset    =(parseEndOffset    -    offset)%    2;    	compilable	  [FE]  JsonSyntaxException  	158	1	replace
1717	[BUG]  [BUGGY]  offset  =  DateUtils.intValue();  [CE]  cannot  find  symbol  DateUtils  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.intValue();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.intValue();	  offset    =    pos.intValue();    	non-compiled	[CE]  cannot  find  symbol  DateUtils	41	None	replace
1718	[BUG]  [BUGGY]  offset  =  i.length()  +  1;  [CE]  cannot  find  symbol  i  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  i.length()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  i.length()  +  1;	  offset    =    pos.length()    +    1;    	non-compiled	[CE]  cannot  find  symbol  i	85	None	replace
1719	[BUG]  [BUGGY]  offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_SECOND;	  offset    =    0L;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	122	None	replace
1720	[BUG]  [BUGGY]  offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_DAY;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_DAY;	  offset    =    0L;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	122	None	replace
1721	[BUG]  [BUGGY]  offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_DECEMBER;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_DECEMBER;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_DECEMBER;	  offset    =    0L;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	122	None	replace
1722	[BUG]  [BUGGY]  offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_MINUTE;	  offset    =    0L;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	122	None	replace
1723	[BUG]  [BUGGY]  offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0L  +  milliseconds  *  DateTimeConstants.MILLIS_PER_WEEK;	  offset    =    0L;    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	122	None	replace
1724	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  startOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	55	None	replace
1725	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	parseEndOffset  =  offset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
1726	[BUG]  [BUGGY]  parseEndOffset  =  offset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  offset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
1727	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset  -  offset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(0,  parseEndOffset  -  offset);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
1728	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset  -  offset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset  -  offset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(0,  parseEndOffset  -  offset);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
1729	[BUG]  [BUGGY]  int  offset  =  parseEndOffset  -  endOffset;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  parseEndOffset  -  endOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  parseEndOffset  -  endOffset;	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	126	None	replace
1730	[BUG]  [BUGGY]  offset  =  endOffset  +  3;  parseEndOffset(offset);  offset  =  endOffset  +  3;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  3;  parseEndOffset(offset);  offset  =  endOffset  +  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    3;    parseEndOffset(offset);  offset  =  endOffset  +  3;	  	non-compiled	[CE]  cannot  find  symbol	141	None	add
1731	[BUG]  [BUGGY]  offset  =  endOffset  +  3;  parseEndOffset(pos);  offset  =  endOffset  +  3;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  3;  parseEndOffset(pos);  offset  =  endOffset  +  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    3;    parseEndOffset(pos);  offset  =  endOffset  +  3;	  	non-compiled	[CE]  cannot  find  symbol	141	None	add
1732	[BUG]  [BUGGY]  offset  =  this.timezoneIndicator.getOffset();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.timezoneIndicator.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.timezoneIndicator.getOffset();	  offset    =    parseEndOffset.getOffset();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	26	None	replace
1733	[BUG]  [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  Offset  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset        -        offset;        offset    =    parseEndOffset    -    offset;    Offset  offset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
1734	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  2;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  2;  offset  =  0;	  offset    =    0;    offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	124	1	replace
1735	[BUG]  [BUGGY]  offset  =  2;  offset  =  0;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  2;  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  2;  offset  =  0;	  offset    =    0;    offset    =    0;    	compilable	  [FE]  JsonSyntaxException  	124	1	replace
1736	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  'catch'  without  'try'	52	None	add
1737	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  'catch'  without  'try'	52	None	add
1738	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  pos.setTimeZone(timezoneIndicator);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  pos.setTimeZone(timezoneIndicator);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    pos.setTimeZone(timezoneIndicator);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	52	None	add
1739	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  }	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
1740	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  }	  	compilable	  [FE]  JsonSyntaxException  	52	1	add
1741	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  startOffset  +  1;  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  startOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  startOffset  +  1;  }	  	non-compiled	[CE]  'catch'  without  'try'	52	None	add
1742	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  'catch'  without  'try'	52	None	add
1743	[BUG]  [BUGGY]  offset  =  endOffset  +  0L;  [CE]  possible  loss  of  precision  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  0L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  0L;	  offset    =    endOffset    +    1L;    	non-compiled	[CE]  possible  loss  of  precision	140	None	replace
1744	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  pos  =  parseEndOffset  -  milliseconds;  [CE]  incompatible  types  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  pos  =  parseEndOffset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    milliseconds;    pos  =  parseEndOffset  -  milliseconds;	  	non-compiled	[CE]  incompatible  types	93	None	add
1745	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  parseEndOffset  -  milliseconds.length;  [CE]  int  cannot  be  dereferenced  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  parseEndOffset  -  milliseconds.length;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    milliseconds;    offset  =  parseEndOffset  -  milliseconds.length;	  	non-compiled	[CE]  int  cannot  be  dereferenced	93	None	add
1746	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  Offset  offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  Offset  offset  =  endOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    2;    Offset  offset  =  endOffset  -  1;  offset  =  endOffset  -  2;	  	non-compiled	[CE]  cannot  find  symbol	202	None	add
1747	[BUG]  [BUGGY]  offset  =  pos.offset  -  1;  pos  =  endOffset  -  1;  [CE]  cannot  find  symbol  offset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  1;  pos  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  1;  pos  =  endOffset  -  1;	  offset    =    endOffset    -    1;    pos    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  offset	103	None	replace
1748	[BUG]  [BUGGY]  parseEndOffset  -  1;  pos  =  endOffset  -  1;  [CE]  not  a  statement  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  -  1;  pos  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  -  1;  pos  =  endOffset  -  1;	  offset    =    endOffset    -    1;    pos    =    endOffset    -    1;    	non-compiled	[CE]  not  a  statement	103	None	replace
1749	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    ==    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	5	None	replace
1750	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(0)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    ==    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	5	None	replace
1751	[BUG]  [BUGGY]  offset  =  startOffset.length();  [CE]  cannot  find  symbol  startOffset  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset.length();	  offset    =    parseStartOffset.length();    	non-compiled	[CE]  cannot  find  symbol  startOffset	86	None	replace
1752	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  int  endOffset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    int  endOffset  =  startOffset  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	47	None	add
1753	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	47	1	add
1754	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	47	1	add
1755	[BUG]  [BUGGY]  offset  =  0;  result.add( "msg.no.digits ");  offset  =  0;  [CE]  cannot  find  symbol  result  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  result.add( "msg.no.digits ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  result.add( "msg.no.digits ");  offset  =  0;	  offset    =    0;    result.add(   "n   ");    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  result	181	None	replace
1756	[BUG]  [BUGGY]  offset  =  0;  result.add( "N   ");  offset  =  0;  [CE]  cannot  find  symbol  result  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  result.add( "N   ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  result.add( "N   ");  offset  =  0;	  offset    =    0;    result.add(   "n   ");    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  result	181	None	replace
1757	[BUG]  [BUGGY]  offset  =  0;  result.add( "in ");  offset  =  0;  [CE]  cannot  find  symbol  result  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  result.add( "in ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  result.add( "in ");  offset  =  0;	  offset    =    0;    result.add(   "n   ");    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  result	181	None	replace
1758	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	170	None	add
1759	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	170	None	add
1760	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  if(offset!=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  'catch'  without  'try'	170	None	add
1761	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  -  offset)/  2  +  1;	  offset    =(parseEndOffset    -    offset)/    2;    	compilable	  [FE]  JsonSyntaxException  	160	1	replace
1762	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  2  +  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)/  2  +  1;	  offset    =(parseEndOffset    -    offset)/    2;    	compilable	  [FE]  JsonSyntaxException  	160	1	replace
1763	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  -  1  :  pos.getOffset()  -  1;  [CE]  incompatible  types  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  -  1  :  pos.getOffset()  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  -  1  :  pos.getOffset()  -  1;	  offset    =    pos.getOffset()    -    1;    	non-compiled	[CE]  incompatible  types	205	None	replace
1764	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getOffset()  -  1;  [CE]  incompatible  types  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getOffset()  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  pos.getOffset()  -  1;	  offset    =    pos.getOffset()    -    1;    	non-compiled	[CE]  incompatible  types	205	None	replace
1765	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  pos.getOffset()  -  1;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  pos.getOffset()  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  pos.getOffset()  -  1;	  offset    =    pos.getOffset()    -    1;    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
1766	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  -  1  :  pos.getOffset();  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  -  1  :  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  -  1  :  pos.getOffset();	  offset    =    pos.getOffset()    -    1;    	non-compiled	[CE]  incompatible  types	205	None	replace
1767	[BUG]  [BUGGY]  offset  =  pos.getOffset();  int  endOffset  =  pos.getEndOffset();  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset();  int  endOffset  =  pos.getEndOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset();  int  endOffset  =  pos.getEndOffset();	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
1768	[BUG]  [BUGGY]  offset  =  startOffset  -  1;  int  endOffset  =  endOffset  -  1;  [CE]  cannot  find  symbol  startOffset  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  -  1;  int  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  -  1;  int  endOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  startOffset	100	None	replace
1769	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	125	1	replace
1770	[BUG]  [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	125	1	replace
1771	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	125	1	replace
1772	[BUG]  [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	125	1	replace
1773	[BUG]  [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1774	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(parseEndOffset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	125	1	replace
1775	[BUG]  [BUGGY]  if(parseEndOffset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	125	1	replace
1776	[BUG]  [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1777	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  -1)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(parseEndOffset  >=  -1)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	125	1	replace
1778	[BUG]  [BUGGY]  if(parseEndOffset  >=  -1)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  -1)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >=  -1)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	125	1	replace
1779	[BUG]  [BUGGY]  offset  =  pos.seconds;  [CE]  cannot  find  symbol  seconds  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.seconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.seconds;	  offset    =    pos.offset;    	non-compiled	[CE]  cannot  find  symbol  seconds	40	None	replace
1780	[BUG]  [BUGGY]  offset  =  timezoneOffset  -  1;  [CE]  cannot  find  symbol  timezoneOffset  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  timezoneOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneOffset  -  1;	  offset    =    parseStartOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	206	None	replace
1781	[BUG]  [BUGGY]  offset  =  date.length  -  1;  [CE]  cannot  find  symbol  length  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  date.length  -  1;	  offset    =    parseStartOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	206	None	replace
1782	[BUG]  [BUGGY]  if(offset  ==  0)  {  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  ==  0)  {  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  ==  0)  {  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1783	[BUG]  [BUGGY]  if(offset  >=  0)  {  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  >=  0)  {  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  >=  0)  {  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1784	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  -  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	48	1	replace
1785	[BUG]  [BUGGY]  offset  =  endOffset  -  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  -  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	48	1	replace
1786	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  +  1;  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	48	1	replace
1787	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1;  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	48	1	replace
1788	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	48	1	replace
1789	[BUG]  [BUGGY]  offset  =  endOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	48	1	replace
1790	[BUG]  [BUGGY]  if(parseEndOffset  >  parseEndOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  parseEndOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  parseEndOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	214	None	replace
1791	[BUG]  [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  0)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	214	None	replace
1792	[BUG]  [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >=  0)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	214	None	replace
1793	[BUG]  [BUGGY]  offset  =  offset  +  1;  pos.setLength(parseEndOffset);  offset  =  offset  +  1;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  pos.setLength(parseEndOffset);  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    pos.setLength(parseEndOffset);  offset  =  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
1794	[BUG]  [BUGGY]  offset  =  offset  +  1;  pos.setTime(timezoneIndicator);  offset  =  offset  +  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  pos.setTime(timezoneIndicator);  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    pos.setTime(timezoneIndicator);  offset  =  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	17	None	add
1795	[BUG]  [BUGGY]  offset  =  offset  +  1;  pos.setLength(offset);  offset  =  offset  +  1;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  pos.setLength(offset);  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    pos.setLength(offset);  offset  =  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
1796	[BUG]  [BUGGY]  offset  =  offset  +  1;  pos.setLength(parseEndOffset  +  1);  offset  =  offset  +  1;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  pos.setLength(parseEndOffset  +  1);  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    pos.setLength(parseEndOffset  +  1);  offset  =  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
1797	[BUG]  [BUGGY]  offset  =  offset  +  1;  pos.setLength(0);  offset  =  offset  +  1;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  pos.setLength(0);  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    pos.setLength(0);  offset  =  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol	17	None	add
1798	[BUG]  [BUGGY]  offset  =  offset  +  1;  pos.setLength(timezoneIndicator.getDate());  offset  =  offset  +  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  pos.setLength(timezoneIndicator.getDate());  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    pos.setLength(timezoneIndicator.getDate());  offset  =  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	17	None	add
1799	[BUG]  [BUGGY]  offset  =  offset  +  1;  pos.setLength(parseEndOffset)-  offset;  offset  =  offset  +  1;  [CE]  not  a  statement  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  pos.setLength(parseEndOffset)-  offset;  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    pos.setLength(parseEndOffset)-  offset;  offset  =  offset  +  1;	  	non-compiled	[CE]  not  a  statement	17	None	add
1800	[BUG]  [BUGGY]  offset  =  UTC_ID;  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  UTC_ID;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  UTC_ID;	  offset    =    timezoneOffset;    	non-compiled	[CE]  incompatible  types	145	None	replace
1801	[BUG]  [BUGGY]  offset  =  0;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	132	None	replace
1802	[BUG]  [BUGGY]  offset  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	132	None	replace
1803	[BUG]  [BUGGY]  offset  =  offset.length();  [CE]  int  cannot  be  dereferenced  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset.length();	  offset    =    milliseconds.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	87	None	replace
1804	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  Offset  offset  =(parseEndOffset  +  milliseconds)/  10;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  Offset  offset  =(parseEndOffset  +  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    +    milliseconds)/    10;    Offset  offset  =(parseEndOffset  +  milliseconds)/  10;	  	non-compiled	[CE]  cannot  find  symbol	120	None	add
1805	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(timezoneIndicator!=  null)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(timezoneIndicator!=  null)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	non-compiled	[CE]  'catch'  without  'try'	79	None	replace
1806	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(timezoneIndicator  ==  null)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	non-compiled	[CE]  'catch'  without  'try'	79	None	replace
1807	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1808	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  offset  =  offset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(timezoneIndicator!=  null)  {  offset  =  offset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(timezoneIndicator!=  null)  {  offset  =  offset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	non-compiled	[CE]  'catch'  without  'try'	79	None	replace
1809	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  offset  =  offset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(timezoneIndicator  ==  null)  {  offset  =  offset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(timezoneIndicator  ==  null)  {  offset  =  offset;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	non-compiled	[CE]  'catch'  without  'try'	79	None	replace
1810	[BUG]  [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1811	[BUG]  [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1812	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	compilable	  [FE]  JsonSyntaxException  	131	1	replace
1813	[BUG]  [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	compilable	  [FE]  JsonSyntaxException  	131	1	replace
1814	[BUG]  [BUGGY]  if(parseEndOffset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1815	[BUG]  [BUGGY]  if(parseEndOffset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1816	[BUG]  [BUGGY]  if(parseEndOffset!=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset!=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset!=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1817	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  startOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	53	None	replace
1818	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	53	1	replace
1819	[BUG]  [BUGGY]  parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	53	1	replace
1820	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        parseEndOffset;        offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  offset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	31	1	add
1821	[BUG]  [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  offset  =  parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  offset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	31	1	add
1822	[BUG]  [BUGGY]  offset  =  timezoneOffset  -  offset;  Offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  timezoneOffset  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  timezoneOffset  -  offset;  Offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneOffset  -  offset;  Offset  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    Offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	65	None	replace
1823	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  pos  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  parseEndOffset);  [CE]  incompatible  types  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  pos  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(0,    parseEndOffset);    pos  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  parseEndOffset);	  	non-compiled	[CE]  incompatible  types	111	None	add
1824	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  parseEndOffset  =  Math.max(0,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    Math.max(0,    parseEndOffset);    parseEndOffset  =  Math.max(0,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	111	1	add
1825	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  parseEndOffset  =  Math.max(0,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  parseEndOffset  =  Math.max(0,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(0,    parseEndOffset);    parseEndOffset  =  Math.max(0,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	111	1	add
1826	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  pos  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  parseStartOffset);  [CE]  incompatible  types  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  pos  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  parseStartOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(0,    parseEndOffset);    pos  =  Math.max(0,  parseEndOffset);  offset  =  Math.max(0,  parseStartOffset);	  	non-compiled	[CE]  incompatible  types	111	None	add
1827	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  endOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	69	1	replace
1828	[BUG]  [BUGGY]  offset  =  endOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	69	1	replace
1829	[BUG]  [BUGGY]  offset  =  pos;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	69	None	replace
1830	[BUG]  [BUGGY]  offset  =  0;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	69	None	replace
1831	[BUG]  [BUGGY]  offset  =  endOffset;  if(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  length  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  if(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset;  if(offset  <  length)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  length	69	None	replace
1832	[BUG]  [BUGGY]  offset  =  pos;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos;  if(offset  <  parseStartOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	69	None	replace
1833	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  timezoneOffset;  [CE]  cannot  find  symbol  timezoneOffset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  timezoneOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  timezoneOffset;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	64	None	replace
1834	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  this.timezoneOffset;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  this.timezoneOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  this.timezoneOffset;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	64	None	replace
1835	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  endOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  -  endOffset;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	compilable	  [FE]  JsonSyntaxException  	64	1	replace
1836	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  endOffset;  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  endOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  endOffset;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	compilable	  [FE]  JsonSyntaxException  	64	1	replace
1837	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  parseEndOffset  =  Math.max(parseEndOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    Math.max(parseEndOffset,    parseEndOffset);    parseEndOffset  =  Math.max(parseEndOffset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
1838	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  parseEndOffset  =  Math.max(parseEndOffset,  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  parseEndOffset  =  Math.max(parseEndOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(parseEndOffset,    parseEndOffset);    parseEndOffset  =  Math.max(parseEndOffset,  parseEndOffset);	  	compilable	  [FE]  JsonSyntaxException  	109	1	add
1839	[BUG]  [BUGGY]  offset  =  offset  +  1L;  [CE]  possible  loss  of  precision  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1L;	  offset    =    offset    +    1;    	non-compiled	[CE]  possible  loss  of  precision	18	None	replace
1840	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset;  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset;	  offset    =    parseEndOffset;    pos    =    parseEndOffset;    	non-compiled	[CE]  incompatible  types	37	None	replace
1841	[BUG]  [BUGGY]  offset  =  endOffset;  pos  =  parseEndOffset;  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  pos  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset;  pos  =  parseEndOffset;	  offset    =    parseEndOffset;    pos    =    parseEndOffset;    	non-compiled	[CE]  incompatible  types	37	None	replace
1842	[BUG]  [BUGGY]  offset  =  pos;  pos  =  pos;  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos;  pos  =  pos;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos;  pos  =  pos;	  offset    =    parseEndOffset;    pos    =    parseEndOffset;    	non-compiled	[CE]  incompatible  types	37	None	replace
1843	[BUG]  [BUGGY]  offset  =  parseEndOffset;  pos  =  parseStartOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  pos  =  parseStartOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  pos  =  parseStartOffset;	  offset    =    parseEndOffset;    pos    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	37	None	replace
1844	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	220	None	replace
1845	[BUG]  [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [CE]  cannot  find  symbol  startOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	220	None	replace
1846	[BUG]  [BUGGY]  offset  =  0;  parseEndOffset(parseEndOffset);  offset  =  0;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseEndOffset(parseEndOffset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseEndOffset(parseEndOffset);  offset  =  0;	  offset    =    0;    parseEndOffset(    offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
1847	[BUG]  [BUGGY]  pos  =  0;  parseEndOffset(offset);  offset  =  0;  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  pos  =  0;  parseEndOffset(offset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	pos  =  0;  parseEndOffset(offset);  offset  =  0;	  offset    =    0;    parseEndOffset(    offset);    offset    =    0;    	non-compiled	[CE]  incompatible  types	182	None	replace
1848	[BUG]  [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos,  date.getOffset());  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos,  date.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getOffset(parseEndOffset,  pos,  date.getOffset());	  offset    =    DateUtils.getOffset(parseEndOffset,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1849	[BUG]  [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos,  timezoneOffset.getOffset());  [CE]  cannot  find  symbol  timezoneOffset  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos,  timezoneOffset.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getOffset(parseEndOffset,  pos,  timezoneOffset.getOffset());	  offset    =    DateUtils.getOffset(parseEndOffset,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	144	None	replace
1850	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1851	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1852	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1853	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1854	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1855	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1856	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1857	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1858	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1859	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1860	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1861	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1862	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  else  {  offset  =  0;  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  else  {  offset  =  0;  offset  =  0;  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1863	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  else  {  offset  =  0;  offset  =  0;  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  else  {  offset  =  0;  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  <  0)  {  throw  new  IndexOutOfBoundsException( " ");  }  else  {  offset  =  0;  offset  =  0;  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
1864	[BUG]  [BUGGY]  offset  =  startOffset;  pos.setLength(parseEndOffset);  offset  =  offset;  [CE]  cannot  find  symbol  startOffset  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset;  pos.setLength(parseEndOffset);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset;  pos.setLength(parseEndOffset);  offset  =  offset;	  offset    =    offset;    pos.setLength(parseEndOffset);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  startOffset	134	None	replace
1865	[BUG]  [BUGGY]  offset  =  endOffset;  pos.setLength(parseEndOffset);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset;  pos.setLength(parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  endOffset;  pos.setLength(parseEndOffset);	  offset    =    offset;    pos.setLength(parseEndOffset);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
1866	[BUG]  [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  int  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  int  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        parseEndOffset    =    parseEndOffset;    int  offset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	33	None	add
1867	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  2;  offset  =  endOffset  -  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    endOffset    -    2;    offset  =  endOffset  -  3;	  	compilable	  [FE]  JsonSyntaxException  	12	1	add
1868	[BUG]  [BUGGY]  offset  =  endOffset  -  2;  offset  =  endOffset  -  3;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  2;  offset  =  endOffset  -  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    2;    offset  =  endOffset  -  3;	  	compilable	  [FE]  JsonSyntaxException  	12	1	add
1869	[BUG]  [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  pos.getOffset());  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  pos.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.parseDate(date,  pos,  pos.getOffset());	  offset    =    DateUtils.parseDate(date,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1870	[BUG]  [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  parseEndOffset.getOffset());  [CE]  int  cannot  be  dereferenced  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  parseEndOffset.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.parseDate(date,  pos,  parseEndOffset.getOffset());	  offset    =    DateUtils.parseDate(date,    pos.getOffset());    	non-compiled	[CE]  int  cannot  be  dereferenced	29	None	replace
1871	[BUG]  [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  this.timezoneOffset.getOffset());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  this.timezoneOffset.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.parseDate(date,  pos,  this.timezoneOffset.getOffset());	  offset    =    DateUtils.parseDate(date,    pos.getOffset());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	29	None	replace
1872	[BUG]  [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  this.timezoneIndicator.getOffset());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  this.timezoneIndicator.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.parseDate(date,  pos,  this.timezoneIndicator.getOffset());	  offset    =    DateUtils.parseDate(date,    pos.getOffset());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	29	None	replace
1873	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0  -  offset;	  offset    =    milliseconds    -    offset;    	compilable	  [FE]  JsonSyntaxException  	92	1	replace
1874	[BUG]  [BUGGY]  offset  =  0  -  offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0  -  offset;	  offset    =    milliseconds    -    offset;    	compilable	  [FE]  JsonSyntaxException  	92	1	replace
1875	[BUG]  [BUGGY]  offset  =  timezoneOffset  -  offset  +  1;  [CE]  cannot  find  symbol  timezoneOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  timezoneOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  timezoneOffset  -  offset  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	208	None	replace
1876	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  -  offset  +  2;	  offset    =    parseEndOffset    -    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	208	1	replace
1877	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset  +  2;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  offset  +  2;	  offset    =    parseEndOffset    -    offset    +    1;    	compilable	  [FE]  JsonSyntaxException  	208	1	replace
1878	[BUG]  [BUGGY]  offset  =  startOffset.getOffset();  [CE]  cannot  find  symbol  startOffset  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset.getOffset();	  offset    =    parseStartOffset.getOffset();    	non-compiled	[CE]  cannot  find  symbol  startOffset	28	None	replace
1879	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
1880	[BUG]  [BUGGY]  offset  =  0;  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
1881	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
1882	[BUG]  [BUGGY]  offset  =  0;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset!=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
1883	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset!=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
1884	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset!=  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset!=  -1)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
1885	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  4;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(parseEndOffset  +  milliseconds)/  4;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	121	1	replace
1886	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  4;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  4;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  +  milliseconds)/  4;	  offset    =(parseEndOffset    +    milliseconds)/    10;    	compilable	  [FE]  JsonSyntaxException  	121	1	replace
1887	[BUG]  [BUGGY]  offset  =  offset,  pos.getOffset();  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset,  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset,  pos.getOffset();	  offset    =    parseEndOffset,    pos.getOffset();    	non-compiled	[CE]  ';'  expected	198	None	replace
1888	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset  -  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  Math.max(0,  parseEndOffset  -  parseEndOffset);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
1889	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset  -  parseEndOffset);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset  -  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(0,  parseEndOffset  -  parseEndOffset);	  offset    =    Math.max(0,    parseEndOffset);    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
1890	[BUG]  [BUGGY]  offset  =  parseStartOffset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	75	None	replace
1891	[BUG]  [BUGGY]  int  offset  =  parseEndOffset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  parseEndOffset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  parseEndOffset;  if(offset!=  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	75	None	replace
1892	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset!=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset!=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
1893	[BUG]  [BUGGY]  if(offset!=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset!=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset!=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset!=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	75	1	replace
1894	[BUG]  [BUGGY]  offset  =  parseEndOffset(pos.getOffset()  -  1);  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset(pos.getOffset()  -  1);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset(pos.getOffset()  -  1);	  offset    =    pos.getOffset()    -    1;    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
1895	[BUG]  [BUGGY]  offset  =  endOffset  +  3;  parseEndOffset(  offset,  endOffset  +  3);  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  3;  parseEndOffset(  offset,  endOffset  +  3);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    3;    parseEndOffset(  offset,  endOffset  +  3);	  	non-compiled	[CE]  cannot  find  symbol	141	None	add
1896	[BUG]  [BUGGY]  offset  =  date.length();  pos.setLength(parseEndOffset);  offset  =  date.length();  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  pos.setLength(parseEndOffset);  offset  =  date.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    pos.setLength(parseEndOffset);  offset  =  date.length();	  	non-compiled	[CE]  cannot  find  symbol	82	None	add
1897	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1898	[BUG]  [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1899	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  allowed. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  allowed. ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1900	[BUG]  [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  allowed. ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  allowed. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  allowed. ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1901	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1902	[BUG]  [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1903	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    date.length();    if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1904	[BUG]  [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  date.length();  if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    date.length();    if(offset  ==  0)  {  offset  =  date.length();  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }	  	compilable	  [FE]  JsonSyntaxException  	82	1	add
1905	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getOffset()  +  1;  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getOffset()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  pos.getOffset()  +  1;	  offset    =    parseEndOffset?    pos.getOffset()    :    pos.getOffset();    	non-compiled	[CE]  incompatible  types	27	None	replace
1906	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getLongOffset();  [CE]  incompatible  types  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  pos.getLongOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  pos.getLongOffset();	  offset    =    parseEndOffset?    pos.getOffset()    :    pos.getOffset();    	non-compiled	[CE]  incompatible  types	27	None	replace
1907	[BUG]  [BUGGY]  int  endOffset  =  parseEndOffset  -  2;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  parseEndOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  parseEndOffset  -  2;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    2;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	204	None	replace
1908	[BUG]  [BUGGY]  int  endOffset  =  pos.getOffset();  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  pos.getOffset();	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    2;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	204	None	replace
1909	[BUG]  [BUGGY]  int  endOffset  =  offset  -  2;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  offset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  offset  -  2;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    2;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	204	None	replace
1910	[BUG]  [BUGGY]  int  endOffset  =  pos.getEndOffset();  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  pos.getEndOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  pos.getEndOffset();	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    2;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	204	None	replace
1911	[BUG]  [BUGGY]  int  endOffset  =  pos.getLength();  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  pos.getLength();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  pos.getLength();	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    2;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	204	None	replace
1912	[BUG]  [BUGGY]  offset  =  pos.getOffset(offset);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset(offset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset(offset);	  offset    =    parseEndOffset;    offset    =    parseStartOffset;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
1913	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset;  parseEndOffset  =  offset  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    offset    -    parseEndOffset;    parseEndOffset  =  offset  -  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	89	1	add
1914	[BUG]  [BUGGY]  offset  =  offset  -  parseEndOffset;  parseEndOffset  =  offset  -  parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseEndOffset;  parseEndOffset  =  offset  -  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    parseEndOffset;    parseEndOffset  =  offset  -  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	89	1	add
1915	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(0)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(0)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(0)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
1916	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  off  =  endOffset  -  offset;  [CE]  cannot  find  symbol  off  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  off  =  endOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    offset;    off  =  endOffset  -  offset;	  	non-compiled	[CE]  cannot  find  symbol  off	95	None	add
1917	[BUG]  [BUGGY]  offset  =  endOffset  -  offset;  offset  =  endOffset  -  offset);  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  -  offset;  offset  =  endOffset  -  offset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    -    offset;    offset  =  endOffset  -  offset);	  	non-compiled	[CE]  ';'  expected	95	None	add
1918	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)  >=  '0')  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    >=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	199	None	replace
1919	[BUG]  [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	132	None	replace
1920	[BUG]  [BUGGY]  offset  =  parseEndOffset;  tempZoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  tempZoneIndicator  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  tempZoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  tempZoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  tempZoneIndicator	132	None	replace
1921	[BUG]  [BUGGY]  offset  =  milliseconds  -  startOffset.length();  [CE]  cannot  find  symbol  startOffset  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  startOffset.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  -  startOffset.length();	  offset    =    milliseconds.length();    	non-compiled	[CE]  cannot  find  symbol  startOffset	87	None	replace
1922	[BUG]  [BUGGY]  offset  =  milliseconds  -  fraction.length();  [CE]  int  cannot  be  dereferenced  [FE]                                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  fraction.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds  -  fraction.length();	  offset    =    milliseconds.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	87	None	replace
1923	[BUG]  [BUGGY]  offset  =  this.milliseconds.length();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.milliseconds.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.milliseconds.length();	  offset    =    milliseconds.length();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	87	None	replace
1924	[BUG]  [BUGGY]  offset  =  pos.offset  -  byseEndOffset;  [CE]  cannot  find  symbol  offset  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  byseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  byseEndOffset;	  offset    =    pos.offset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  offset	187	None	replace
1925	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  pos.offset;  [CE]  cannot  find  symbol  offset  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  pos.offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  pos.offset;	  offset    =    pos.offset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  offset	187	None	replace
1926	[BUG]  [BUGGY]  offset  =  parseStartOffset  -  pos;  [CE]  cannot  find  symbol  parseStartOffset  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  -  pos;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  -  pos;	  offset    =    pos.offset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	187	None	replace
1927	[BUG]  [BUGGY]  while(date.hasNext())  {  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(date.hasNext())  {  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(date.hasNext())  {  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1928	[BUG]  [BUGGY]  while(date.hasNext())  {  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(date.hasNext())  {  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(date.hasNext())  {  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	7	None	replace
1929	[BUG]  [BUGGY]  while(offset  <  endOffset)  {  date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  endOffset)  {  date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  endOffset)  {  date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
1930	[BUG]  [BUGGY]  offset  =  byseEndOffset;  [CE]  cannot  find  symbol  byseEndOffset  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  byseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  byseEndOffset;	  offset    =    startOffset;    	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	146	None	replace
1931	[BUG]  [BUGGY]  offset  =  pos.getOffset()  -  offset;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  -  offset;	  offset    =    parseEndOffset    -    offset;    offset    =    parseStartOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1932	[BUG]  [BUGGY]  offset  =  pos.getStartOffset()  -  offset;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getStartOffset()  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getStartOffset()  -  offset;	  offset    =    parseEndOffset    -    offset;    offset    =    parseStartOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
1933	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	throw  new  IndexOutOfBoundsException( " ");	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	127	1	replace
1934	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( " ");  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	throw  new  IndexOutOfBoundsException( " ");	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	127	1	replace
1935	[BUG]  [BUGGY]  offset  =  parseStartOffset(date.getTime());  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset(date.getTime());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset(date.getTime());	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
1936	[BUG]  [BUGGY]  offset  =  0;  Offset  offset  =  parseEndOffset;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  Offset  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  Offset  offset  =  parseEndOffset;	  offset    =    parseEndOffset;    Offset    offset    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
1937	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1L;  [CE]  possible  loss  of  precision  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  1L;	  offset    =    endOffset    -    1L;    	non-compiled	[CE]  possible  loss  of  precision	139	None	replace
1938	[BUG]  [BUGGY]  offset  =  this.endOffset  -  1L;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.endOffset  -  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.endOffset  -  1L;	  offset    =    endOffset    -    1L;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	139	None	replace
1939	[BUG]  [BUGGY]  offset  =  pos  -  1L;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  -  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  -  1L;	  offset    =    endOffset    -    1L;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	139	None	replace
1940	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.offset()  :  parseEndOffset;  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.offset()  :  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.offset()  :  parseEndOffset;	  offset    =    pos.offset();    	non-compiled	[CE]  incompatible  types	209	None	replace
1941	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  pos.offset();  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  pos.offset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  pos.offset();	  offset    =    pos.offset();    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
1942	[BUG]  [BUGGY]  offset  =  milliseconds.getLength();  [CE]  int  cannot  be  dereferenced  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds.getLength();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds.getLength();	  offset    =    pos.getLength();    	non-compiled	[CE]  int  cannot  be  dereferenced	210	None	replace
1943	[BUG]  [BUGGY]  offset  =  pos.getLength()  +  1;  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getLength()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getLength()  +  1;	  offset    =    pos.getLength();    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
1944	[BUG]  [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	133	None	replace
1945	[BUG]  [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.currentTimeMillis();    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	133	None	replace
1946	[BUG]  [BUGGY]  offset  =  Math.max(offset,  milliseconds);  parseEndOffset(offset);  offset  =  Math.max(offset,  milliseconds);  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(offset,  milliseconds);  parseEndOffset(offset);  offset  =  Math.max(offset,  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(offset,    milliseconds);    parseEndOffset(offset);  offset  =  Math.max(offset,  milliseconds);	  	non-compiled	[CE]  cannot  find  symbol	105	None	add
1947	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
1948	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
1949	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  not  followed  by  a  value   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	217	None	add
1950	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1951	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1952	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1953	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized. ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1954	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1955	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1956	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  digit ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  digit ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1957	[BUG]  [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  digit ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    offset  =  offset;  if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  digit ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        offset    =    offset;    if(offset  <  offset)  {  offset  =  offset;  offset  =  offset;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  digit ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1958	[BUG]  [BUGGY]  offset  =  pos.setLength(parseEndOffset);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.setLength(parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.setLength(parseEndOffset);	  offset    =    offset;    pos.setLength(parseEndOffset);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
1959	[BUG]  [BUGGY]  offset  =  pos.intValue();  offset.setLength(parseEndOffset);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.intValue();  offset.setLength(parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.intValue();  offset.setLength(parseEndOffset);	  offset    =    offset;    pos.setLength(parseEndOffset);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
1960	[BUG]  [BUGGY]  offset  =  milliseconds.length;  [CE]  int  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds.length;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds.length;	  offset    =    pos.length;    	non-compiled	[CE]  int  cannot  be  dereferenced	39	None	replace
1961	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }	  offset    =    0;    parseEndOffset();    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
1962	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    parseEndOffset();    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
1963	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  ==  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    parseEndOffset();    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
1964	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  ==  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }	  offset    =    0;    parseEndOffset();    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
1965	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  parseEndOffset();  offset  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    0;    parseEndOffset();    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
1966	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	69	1	replace
1967	[BUG]  [BUGGY]  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	69	1	replace
1968	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  parseEndOffset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  0)  {  offset  =  parseEndOffset;  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	69	1	replace
1969	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  parseEndOffset;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  parseEndOffset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  parseEndOffset;  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	69	1	replace
1970	[BUG]  [BUGGY]  offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ".);  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
1971	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(0)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(0)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(0)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)    ==    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	2	None	replace
1972	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(1)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(1)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(1)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)    ==    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	2	None	replace
1973	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  fraction  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  fraction  -  offset;	  offset    =    pos    -    offset;    	compilable	  [FE]  JsonSyntaxException  	97	1	replace
1974	[BUG]  [BUGGY]  offset  =  fraction  -  offset;  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  fraction  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  fraction  -  offset;	  offset    =    pos    -    offset;    	compilable	  [FE]  JsonSyntaxException  	97	1	replace
1975	[BUG]  [BUGGY]  int  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  parseEndOffset;  if(offset  <  offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	190	None	replace
1976	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
1977	[BUG]  [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  parseEndOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
1978	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  1)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  <  1)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
1979	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  <  1)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  <  1)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  <  1)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	190	1	replace
1980	[BUG]  [BUGGY]  parseEndOffset  =  offset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  offset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  offset;	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getDate(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	137	None	replace
1981	[BUG]  [BUGGY]  parseEndOffset  =  offset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset;  timezoneIndicator  =  DateTimeUtils.getDate(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  offset;  timezoneIndicator  =  DateTimeUtils.getDate(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getDate(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	137	None	replace
1982	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  3;	  offset    =    endOffset    +    3;    	compilable	  [FE]  JsonSyntaxException  	142	1	replace
1983	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  3;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  3;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  3;	  offset    =    endOffset    +    3;    	compilable	  [FE]  JsonSyntaxException  	142	1	replace
1984	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	4	None	replace
1985	[BUG]  [BUGGY]  offset  =  0;  this.timezoneIndicator  =  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  this.timezoneIndicator  =  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  this.timezoneIndicator  =  DateTimeConstants.MILLIS_PER_SECOND;	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	152	None	replace
1986	[BUG]  [BUGGY]  offset  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	152	None	replace
1987	[BUG]  [BUGGY]  offset  =  0;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	152	None	replace
1988	[BUG]  [BUGGY]  offset  =  0,  pos  =  0;  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0,  pos  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0,  pos  =  0;	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  ';'  expected	152	None	replace
1989	[BUG]  [BUGGY]  offset  =  0;  this.timezoneIndicator  =  DateTimeConstants.DEFAULT_ZONE_INFINITY;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  this.timezoneIndicator  =  DateTimeConstants.DEFAULT_ZONE_INFINITY;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  this.timezoneIndicator  =  DateTimeConstants.DEFAULT_ZONE_INFINITY;	  offset    =    0;    pos    =    0;    offset    =    0;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	152	None	replace
1990	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
1991	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  0)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	57	1	replace
1992	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	57	1	replace
1993	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getLocalMillis();  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getLocalMillis();  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.getLocalMillis();  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	54	None	add
1994	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  parseEndOffset(timezoneIndicator);  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  parseEndOffset(timezoneIndicator);  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  parseEndOffset(timezoneIndicator);  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	54	None	add
1995	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.DATE);  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.DATE);  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.get(Calendar.DATE);  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	54	None	add
1996	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.HOUR_OF_DAY);  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.HOUR_OF_DAY);  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.get(Calendar.HOUR_OF_DAY);  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	54	None	add
1997	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  parseEndOffset(parseStartOffset);  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  parseEndOffset(parseStartOffset);  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  parseEndOffset(parseStartOffset);  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	54	None	add
1998	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.HOUR_OF_DAY);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.HOUR_OF_DAY);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.get(Calendar.HOUR_OF_DAY);	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	54	None	add
1999	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
2000	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  0)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
2001	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
2002	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	213	None	add
2003	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  unreachable  statement  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  unreachable  statement	213	None	add
2004	[BUG]  [BUGGY]  offset  =  pos.getOffset()  -  1;  parseEndOffset  -  1;  [CE]  not  a  statement  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()  -  1;  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  -  1;  parseEndOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	non-compiled	[CE]  not  a  statement	104	None	replace
2005	[BUG]  [BUGGY]  offset  =  pos.offset  -  1;  parseEndOffset  -  1;  [CE]  not  a  statement  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  1;  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  1;  parseEndOffset  -  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    1;    	non-compiled	[CE]  not  a  statement	104	None	replace
2006	[BUG]  [BUGGY]  offset  =  parseEndOffset;  pos  =  parsePosition;  [CE]  cannot  find  symbol  parsePosition  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  pos  =  parsePosition;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  pos  =  parsePosition;	  offset    =    parseEndOffset;    pos    =    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol  parsePosition	37	None	replace
2007	[BUG]  [BUGGY]  offset  =  parseStartOffset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	77	None	replace
2008	[BUG]  [BUGGY]  int  offset  =  parseEndOffset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  parseEndOffset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  parseEndOffset;  if(offset  >=  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	77	None	replace
2009	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  >  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset;  if(offset  >  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
2010	[BUG]  [BUGGY]  offset  =  parseEndOffset;  if(offset  >  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  if(offset  >  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  if(offset  >  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
2011	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
2012	[BUG]  [BUGGY]  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  >=  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	77	1	replace
2013	[BUG]  [BUGGY]  offset  =  pos.offset  -  offset;  Offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  offset  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset  -  offset;  Offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset  -  offset;  Offset  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    Offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  offset	65	None	replace
2014	[BUG]  [BUGGY]  offset  =  milliseconds.offset;  [CE]  int  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds.offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  milliseconds.offset;	  offset    =    pos.offset;    	non-compiled	[CE]  int  cannot  be  dereferenced	40	None	replace
2015	[BUG]  [BUGGY]  offset  =  parseStartOffset.offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset.offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset.offset;	  offset    =    pos.offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	40	None	replace
2016	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	219	None	add
2017	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
2018	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "Time  zone  indicator  must  be  initialized.   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    be    initialized.   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  be  initialized.   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
2019	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(1)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(1)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(1)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    ==    '-')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	5	None	replace
2020	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
2021	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
2022	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
2023	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
2024	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	168	None	add
2025	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  parseEndOffset  =  parseEndOffset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    parseEndOffset    -    milliseconds;    parseEndOffset  =  parseEndOffset  -  milliseconds;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
2026	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  parseEndOffset  =  parseEndOffset  -  milliseconds;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  parseEndOffset  =  parseEndOffset  -  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    milliseconds;    parseEndOffset  =  parseEndOffset  -  milliseconds;	  	compilable	  [FE]  JsonSyntaxException  	93	1	add
2027	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  parseEndOffset  -  milliseconds);  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  milliseconds;  offset  =  parseEndOffset  -  milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    milliseconds;    offset  =  parseEndOffset  -  milliseconds);	  	non-compiled	[CE]  ';'  expected	93	None	add
2028	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  dateOffset)?  1  :  0;  [CE]  cannot  find  symbol  dateOffset  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  dateOffset)?  1  :  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  dateOffset)?  1  :  0;	  offset    =(parseEndOffset    -    offset)?    1    :    0;    	non-compiled	[CE]  cannot  find  symbol  dateOffset	188	None	replace
2029	[BUG]  [BUGGY]  offset  =  pos.offset()  +  1;  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.offset()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.offset()  +  1;	  offset    =    pos.length()    +    1;    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
2030	[BUG]  [BUGGY]  offset  =  offset  +  1;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset  +  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	17	None	add
2031	[BUG]  [BUGGY]  offset  =  offset  +  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date);  offset  =  offset  +  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date);  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date);  offset  =  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	17	None	add
2032	[BUG]  [BUGGY]  offset  =  offset  +  1;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset  +  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	17	None	add
2033	[BUG]  [BUGGY]  offset  =  offset  +  1;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(timezoneIndicator);  offset  =  offset  +  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(timezoneIndicator);  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(timezoneIndicator);  offset  =  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	17	None	add
2034	[BUG]  [BUGGY]  offset  =  offset  +  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date,  pos);  offset  =  offset  +  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date,  pos);  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date,  pos);  offset  =  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	17	None	add
2035	[BUG]  [BUGGY]  offset  =  offset  +  1;  timezoneIndicator  =  DateTimeUtils.getDateInstance(date);  offset  =  offset  +  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  timezoneIndicator  =  DateTimeUtils.getDateInstance(date);  offset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    +    1;    timezoneIndicator  =  DateTimeUtils.getDateInstance(date);  offset  =  offset  +  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	17	None	add
2036	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	214	None	replace
2037	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	79	1	replace
2038	[BUG]  [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	79	1	replace
2039	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  offset;	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	79	1	replace
2040	[BUG]  [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  offset;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  offset  =  offset;	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	79	1	replace
2041	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  while(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  while(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	79	1	replace
2042	[BUG]  [BUGGY]  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  while(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  while(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  throw  new  IllegalArgumentException( " ");  }  while(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	79	1	replace
2043	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	79	1	replace
2044	[BUG]  [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    	compilable	  [FE]  JsonSyntaxException  	79	1	replace
2045	[BUG]  [BUGGY]  offset  =  0;  parseEndOffset(offset);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  parseEndOffset(offset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  parseEndOffset(offset);	  offset    =    0;    parseEndOffset(    offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
2046	[BUG]  [BUGGY]  int  offset  =  0;  parseEndOffset(offset);  offset  =  0;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  0;  parseEndOffset(offset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  0;  parseEndOffset(offset);  offset  =  0;	  offset    =    0;    parseEndOffset(    offset);    offset    =    0;    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	182	None	replace
2047	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  startOffset;  pos  =  parseEndOffset  -  startOffset;  [CE]  cannot  find  symbol  startOffset  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  startOffset;  pos  =  parseEndOffset  -  startOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  startOffset;  pos  =  parseEndOffset  -  startOffset;	  offset    =    parseEndOffset    -    offset;    pos    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  startOffset	164	None	replace
2048	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  startOffset;  [CE]  cannot  find  symbol  startOffset  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  startOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  offset;  pos  =  parseEndOffset  -  startOffset;	  offset    =    parseEndOffset    -    offset;    pos    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol  startOffset	164	None	replace
2049	[BUG]  [BUGGY]  offset  =  Math.max(milliseconds,  pos.getOffset()));  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(milliseconds,  pos.getOffset()));  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.max(milliseconds,  pos.getOffset()));	  offset    =    Math.max(parseEndOffset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	113	None	replace
2050	[BUG]  [BUGGY]  offset  =  Math.min(parseEndOffset,  pos.getOffset()));  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.min(parseEndOffset,  pos.getOffset()));  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  Math.min(parseEndOffset,  pos.getOffset()));	  offset    =    Math.max(parseEndOffset,    parseEndOffset));    	non-compiled	[CE]  ';'  expected	113	None	replace
2051	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  parseEndOffset  =(parseEndOffset  -  offset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    offset)%    10;    parseEndOffset  =(parseEndOffset  -  offset)%  10;	  	compilable	  [FE]  JsonSyntaxException  	161	1	add
2052	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  parseEndOffset  =(parseEndOffset  -  offset)%  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  10;  parseEndOffset  =(parseEndOffset  -  offset)%  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    10;    parseEndOffset  =(parseEndOffset  -  offset)%  10;	  	compilable	  [FE]  JsonSyntaxException  	161	1	add
2053	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
2054	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  /  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  /  1;	  offset    =    parseEndOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	20	1	replace
2055	[BUG]  [BUGGY]  offset  =  parseEndOffset  /  1;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  /  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  /  1;	  offset    =    parseEndOffset    +    1;    	compilable	  [FE]  JsonSyntaxException  	20	1	replace
2056	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
2057	[BUG]  [BUGGY]  parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
2058	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
2059	[BUG]  [BUGGY]  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  endOffset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	216	1	replace
2060	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  milliseconds.length();  [CE]  int  cannot  be  dereferenced  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  milliseconds.length();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  milliseconds.length();	  offset    =    parseEndOffset.length();    	non-compiled	[CE]  int  cannot  be  dereferenced	84	None	replace
2061	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseEndOffset)%  100;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =(offset  -  parseEndOffset)%  100;	  offset    =(parseEndOffset    -    offset)%    10;    	compilable	  [FE]  JsonSyntaxException  	162	1	replace
2062	[BUG]  [BUGGY]  offset  =(offset  -  parseEndOffset)%  100;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  -  parseEndOffset)%  100;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  -  parseEndOffset)%  100;	  offset    =(parseEndOffset    -    offset)%    10;    	compilable	  [FE]  JsonSyntaxException  	162	1	replace
2063	[BUG]  [BUGGY]  offset  =  pos.getOffset(parseEndOffset);  offset  =  pos.getOffset(parseEndOffset);  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset(parseEndOffset);  offset  =  pos.getOffset(parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset(parseEndOffset);  offset  =  pos.getOffset(parseEndOffset);	  offset    =    endOffset    -    1;    parseEndOffset    -    startOffset;    offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
2064	[BUG]  [BUGGY]  offset  =  pos.getOffset(parseEndOffset);  offset  =  pos.getOffset(parseEndOffset)-  1;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset(parseEndOffset);  offset  =  pos.getOffset(parseEndOffset)-  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset(parseEndOffset);  offset  =  pos.getOffset(parseEndOffset)-  1;	  offset    =    endOffset    -    1;    parseEndOffset    -    startOffset;    offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
2065	[BUG]  [BUGGY]  offset  =  pos.getOffset(parseEndOffset);  offset  =  pos.getOffset(parseEndOffset  -  1);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset(parseEndOffset);  offset  =  pos.getOffset(parseEndOffset  -  1);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset(parseEndOffset);  offset  =  pos.getOffset(parseEndOffset  -  1);	  offset    =    endOffset    -    1;    parseEndOffset    -    startOffset;    offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
2066	[BUG]  [BUGGY]  offset  =  pos.getOffset()  -  1;  Offset  endOffset  =  endOffset  -  1;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()  -  1;  Offset  endOffset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  -  1;  Offset  endOffset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
2067	[BUG]  [BUGGY]  offset  =  pos.getOffset()  -  1;  Offset  endOffset  =  pos.getOffset();  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()  -  1;  Offset  endOffset  =  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  -  1;  Offset  endOffset  =  pos.getOffset();	  offset    =    endOffset    -    1;    Offset    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
2068	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  offset  =  offset;  }  [CE]  <identifier>  expected  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  offset  =  offset;  }	  	non-compiled	[CE]  <identifier>  expected	80	None	add
2069	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( ". ");  }  else  {  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( ". ");  }  else  {  offset  =  offset;  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
2070	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( ". ");  }  else  {  offset  =  offset;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  offset;  }  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( ". ");  }  else  {  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( ". ");  }  else  {  offset  =  offset;  }	  	compilable	  [FE]  JsonSyntaxException  	80	1	add
2071	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  pos.getOffset();  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  pos.getOffset();	  offset    =    parseEndOffset.getOffset();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
2072	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	For(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	147	None	replace
2073	[BUG]  [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.getChronology(date);  offset  =  offset  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.getChronology(date);  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    timezoneIndicator  =  DateTimeUtils.getChronology(date);  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	add
2074	[BUG]  [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator();  offset  =  offset  -  1;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  1;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator();  offset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    offset    -    1;    timezoneIndicator  =  DateTimeUtils.timezoneIndicator();  offset  =  offset  -  1;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	add
2075	[BUG]  [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseStartOffset;  parseEndOffset  =  parseEndOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseStartOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        parseEndOffset    =    parseEndOffset;    parseEndOffset  =  parseStartOffset;  parseEndOffset  =  parseEndOffset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	33	None	add
2076	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        parseEndOffset;        parseEndOffset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	33	1	add
2077	[BUG]  [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        parseEndOffset    =    parseEndOffset;    parseEndOffset  =  parseEndOffset;	  	compilable	  [FE]  JsonSyntaxException  	33	1	add
2078	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  int  endOffset  =  startOffset  -  1;  offset  =  endOffset  -  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  1;  int  endOffset  =  startOffset  -  1;  offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    1;    int  endOffset  =  startOffset  -  1;  offset  =  endOffset  -  1;	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	98	None	add
2079	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  int  parseEndOffset  =  parseEndOffset  +  1;  [CE]  variable  parseEndOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  int  parseEndOffset  =  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    +    1;    int  parseEndOffset  =  parseEndOffset  +  1;	  	non-compiled	[CE]  variable  parseEndOffset  is  already  defined  in  method  parse(String,ParsePosition)	19	None	add
2080	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  int  parseEndOffset  =  parseStartOffset  +  1;  [CE]  variable  parseEndOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  int  parseEndOffset  =  parseStartOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    +    1;    int  parseEndOffset  =  parseStartOffset  +  1;	  	non-compiled	[CE]  variable  parseEndOffset  is  already  defined  in  method  parse(String,ParsePosition)	19	None	add
2081	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  parseEndOffset  =(parseEndOffset  -  offset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    offset)/    10;    parseEndOffset  =(parseEndOffset  -  offset)/  10;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
2082	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  parseEndOffset  =(parseEndOffset  -  offset)/  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  10;  parseEndOffset  =(parseEndOffset  -  offset)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    10;    parseEndOffset  =(parseEndOffset  -  offset)/  10;	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
2083	[BUG]  [BUGGY]  while(offset  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  while(offset  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	while(offset  <  =  date.length())  {  throw  new  IllegalArgumentException( " ");  }	          if(date.length()    <    =    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
2084	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)?  0  :  parseEndOffset;  [CE]  incompatible  types  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)?  0  :  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  -  offset)?  0  :  parseEndOffset;	  offset    =    0;    offset    =    0;    	non-compiled	[CE]  incompatible  types	124	None	replace
2085	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)?  0  :  parseEndOffset;  [CE]  incompatible  types  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)?  0  :  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  +  milliseconds)?  0  :  parseEndOffset;	  offset    =    0;    offset    =    0;    	non-compiled	[CE]  incompatible  types	124	None	replace
2086	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)?  0L  :  parseEndOffset;  [CE]  incompatible  types  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)?  0L  :  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(parseEndOffset  +  milliseconds)?  0L  :  parseEndOffset;	  offset    =    0;    offset    =    0;    	non-compiled	[CE]  incompatible  types	124	None	replace
2087	[BUG]  [BUGGY]  offset  =  parseStartOffset.getLowerCase();  [CE]  cannot  find  symbol  parseStartOffset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset.getLowerCase();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset.getLowerCase();	  offset    =    pos.getLowerCase();    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	179	None	replace
2088	[BUG]  [BUGGY]  offset  =  offset  +  1;  if(offset  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  +  1;  if(offset  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  +  1;  if(offset  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
2089	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  =  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    ==    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
2090	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  parseEndOffset  =(parseEndOffset  -  offset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    offset)/    2;    parseEndOffset  =(parseEndOffset  -  offset)/  2;	  	compilable	  [FE]  JsonSyntaxException  	159	1	add
2091	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  parseEndOffset  =(parseEndOffset  -  offset)/  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)/  2;  parseEndOffset  =(parseEndOffset  -  offset)/  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)/    2;    parseEndOffset  =(parseEndOffset  -  offset)/  2;	  	compilable	  [FE]  JsonSyntaxException  	159	1	add
2092	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  1;  int  offset  =  parseEndOffset  -  1;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  1;  int  offset  =  parseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    parseEndOffset    -    1;    int  offset  =  parseEndOffset  -  1;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	8	None	add
2093	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getStartOffset()  :  parseEndOffset;  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getStartOffset()  :  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getStartOffset()  :  parseEndOffset;	  offset    =    pos.getStartOffset();    	non-compiled	[CE]  incompatible  types	163	None	replace
2094	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getStartOffset()  :  pos.getStartOffset();  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getStartOffset()  :  pos.getStartOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getStartOffset()  :  pos.getStartOffset();	  offset    =    pos.getStartOffset();    	non-compiled	[CE]  incompatible  types	163	None	replace
2095	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  -  offset;  parseEndOffset  =  parseEndOffset;	  offset    =    parseEndOffset;    parseEndOffset    =    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	34	1	replace
2096	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  offset;  parseEndOffset  =  parseEndOffset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  offset;  parseEndOffset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  offset;  parseEndOffset  =  parseEndOffset;	  offset    =    parseEndOffset;    parseEndOffset    =    parseEndOffset;    	compilable	  [FE]  JsonSyntaxException  	34	1	replace
2097	[BUG]  [BUGGY]  offset  =  offset  -  this.parseEndOffset;  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  this.parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  this.parseEndOffset;	  offset    =    offset    -    parseEndOffset;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	90	None	replace
2098	[BUG]  [BUGGY]  offset  =  offset  -  parseStartOffset  +  1;  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset  -  parseStartOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset  -  parseStartOffset  +  1;	  offset    =    offset    -    parseEndOffset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	90	None	replace
2099	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
2100	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
2101	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
2102	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  parsed. ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
2103	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
2104	[BUG]  [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    0;    offset  =  0;  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        0;        offset    =    0;    if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  an  integer ");  }	  	compilable	  [FE]  JsonSyntaxException  	123	1	add
2105	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  startOffset;  [CE]  cannot  find  symbol  startOffset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  startOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  startOffset;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	non-compiled	[CE]  cannot  find  symbol  startOffset	64	None	replace
2106	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  fraction;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  -  fraction;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	compilable	  [FE]  JsonSyntaxException  	64	1	replace
2107	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  fraction;  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  fraction;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  fraction;	  offset    =    parseEndOffset    -    offset;    offset    =    parseEndOffset    -    off;    	compilable	  [FE]  JsonSyntaxException  	64	1	replace
2108	[BUG]  [BUGGY]  offset  =  parseStartOffset(offset);  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset(offset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset(offset);	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
2109	[BUG]  [BUGGY]  offset  =  this.timezoneIndicator.getLocalMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.timezoneIndicator.getLocalMillis();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.timezoneIndicator.getLocalMillis();	  offset    =    pos.getLocalMillis();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	42	None	replace
2110	[BUG]  [BUGGY]  offset  =  pos.getOffset()  -  1;  Offset  =  endOffset  -  1;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()  -  1;  Offset  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  -  1;  Offset  =  endOffset  -  1;	  offset    =    endOffset    -    1;    Offset    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
2111	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  parseEndOffset  =(parseEndOffset  -  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    milliseconds)/    10;    parseEndOffset  =(parseEndOffset  -  milliseconds)/  10;	  	compilable	  [FE]  JsonSyntaxException  	118	1	add
2112	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  parseEndOffset  =(parseEndOffset  -  milliseconds)/  10;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  milliseconds)/  10;  parseEndOffset  =(parseEndOffset  -  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    milliseconds)/    10;    parseEndOffset  =(parseEndOffset  -  milliseconds)/  10;	  	compilable	  [FE]  JsonSyntaxException  	118	1	add
2113	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset.add( "- ");  offset  =  0;  }  [CE]  int  cannot  be  dereferenced  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset.add( "- ");  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset.add( "- ");  offset  =  0;  }	  offset    =    0;    result.add(   "-   ");    offset    =    0;    	non-compiled	[CE]  int  cannot  be  dereferenced	183	None	replace
2114	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  0;  offset.add( "- ");  offset  =  0;  }  [CE]  int  cannot  be  dereferenced  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  0;  offset.add( "- ");  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  ==  0)  {  offset  =  0;  offset.add( "- ");  offset  =  0;  }	  offset    =    0;    result.add(   "-   ");    offset    =    0;    	non-compiled	[CE]  int  cannot  be  dereferenced	183	None	replace
2115	[BUG]  [BUGGY]  if(offset!=  0)  {  offset  =  0;  offset.add( "- ");  offset  =  0;  }  [CE]  int  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset!=  0)  {  offset  =  0;  offset.add( "- ");  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset!=  0)  {  offset  =  0;  offset.add( "- ");  offset  =  0;  }	  offset    =    0;    result.add(   "-   ");    offset    =    0;    	non-compiled	[CE]  int  cannot  be  dereferenced	183	None	replace
2116	[BUG]  [BUGGY]  if(offset  >=  0)  {  offset  =  0;  offset.add( "- ");  offset  =  0;  }  [CE]  int  cannot  be  dereferenced  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  >=  0)  {  offset  =  0;  offset.add( "- ");  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  >=  0)  {  offset  =  0;  offset.add( "- ");  offset  =  0;  }	  offset    =    0;    result.add(   "-   ");    offset    =    0;    	non-compiled	[CE]  int  cannot  be  dereferenced	183	None	replace
2117	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  result.add( "- ");  offset  =  0;  }  [CE]  cannot  find  symbol  result  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  result.add( "- ");  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  result.add( "- ");  offset  =  0;  }	  offset    =    0;    result.add(   "-   ");    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  result	183	None	replace
2118	[BUG]  [BUGGY]  parseEndOffset  =  0;  parseDate.add( "- ");  offset  =  0;  [CE]  cannot  find  symbol  parseDate  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  0;  parseDate.add( "- ");  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  0;  parseDate.add( "- ");  offset  =  0;	  offset    =    0;    result.add(   "-   ");    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  parseDate	183	None	replace
2119	[BUG]  [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  timezoneIndicator.getOffset());  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.parseDate(date,  pos,  timezoneIndicator.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.parseDate(date,  pos,  timezoneIndicator.getOffset());	  offset    =    DateUtils.parseDate(date,    pos.getOffset());    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	29	None	replace
2120	[BUG]  [BUGGY]  int  offset  =  parseEndOffset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  parseEndOffset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  parseEndOffset;  if(offset  ==  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	73	None	replace
2121	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  ==  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  ==  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	73	1	replace
2122	[BUG]  [BUGGY]  if(offset  ==  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  ==  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  ==  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    ==    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	73	1	replace
2123	[BUG]  [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  cannot  find  symbol  parseStartOffset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset;  timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(date);    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	136	None	replace
2124	[BUG]  [BUGGY]  offset  =  this.timezoneIndicator.getLowerBound();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  this.timezoneIndicator.getLowerBound();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  this.timezoneIndicator.getLowerBound();	  offset    =    pos.getLowerBound();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	178	None	replace
2125	[BUG]  [BUGGY]  int  endOffset  =  pos.getOffset()  +  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  pos.getOffset()  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  pos.getOffset()  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	51	None	replace
2126	[BUG]  [BUGGY]  int  endOffset  =  offset  +  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  offset  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	51	None	replace
2127	[BUG]  [BUGGY]  int  endOffset  =  parseStartOffset  +  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  parseStartOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  parseStartOffset  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	51	None	replace
2128	[BUG]  [BUGGY]  int  endOffset  =  byseEndOffset  +  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  byseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  byseEndOffset  +  1;	  offset    =    endOffset    +    1;    int    endOffset    =    endOffset    +    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	51	None	replace
2129	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  int  parseEndOffset  =  Math.max(parseEndOffset,  parseEndOffset);  [CE]  variable  parseEndOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  int  parseEndOffset  =  Math.max(parseEndOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(parseEndOffset,    parseEndOffset);    int  parseEndOffset  =  Math.max(parseEndOffset,  parseEndOffset);	  	non-compiled	[CE]  variable  parseEndOffset  is  already  defined  in  method  parse(String,ParsePosition)	109	None	add
2130	[BUG]  [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  int  offset  =  Math.max(parseEndOffset,  parseEndOffset);  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(parseEndOffset,  parseEndOffset);  int  offset  =  Math.max(parseEndOffset,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(parseEndOffset,    parseEndOffset);    int  offset  =  Math.max(parseEndOffset,  parseEndOffset);	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	109	None	add
2131	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	171	1	replace
2132	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	171	1	replace
2133	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
2134	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	compilable	  [FE]  JsonSyntaxException  	131	1	replace
2135	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [FE]  JsonSyntaxException  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	compilable	  [FE]  JsonSyntaxException  	131	1	replace
2136	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	compilable	  [FE]  JsonSyntaxException  	131	1	replace
2137	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	compilable	  [FE]  JsonSyntaxException  	131	1	replace
2138	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(parseEndOffset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	compilable	  [FE]  JsonSyntaxException  	131	1	replace
2139	[BUG]  [BUGGY]  if(parseEndOffset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [FE]  JsonSyntaxException  [FE]                            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	compilable	  [FE]  JsonSyntaxException  	131	1	replace
2140	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  ==  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
2141	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	compilable	  [FE]  JsonSyntaxException  	131	1	replace
2142	[BUG]  [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [FE]  JsonSyntaxException  [FE]                                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(parseEndOffset  >=  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  time  zone ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    time    zone   ");    }    	compilable	  [FE]  JsonSyntaxException  	131	1	replace
2143	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getLocalMillis();  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getLocalMillis();  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.getLocalMillis();  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	52	None	add
2144	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.DATE);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.DATE);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.get(Calendar.DATE);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	52	None	add
2145	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  parseEndOffset(parseStartOffset);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  parseEndOffset(parseStartOffset);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  parseEndOffset(parseStartOffset);  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	52	None	add
2146	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getLocalMillis();  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  startOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getLocalMillis();  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  startOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.getLocalMillis();  offset  =  endOffset  +  1;  if(offset  <  endOffset)  {  offset  =  startOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	52	None	add
2147	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getLocalMillis();  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getLocalMillis();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.getLocalMillis();	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	52	None	add
2148	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0'  ||  date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0'  ||  date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i)  ==  '0'  ||  date.charAt(i)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)    ==    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	148	None	replace
2149	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  startOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  startOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  startOffset	212	None	replace
2150	[BUG]  [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos,  this.date.getOffset());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos,  this.date.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getOffset(parseEndOffset,  pos,  this.date.getOffset());	  offset    =    DateUtils.getOffset(parseEndOffset,    pos.getOffset());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	144	None	replace
2151	[BUG]  [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos,  this.timezoneIndicator.getOffset());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  DateUtils.getOffset(parseEndOffset,  pos,  this.timezoneIndicator.getOffset());  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  DateUtils.getOffset(parseEndOffset,  pos,  this.timezoneIndicator.getOffset());	  offset    =    DateUtils.getOffset(parseEndOffset,    pos.getOffset());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	144	None	replace
2152	[BUG]  [BUGGY]  offset  =  offset;  dateIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  dateIndicator  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  offset;  dateIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  offset;  dateIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimeZone(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  dateIndicator	138	None	replace
2153	[BUG]  [BUGGY]  int  offset  =  0;  parseOffset(offset);  offset  =  0;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  offset  =  0;  parseOffset(offset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  offset  =  0;  parseOffset(offset);  offset  =  0;	  offset    =    0;    parseOffset(offset);    offset    =    0;    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	149	None	replace
2154	[BUG]  [BUGGY]  parseStartOffset(offset);  offset  =  0;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseStartOffset(offset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseStartOffset(offset);  offset  =  0;	  offset    =    0;    parseOffset(offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
2155	[BUG]  [BUGGY]  pos  =  parseOffset(offset);  offset  =  0;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  pos  =  parseOffset(offset);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	pos  =  parseOffset(offset);  offset  =  0;	  offset    =    0;    parseOffset(offset);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
2156	[BUG]  [BUGGY]  offset  =  parseStartOffset  -  offset;  offset  =  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  -  offset;  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  -  offset;  offset  =  offset;	  offset    =    offset;    offset    =    offset;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	67	None	replace
2157	[BUG]  [BUGGY]  offset  =  startOffset  -  1;  pos  =  endOffset  -  1;  [CE]  cannot  find  symbol  startOffset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  startOffset  -  1;  pos  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  startOffset  -  1;  pos  =  endOffset  -  1;	  offset    =    endOffset    -    1;    pos    =    endOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  startOffset	103	None	replace
2158	[BUG]  [BUGGY]  offset  =  pos  -  1;  pos  =  endOffset  -  1;  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  -  1;  pos  =  endOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  -  1;  pos  =  endOffset  -  1;	  offset    =    endOffset    -    1;    pos    =    endOffset    -    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	103	None	replace
2159	[BUG]  [BUGGY]  offset  =  milliseconds;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  milliseconds;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  offset  =  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	107	None	add
2160	[BUG]  [BUGGY]  offset  =  milliseconds;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date);  offset  =  milliseconds;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date);  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    timezoneIndicator  =  DateTimeUtils.timezoneIndicator(date);  offset  =  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	107	None	add
2161	[BUG]  [BUGGY]  offset  =  milliseconds;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  milliseconds;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  offset  =  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	107	None	add
2162	[BUG]  [BUGGY]  offset  =  milliseconds;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator();  offset  =  milliseconds;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator();  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    timezoneIndicator  =  DateTimeUtils.timezoneIndicator();  offset  =  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	107	None	add
2163	[BUG]  [BUGGY]  offset  =  milliseconds;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  milliseconds;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    timezoneIndicator  =  DateTimeUtils.getDate(date);  offset  =  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	107	None	add
2164	[BUG]  [BUGGY]  offset  =  milliseconds;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(this);  offset  =  milliseconds;  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds;  timezoneIndicator  =  DateTimeUtils.timezoneIndicator(this);  offset  =  milliseconds;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds;    timezoneIndicator  =  DateTimeUtils.timezoneIndicator(this);  offset  =  milliseconds;	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	107	None	add
2165	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  int  offset  =  0;  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  int  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  int  offset  =  0;  }	  offset    =    0;    int    offset    =    0;    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	150	None	replace
2166	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  int  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  int  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  int  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    int    offset    =    0;    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	150	None	replace
2167	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  0;  int  offset  =  0;  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  0;  int  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  ==  0)  {  offset  =  0;  int  offset  =  0;  }	  offset    =    0;    int    offset    =    0;    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	150	None	replace
2168	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  0;  int  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  0;  int  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  ==  0)  {  offset  =  0;  int  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    int    offset    =    0;    	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	150	None	replace
2169	[BUG]  [BUGGY]  if(offset  <  =  0)  {  offset  =  0;  int  offset  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  =  0)  {  offset  =  0;  int  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  =  0)  {  offset  =  0;  int  offset  =  0;  }	  offset    =    0;    int    offset    =    0;    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
2170	[BUG]  [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  parseStartOffset  =  parseEndOffset;  offset  =  parseEndOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  parseStartOffset  =  parseEndOffset;  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        offset    =    parseEndOffset;    parseStartOffset  =  parseEndOffset;  offset  =  parseEndOffset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	31	None	add
2171	[BUG]  [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  parseEndOffset;  offset  =  parseEndOffset;  [CE]  not  a  statement  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset;    offset  =  parseEndOffset;  parseEndOffset;  offset  =  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset;        offset    =    parseEndOffset;    parseEndOffset;  offset  =  parseEndOffset;	  	non-compiled	[CE]  not  a  statement	31	None	add
2172	[BUG]  [BUGGY]  offset  =  1;  parseEndOffset(  offset);  offset  =  1;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseEndOffset(  offset);  offset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    parseEndOffset(  offset);  offset  =  1;	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
2173	[BUG]  [BUGGY]  offset  =  1;  parseEndOffset();  offset  =  1;  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseEndOffset();  offset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    parseEndOffset();  offset  =  1;	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
2174	[BUG]  [BUGGY]  offset  =  1;  parseEndOffset(  pos);  offset  =  1;  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseEndOffset(  pos);  offset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    parseEndOffset(  pos);  offset  =  1;	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
2175	[BUG]  [BUGGY]  offset  =  1;  parseEndOffset  -  offset;  offset  =  1;  [CE]  not  a  statement  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseEndOffset  -  offset;  offset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    parseEndOffset  -  offset;  offset  =  1;	  	non-compiled	[CE]  not  a  statement	114	None	add
2176	[BUG]  [BUGGY]  offset  =  1;  parseEndOffset(  offset,  pos);  offset  =  1;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseEndOffset(  offset,  pos);  offset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    parseEndOffset(  offset,  pos);  offset  =  1;	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
2177	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseEndOffset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    1;    parseEndOffset  =  1;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
2178	[BUG]  [BUGGY]  offset  =  1;  parseEndOffset  =  1;  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseEndOffset  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    parseEndOffset  =  1;	  	compilable	  [FE]  JsonSyntaxException  	114	1	add
2179	[BUG]  [BUGGY]  offset  =  1;  parseEndOffset()  =  1;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  1;  parseEndOffset()  =  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    1;    parseEndOffset()  =  1;	  	non-compiled	[CE]  cannot  find  symbol	114	None	add
2180	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	47	1	add
2181	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	47	1	add
2182	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(0)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(0)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(0)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
2183	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	For(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(i)!=  '0')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)!=    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	3	None	replace
2184	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	throw  new  IllegalArgumentException( " ");	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	126	1	replace
2185	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	throw  new  IllegalArgumentException( " ");	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	126	1	replace
2186	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  endOffset  -  2;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        -        1;        offset    =    endOffset    -    2;    offset  =  endOffset  -  2;  offset  =  endOffset  -  2;	  	compilable	  [FE]  JsonSyntaxException  	202	1	add
2187	[BUG]  [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  endOffset  -  2;  offset  =  endOffset  -  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    -    1;    offset  =  endOffset  -  2;  offset  =  endOffset  -  2;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        -        1;        offset    =    endOffset    -    2;    offset  =  endOffset  -  2;  offset  =  endOffset  -  2;	  	compilable	  [FE]  JsonSyntaxException  	202	1	add
2188	[BUG]  [BUGGY]  int  endOffset  =  parseStartOffset  -  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  parseStartOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  parseStartOffset  -  1;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
2189	[BUG]  [BUGGY]  int  endOffset  =  offset  -  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  offset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  offset  -  1;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
2190	[BUG]  [BUGGY]  int  endOffset  =  startOffset  -  1;  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  int  endOffset  =  startOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	int  endOffset  =  startOffset  -  1;	  offset    =    endOffset    -    1;    int    endOffset    =    endOffset    -    1;    	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	100	None	replace
2191	[BUG]  [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    offset    =    offset;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	135	None	replace
2192	[BUG]  [BUGGY]  offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset;  this.timezoneIndicator  =  DateTimeUtils.getTimezoneIndicator(date);	  offset    =    offset;    timezoneIndicator    =    DateTimeUtils.getTimezoneIndicator(date);    offset    =    offset;    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	135	None	replace
2193	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
2194	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	129	1	replace
2195	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	129	1	replace
2196	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
2197	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
2198	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	129	1	replace
2199	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  date.length())  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  digits. ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    date.length())    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    digits   ");    }    	compilable	  [FE]  JsonSyntaxException  	129	1	replace
2200	[BUG]  [BUGGY]  offset  =  parseStartOffset  -  offset  +  1;  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  -  offset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  -  offset  +  1;	  offset    =    parseEndOffset    -    offset    +    1;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	208	None	replace
2201	[BUG]  [BUGGY]  offset  =(offset  <  0)?  0L  :  parseEndOffset;  [CE]  possible  loss  of  precision  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  <  0)?  0L  :  parseEndOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  <  0)?  0L  :  parseEndOffset;	  offset    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	122	None	replace
2202	[BUG]  [BUGGY]  offset  =(offset  <  0)?  0L  :  parseEndOffset.intValue();  [CE]  int  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  <  0)?  0L  :  parseEndOffset.intValue();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  <  0)?  0L  :  parseEndOffset.intValue();	  offset    =    0L;    	non-compiled	[CE]  int  cannot  be  dereferenced	122	None	replace
2203	[BUG]  [BUGGY]  offset  =(offset  <  0)?  0L  :  parseStartOffset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  <  0)?  0L  :  parseStartOffset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  <  0)?  0L  :  parseStartOffset;	  offset    =    0L;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	122	None	replace
2204	[BUG]  [BUGGY]  offset  =(offset  <  0)?  0L  :  parseStartOffset  -  offset);  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  <  0)?  0L  :  parseStartOffset  -  offset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  <  0)?  0L  :  parseStartOffset  -  offset);	  offset    =    0L;    	non-compiled	[CE]  ';'  expected	122	None	replace
2205	[BUG]  [BUGGY]  offset  =(offset  <  0)?  0L  :  parseEndOffset  -  offset);  [CE]  ';'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  <  0)?  0L  :  parseEndOffset  -  offset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  <  0)?  0L  :  parseEndOffset  -  offset);	  offset    =    0L;    	non-compiled	[CE]  ';'  expected	122	None	replace
2206	[BUG]  [BUGGY]  offset  =(offset  <  0)?  0L  :  parseEndOffset  +  1;  [CE]  possible  loss  of  precision  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(offset  <  0)?  0L  :  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =(offset  <  0)?  0L  :  parseEndOffset  +  1;	  offset    =    0L;    	non-compiled	[CE]  possible  loss  of  precision	122	None	replace
2207	[BUG]  [BUGGY]  offset  =  parseStartOffset  -  1;  offset  =  endOffset  -  2;  [CE]  cannot  find  symbol  parseStartOffset  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  -  1;  offset  =  endOffset  -  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  -  1;  offset  =  endOffset  -  2;	  offset    =    endOffset    -    1;    offset    =    endOffset    -    2;    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	203	None	replace
2208	[BUG]  [BUGGY]  offset  =  byseEndOffset  -  1;  [CE]  cannot  find  symbol  byseEndOffset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  byseEndOffset  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  byseEndOffset  -  1;	  offset    =    startOffset    -    1;    	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	16	None	replace
2209	[BUG]  [BUGGY]  offset  =  pos.secondValue();  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.secondValue();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.secondValue();	  offset    =    pos.intValue();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
2210	[BUG]  [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  int  parseEndOffset  =(parseEndOffset  +  milliseconds)/  10;  [CE]  variable  parseEndOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  +  milliseconds)/  10;  int  parseEndOffset  =(parseEndOffset  +  milliseconds)/  10;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    +    milliseconds)/    10;    int  parseEndOffset  =(parseEndOffset  +  milliseconds)/  10;	  	non-compiled	[CE]  variable  parseEndOffset  is  already  defined  in  method  parse(String,ParsePosition)	120	None	add
2211	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  parseEndOffset  -  offset;  offset  =  milliseconds  -  1;  [CE]  not  a  statement  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  parseEndOffset  -  offset;  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    parseEndOffset  -  offset;  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  not  a  statement	10	None	add
2212	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  parseEndOffset  -  offset  =  milliseconds  -  1;  [CE]  unexpected  type  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  parseEndOffset  -  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    parseEndOffset  -  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  unexpected  type	10	None	add
2213	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  int  offset  =  milliseconds  -  1;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  int  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    int  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	10	None	add
2214	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  parseEndOffset(  offset);  offset  =  milliseconds  -  1;  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  parseEndOffset(  offset);  offset  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    parseEndOffset(  offset);  offset  =  milliseconds  -  1;	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
2215	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  milliseconds  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    milliseconds    -    1;    milliseconds  =  milliseconds  -  1;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
2216	[BUG]  [BUGGY]  offset  =  milliseconds  -  1;  milliseconds  =  milliseconds  -  1;  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  milliseconds  -  1;  milliseconds  =  milliseconds  -  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    milliseconds    -    1;    milliseconds  =  milliseconds  -  1;	  	compilable	  [FE]  JsonSyntaxException  	10	1	add
2217	[BUG]  [BUGGY]  offset  =  parseEndOffset(milliseconds);  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset(milliseconds);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset(milliseconds);	  offset    =    1;    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
2218	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
2219	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;	  	compilable	  [FE]  JsonSyntaxException  	78	1	add
2220	[BUG]  [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  offset  =  offset;  int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    offset    =    offset;    int  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "   ");  }  offset  =  offset;	  	non-compiled	[CE]  variable  offset  is  already  defined  in  method  parse(String,ParsePosition)	78	None	add
2221	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
2222	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	55	1	replace
2223	[BUG]  [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseStartOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseStartOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	55	None	replace
2224	[BUG]  [BUGGY]  parseOffset(parseEndOffset,  pos);  offset  =  0;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseOffset(parseEndOffset,  pos);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseOffset(parseEndOffset,  pos);  offset  =  0;	  offset    =    0;    parseOffset(offset,    pos);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
2225	[BUG]  [BUGGY]  parseOffset(pos,  pos);  offset  =  0;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseOffset(pos,  pos);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseOffset(pos,  pos);  offset  =  0;	  offset    =    0;    parseOffset(offset,    pos);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
2226	[BUG]  [BUGGY]  pos  =  parseOffset(offset,  pos);  offset  =  0;  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  pos  =  parseOffset(offset,  pos);  offset  =  0;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	pos  =  parseOffset(offset,  pos);  offset  =  0;	  offset    =    0;    parseOffset(offset,    pos);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
2227	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
2228	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
2229	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	71	1	replace
2230	[BUG]  [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  0;  if(offset  <  offset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	71	1	replace
2231	[BUG]  [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  int  parseEndOffset  =  Math.max(0,  parseEndOffset);  [CE]  variable  parseEndOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  Math.max(0,  parseEndOffset);  int  parseEndOffset  =  Math.max(0,  parseEndOffset);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    Math.max(0,    parseEndOffset);    int  parseEndOffset  =  Math.max(0,  parseEndOffset);	  	non-compiled	[CE]  variable  parseEndOffset  is  already  defined  in  method  parse(String,ParsePosition)	111	None	add
2232	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(0)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(0)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  i++)  {  if(date.charAt(0)  ==  '0')  {  throw  new  IllegalArgumentException( " ");  }	  for(int    i    =    0,    len    =    date.length();    i    <    len;    i++)    {    if(date.charAt(i)    ==    '0')    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	6	None	replace
2233	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset.add( "null ");  offset  =  0;  }  [CE]  int  cannot  be  dereferenced  [FE]          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset.add( "null ");  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset.add( "null ");  offset  =  0;  }	  offset    =    0;    result.add(   "n   ");    offset    =    0;    	non-compiled	[CE]  int  cannot  be  dereferenced	181	None	replace
2234	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset.add( "n   ");  offset  =  0;  }  [CE]  int  cannot  be  dereferenced  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset.add( "n   ");  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset.add( "n   ");  offset  =  0;  }	  offset    =    0;    result.add(   "n   ");    offset    =    0;    	non-compiled	[CE]  int  cannot  be  dereferenced	181	None	replace
2235	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  result.add( "null ");  offset  =  0;  }  [CE]  cannot  find  symbol  result  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  result.add( "null ");  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  result.add( "null ");  offset  =  0;  }	  offset    =    0;    result.add(   "n   ");    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  result	181	None	replace
2236	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  result.add( "n   ");  offset  =  0;  }  [CE]  cannot  find  symbol  result  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  result.add( "n   ");  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  result.add( "n   ");  offset  =  0;  }	  offset    =    0;    result.add(   "n   ");    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol  result	181	None	replace
2237	[BUG]  [BUGGY]  if(offset  ==  0)  {  offset  =  0;  offset.add( "n   ");  offset  =  0;  }  [CE]  int  cannot  be  dereferenced  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  ==  0)  {  offset  =  0;  offset.add( "n   ");  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  ==  0)  {  offset  =  0;  offset.add( "n   ");  offset  =  0;  }	  offset    =    0;    result.add(   "n   ");    offset    =    0;    	non-compiled	[CE]  int  cannot  be  dereferenced	181	None	replace
2238	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
2239	[BUG]  [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    offset;    if(offset  >=  offset)  {  throw  new  IllegalArgumentException(   "   ");  }  if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        offset;        if(offset    >=    offset)    {    throw    new    IllegalArgumentException(   "   ");    }    if(offset  <  offset)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	76	1	add
2240	[BUG]  [BUGGY]  offset  =  parseEndOffset  -  pos,  date.getOffset();  [CE]  ';'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  -  pos,  date.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  -  pos,  date.getOffset();	  offset    =    parseEndOffset    -    pos.getOffset();    	non-compiled	[CE]  ';'  expected	30	None	replace
2241	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  parseEndOffset  =(parseEndOffset  -  offset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =(parseEndOffset    -    offset)%    2;    parseEndOffset  =(parseEndOffset  -  offset)%  2;	  	compilable	  [FE]  JsonSyntaxException  	157	1	add
2242	[BUG]  [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  parseEndOffset  =(parseEndOffset  -  offset)%  2;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =(parseEndOffset  -  offset)%  2;  parseEndOffset  =(parseEndOffset  -  offset)%  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =(parseEndOffset    -    offset)%    2;    parseEndOffset  =(parseEndOffset  -  offset)%  2;	  	compilable	  [FE]  JsonSyntaxException  	157	1	add
2243	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	46	1	replace
2244	[BUG]  [BUGGY]  parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	parseEndOffset  =  offset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    <    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	46	1	replace
2245	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  parseEndOffset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        parseEndOffset        -        offset;        offset    =    parseEndOffset    -    offset;    parseEndOffset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;	  	compilable	  [FE]  JsonSyntaxException  	59	1	add
2246	[BUG]  [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  parseEndOffset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  parseEndOffset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset        -        offset;        offset    =    parseEndOffset    -    offset;    parseEndOffset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;	  	compilable	  [FE]  JsonSyntaxException  	59	1	add
2247	[BUG]  [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  parseStartOffset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  parseStartOffset  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    parseEndOffset    -    offset;    offset  =  parseEndOffset  -  offset;  parseStartOffset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        parseEndOffset        -        offset;        offset    =    parseEndOffset    -    offset;    parseStartOffset  =  parseEndOffset  -  offset;  offset  =  parseEndOffset  -  offset;	  	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	59	None	add
2248	[BUG]  [BUGGY]  offset  =  byseEndOffset  +  1;  [CE]  cannot  find  symbol  byseEndOffset  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  byseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  byseEndOffset  +  1;	  offset    =    startOffset    +    1;    	non-compiled	[CE]  cannot  find  symbol  byseEndOffset	24	None	replace
2249	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	for(int  i  =  0,  len  =  date.length();  i  <  len;  ++i)  {  if(date.charAt(i  +  1)!=  '0')  {  throw  new  IndexOutOfBoundsException( " ");  }	          for(int    i    =    0,    len    =    date.length();    i    <    len;    ++i)    {    if(date.charAt(i)!=    '0')    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	201	None	replace
2250	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -1)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    -offset;    if(offset  <  -1)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
2251	[BUG]  [BUGGY]  offset  =  -offset;  if(offset  <  -1)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -1)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    if(offset  <  -1)  {  offset  =  -offset;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
2252	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    -offset;    if(offset  <  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
2253	[BUG]  [BUGGY]  offset  =  -offset;  if(offset  <  -1)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    if(offset  <  -1)  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
2254	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset    =    -offset;    if(offset  <  -offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
2255	[BUG]  [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  -offset;  if(offset  <  -offset)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    -offset;    if(offset  <  -offset)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	176	1	add
2256	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1L;  [CE]  possible  loss  of  precision  [FE]        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1L;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1L;	  offset    =    endOffset    +    1L;    	non-compiled	[CE]  possible  loss  of  precision	140	None	replace
2257	[BUG]  [BUGGY]  offset  =  endOffset  +  2;  parseEndOffset(  pos);  offset  =  endOffset  +  2;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  endOffset  +  2;  parseEndOffset(  pos);  offset  =  endOffset  +  2;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset    =    endOffset    +    2;    parseEndOffset(  pos);  offset  =  endOffset  +  2;	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
2258	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  }	  offset    =    0;    parseOffset(offset,    0);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
2259	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    0;    parseOffset(offset,    0);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
2260	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  offset    =    0;    parseOffset(offset,    0);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
2261	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  }  else  {  throw  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  }  else  {  throw  new  JsonSyntaxException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  parseOffset(offset,  0);  offset  =  0;  }  else  {  throw  new  JsonSyntaxException( " ");  }	  offset    =    0;    parseOffset(offset,    0);    offset    =    0;    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
2262	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  1;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  1;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  1;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    	non-compiled	[CE]  'catch'  without  'try'	81	None	replace
2263	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  parseEndOffset;  }  else  {  offset  =  offset;  }  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  parseEndOffset;  }  else  {  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  parseEndOffset;  }  else  {  offset  =  offset;  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
2264	[BUG]  [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  offset  =  offset;  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  offset  =  offset;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(date.length()  <  =  offset)  {  offset  =  offset;  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  offset  =  offset;  }	  offset    =    offset;    if(offset    <    parseEndOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    offset;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
2265	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
2266	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
2267	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
2268	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  ==  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
2269	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
2270	[BUG]  [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset  +  1;  if(offset  >  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  else  {  offset  =  endOffset  +  1;  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    	compilable	  [FE]  JsonSyntaxException  	175	1	replace
2271	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  Offset  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  Offset  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        offset    =    endOffset    +    1;    Offset  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;	  	non-compiled	[CE]  cannot  find  symbol	43	None	add
2272	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        offset    =    endOffset    +    1;    offset  =  endOffset  +  1;  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	43	None	add
2273	[BUG]  [BUGGY]  offset  =  pos  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos  +  1;  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ");  }	  offset    =    endOffset    +    1;    if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	48	None	replace
2274	[BUG]  [BUGGY]  offset  =  pos.getOffset()  -  offset;  Offset  offset  =  parseEndOffset  -  offset;  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()  -  offset;  Offset  offset  =  parseEndOffset  -  offset;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  -  offset;  Offset  offset  =  parseEndOffset  -  offset;	  offset    =    parseEndOffset    -    offset;    Offset    offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
2275	[BUG]  [BUGGY]  offset  =  pos.getOffset()  -  offset;  Offset  offset  =  pos.getOffset();  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  pos.getOffset()  -  offset;  Offset  offset  =  pos.getOffset();  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  pos.getOffset()  -  offset;  Offset  offset  =  pos.getOffset();	  offset    =    parseEndOffset    -    offset;    Offset    offset    =    parseEndOffset    -    offset;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
2276	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getLocalMillis();  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.getLocalMillis();  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.getLocalMillis();  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	56	None	add
2277	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.DATE);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.DATE);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.get(Calendar.DATE);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	56	None	add
2278	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.HOUR_OF_DAY);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.HOUR_OF_DAY);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.get(Calendar.HOUR_OF_DAY);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	56	None	add
2279	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  parseEndOffset(parseEndOffset);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  parseEndOffset(parseEndOffset);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  parseEndOffset(parseEndOffset);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	56	None	add
2280	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  parseEndOffset(parseStartOffset);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  parseEndOffset(parseStartOffset);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  parseEndOffset(parseStartOffset);  offset  =  endOffset  +  1;  if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	56	None	add
2281	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.HOUR_OF_DAY);  [CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  ==  endOffset)  {  offset  =  endOffset  +  1;  }  int  endOffset  =  pos.get(Calendar.HOUR_OF_DAY);  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    ==    endOffset)    {    offset    =    endOffset    +    1;    }    int  endOffset  =  pos.get(Calendar.HOUR_OF_DAY);	  	non-compiled	[CE]  variable  endOffset  is  already  defined  in  method  parse(String,ParsePosition)	56	None	add
2282	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
2283	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	170	1	add
2284	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    offset    =    endOffset    +    1;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(offset  <  endOffset)  {  offset  =  endOffset  +  1;  if(offset  >=  endOffset)  {  offset  =  endOffset  +  1;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	170	None	add
2285	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	compilable	  [FE]  JsonSyntaxException  	130	1	replace
2286	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [FE]  JsonSyntaxException  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	compilable	  [FE]  JsonSyntaxException  	130	1	replace
2287	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  =  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
2288	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  0,  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  0,  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  <  0,  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	non-compiled	[CE]  	130	None	replace
2289	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	compilable	  [FE]  JsonSyntaxException  	130	1	replace
2290	[BUG]  [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [FE]  JsonSyntaxException  [FE]                          JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  offset  =  0;  offset  =  0;  }  else  if(date.length()  >=  endOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  must  not  be  null. ");  }	  offset    =    0;    offset    =    0;    }    else    if(date.length()    <    =    endOffset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    must    not    be    null.   ");    }    	compilable	  [FE]  JsonSyntaxException  	130	1	replace
2291	[BUG]  [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  parseEndOffset  +  1;  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset  =  parseEndOffset?  pos.getOffset()  :  parseEndOffset  +  1;  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset  =  parseEndOffset?  pos.getOffset()  :  parseEndOffset  +  1;	  offset    =    parseEndOffset?    pos.getOffset()    :    parseEndOffset;    	non-compiled	[CE]  incompatible  types	197	None	replace
2292	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
2293	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
2294	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
2295	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset  <  endOffset)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
2296	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  offset  =  endOffset  +  1;  }  [CE]  <identifier>  expected  [FE]        JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( " ".);  }  else  {  offset  =  endOffset  +  1;  }	  	non-compiled	[CE]  <identifier>  expected	174	None	add
2297	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( ". ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( ". ");  }  else  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
2298	[BUG]  [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( ". ");  }  else  {  offset  =  endOffset  +  1;  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  offset    =    endOffset    +    1;    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException(   "   ");  }  else  {  offset  =  endOffset  +  1;  }  if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( ". ");  }  else  {  offset  =  endOffset  +  1;  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	offset        =        endOffset        +        1;        if(offset    >=    endOffset)    {    throw    new    IllegalArgumentException(   "   ");    }    else    {    offset    =    endOffset    +    1;    }    if(offset  >=  endOffset)  {  throw  new  IllegalArgumentException( ". ");  }  else  {  offset  =  endOffset  +  1;  }	  	compilable	  [FE]  JsonSyntaxException  	174	1	add
2299	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
2300	[BUG]  [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  parseEndOffset)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
2301	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	if(offset  <  0)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
2302	[BUG]  [BUGGY]  if(offset  <  0)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      switch  (parseEndOffset  -  offset)  {  //  number  of  digits  parsed  case  2:  milliseconds  =  fraction  *  10;  break;  case  1:  milliseconds  =  fraction  *  100;  break;  default:  milliseconds  =  fraction;  }      [BUGGY]  if(offset  <  0)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }  [BUGGY]      }  }  }  }  if  (date.length()  <=  offset)  {  throw  new  IllegalArgumentException(     "No  time  zone  indicator     ");  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	if(offset  <  0)  {  throw  new  IllegalArgumentException( "Time  zone  indicator  not  followed  by  a  value ");  }	  offset    =    offset;    if(offset    <    offset)    {    throw    new    IllegalArgumentException(   "Time    zone    indicator    not    followed    by    a    value   ");    }    	compilable	  [FE]  JsonSyntaxException  	192	1	replace
