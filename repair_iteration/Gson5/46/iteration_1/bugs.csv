bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  0;  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	add	int  milliseconds  =  0;	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  JsonSyntaxException  	91	1	replace
2	[BUG]  [BUGGY]  int  milliseconds  =  0;  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  0;  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	replace	int  milliseconds  =  0;	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  JsonSyntaxException  	91	1	replace
3	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone),  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	add	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone),  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  JsonSyntaxException  	91	1	replace
4	[BUG]  [BUGGY]  int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone),  we  are  done  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone),  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	replace	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone),  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  JsonSyntaxException  	91	1	replace
5	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone,  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	add	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone,  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  JsonSyntaxException  	91	1	replace
6	[BUG]  [BUGGY]  int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone,  we  are  done  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone,  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	replace	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone,  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  JsonSyntaxException  	91	1	replace
7	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone  (and  no  time  zone),  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	add	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone  (and  no  time  zone),  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  JsonSyntaxException  	91	1	replace
8	[BUG]  [BUGGY]  int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone  (and  no  time  zone),  we  are  done  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone  (and  no  time  zone),  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	replace	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone  (and  no  time  zone),  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  JsonSyntaxException  	91	1	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  1;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone),  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	add	int  milliseconds  =  1;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone),  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  AssertionFailedError  	91	4	replace
10	[BUG]  [BUGGY]  int  milliseconds  =  1;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone),  we  are  done  [FE]  AssertionFailedError  [FE]            JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  1;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone),  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	replace	int  milliseconds  =  1;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  zone),  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  AssertionFailedError  	91	4	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  1;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	add	int  milliseconds  =  1;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  AssertionFailedError  	91	4	replace
12	[BUG]  [BUGGY]  int  milliseconds  =  1;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  [FE]  AssertionFailedError  [FE]              JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  1;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	replace	int  milliseconds  =  1;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  AssertionFailedError  	91	4	replace
13	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  milliseconds  [FE]                JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]    [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	replace	  	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	non-compiled	[CE]  cannot  find  symbol  milliseconds	91	None	replace
14	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  0;//  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	add	int  milliseconds  =  0;//  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  JsonSyntaxException  	91	1	replace
15	[BUG]  [BUGGY]  int  milliseconds  =  0;//  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  0;//  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	replace	int  milliseconds  =  0;//  otherwise  returned  date  will  include  millis  of  current  time  //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  JsonSyntaxException  	91	1	replace
16	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  *  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	add	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  *  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  JsonSyntaxException  	91	1	replace
17	[BUG]  [BUGGY]  int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  *  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException  [CONTEXT]  if  (checkOffset(date,  offset,  '-'))  {  offset  +=  1;  }  int  day  =  parseInt(date,  offset,  offset  +=  2);  int  hour  =  0;  int  minutes  =  0;  int  seconds  =  0;  [BUGGY]  int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  *  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  [BUGGY]    boolean  hasT  =  checkOffset(date,  offset,  'T');  if  (!hasT  &&  (date.length()  <=  offset))  {  Calendar  calendar  =  new  GregorianCalendar(year,  month  -  1,  day);  pos.setIndex(offset);  return  calendar.getTime();  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	replace	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time  *  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done	int  milliseconds  =  0;  //  always  use  0  otherwise  returned  date  will  include  millis  of  current  time    //  if  the  value  has  no  time  component  (and  no  time  zone),  we  are  done  	compilable	  [FE]  JsonSyntaxException  	91	1	replace
