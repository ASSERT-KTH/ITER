bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] offset += 1; [FE] JsonSyntaxException [CONTEXT] offset += 1; }  if (date.length() > offset) { char c = date.charAt(offset); if (c != 'Z' && c != '+' && c != '-') { seconds = parseInt(date, offset, offset += 2); if (seconds > 59 && seconds < 63) seconds = 59; // truncate up to 3 leap seconds  if (checkOffset(date, offset, '.')) { [BUGGY] offset += 1; [BUGGY] int endOffset = indexOfNonDigit(date, offset + 1); // assume at least one digit int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits int fraction = parseInt(date, offset, parseEndOffset);  switch (parseEndOffset - offset) { // number of digits parsed case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	178	178	1	replace	
2	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] offset += 1; }  if (date.length() > offset) { char c = date.charAt(offset); if (c != 'Z' && c != '+' && c != '-') { seconds = parseInt(date, offset, offset += 2); if (seconds > 59 && seconds < 63) seconds = 59; // truncate up to 3 leap seconds  if (checkOffset(date, offset, '.')) { [BUGGY] [BUGGY] offset += 1; int endOffset = indexOfNonDigit(date, offset + 1); // assume at least one digit int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits int fraction = parseInt(date, offset, parseEndOffset);  switch (parseEndOffset - offset) { // number of digits parsed case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	178	178	1	add	
3	[BUG] [BUGGY] int endOffset = indexOfNonDigit(date, offset + 1); // assume at least one digit  int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits    int fraction = parseInt(date, offset, parseEndOffset); [FE] JsonSyntaxException [CONTEXT] }  if (date.length() > offset) { char c = date.charAt(offset); if (c != 'Z' && c != '+' && c != '-') { seconds = parseInt(date, offset, offset += 2); if (seconds > 59 && seconds < 63) seconds = 59; // truncate up to 3 leap seconds  if (checkOffset(date, offset, '.')) { offset += 1; [BUGGY] int endOffset = indexOfNonDigit(date, offset + 1); // assume at least one digit       int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits              int fraction = parseInt(date, offset, parseEndOffset); [BUGGY] int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits int fraction = parseInt(date, offset, parseEndOffset);  switch (parseEndOffset - offset) { // number of digits parsed case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; break; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	179	181	1	replace	
4	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] }  if (date.length() > offset) { char c = date.charAt(offset); if (c != 'Z' && c != '+' && c != '-') { seconds = parseInt(date, offset, offset += 2); if (seconds > 59 && seconds < 63) seconds = 59; // truncate up to 3 leap seconds  if (checkOffset(date, offset, '.')) { offset += 1; [BUGGY] [BUGGY] int endOffset = indexOfNonDigit(date, offset + 1); // assume at least one digit       int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits              int fraction = parseInt(date, offset, parseEndOffset); int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits int fraction = parseInt(date, offset, parseEndOffset);  switch (parseEndOffset - offset) { // number of digits parsed case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; break; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	179	181	1	add	
5	[BUG] [BUGGY] int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits  int fraction = parseInt(date, offset, parseEndOffset); [FE] JsonSyntaxException [CONTEXT]  if (date.length() > offset) { char c = date.charAt(offset); if (c != 'Z' && c != '+' && c != '-') { seconds = parseInt(date, offset, offset += 2); if (seconds > 59 && seconds < 63) seconds = 59; // truncate up to 3 leap seconds  if (checkOffset(date, offset, '.')) { offset += 1; int endOffset = indexOfNonDigit(date, offset + 1); // assume at least one digit [BUGGY] int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits       int fraction = parseInt(date, offset, parseEndOffset); [BUGGY] int fraction = parseInt(date, offset, parseEndOffset);  switch (parseEndOffset - offset) { // number of digits parsed case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; break; default: [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	180	181	1	replace	
6	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT]  if (date.length() > offset) { char c = date.charAt(offset); if (c != 'Z' && c != '+' && c != '-') { seconds = parseInt(date, offset, offset += 2); if (seconds > 59 && seconds < 63) seconds = 59; // truncate up to 3 leap seconds  if (checkOffset(date, offset, '.')) { offset += 1; int endOffset = indexOfNonDigit(date, offset + 1); // assume at least one digit [BUGGY] [BUGGY] int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits       int fraction = parseInt(date, offset, parseEndOffset); int fraction = parseInt(date, offset, parseEndOffset);  switch (parseEndOffset - offset) { // number of digits parsed case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; break; default: [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	180	181	1	add	
7	[BUG] [BUGGY] int fraction = parseInt(date, offset, parseEndOffset); [FE] JsonSyntaxException [CONTEXT] if (date.length() > offset) { char c = date.charAt(offset); if (c != 'Z' && c != '+' && c != '-') { seconds = parseInt(date, offset, offset += 2); if (seconds > 59 && seconds < 63) seconds = 59; // truncate up to 3 leap seconds  if (checkOffset(date, offset, '.')) { offset += 1; int endOffset = indexOfNonDigit(date, offset + 1); // assume at least one digit int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits [BUGGY] int fraction = parseInt(date, offset, parseEndOffset); [BUGGY]  switch (parseEndOffset - offset) { // number of digits parsed case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; break; default: milliseconds = fraction; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	181	181	1	replace	
8	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] if (date.length() > offset) { char c = date.charAt(offset); if (c != 'Z' && c != '+' && c != '-') { seconds = parseInt(date, offset, offset += 2); if (seconds > 59 && seconds < 63) seconds = 59; // truncate up to 3 leap seconds  if (checkOffset(date, offset, '.')) { offset += 1; int endOffset = indexOfNonDigit(date, offset + 1); // assume at least one digit int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits [BUGGY] [BUGGY] int fraction = parseInt(date, offset, parseEndOffset);  switch (parseEndOffset - offset) { // number of digits parsed case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; break; default: milliseconds = fraction; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	181	181	1	add	
9	[BUG] [BUGGY] switch (parseEndOffset - offset) { // number of digits parsed  case 2:    milliseconds = fraction * 10; [FE] JsonSyntaxException [CONTEXT] if (c != 'Z' && c != '+' && c != '-') { seconds = parseInt(date, offset, offset += 2); if (seconds > 59 && seconds < 63) seconds = 59; // truncate up to 3 leap seconds  if (checkOffset(date, offset, '.')) { offset += 1; int endOffset = indexOfNonDigit(date, offset + 1); // assume at least one digit int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits int fraction = parseInt(date, offset, parseEndOffset);  [BUGGY] switch (parseEndOffset - offset) { // number of digits parsed       case 2:                milliseconds = fraction * 10; [BUGGY] case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; break; default: milliseconds = fraction; } offset = endOffset; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	183	185	1	replace	
10	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] if (c != 'Z' && c != '+' && c != '-') { seconds = parseInt(date, offset, offset += 2); if (seconds > 59 && seconds < 63) seconds = 59; // truncate up to 3 leap seconds  if (checkOffset(date, offset, '.')) { offset += 1; int endOffset = indexOfNonDigit(date, offset + 1); // assume at least one digit int parseEndOffset = Math.min(endOffset, offset + 3); // parse up to 3 digits int fraction = parseInt(date, offset, parseEndOffset);  [BUGGY] [BUGGY] switch (parseEndOffset - offset) { // number of digits parsed       case 2:                milliseconds = fraction * 10; case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; break; default: milliseconds = fraction; } offset = endOffset; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	183	185	1	add	
11	[BUG] [BUGGY] milliseconds = fraction; [FE] JsonSyntaxException [CONTEXT] int fraction = parseInt(date, offset, parseEndOffset);  switch (parseEndOffset - offset) { // number of digits parsed case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; break; default: [BUGGY] milliseconds = fraction; [BUGGY] } offset = endOffset; } } } }  if (date.length() <= offset) { throw new IllegalArgumentException("No time zone indicator"); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	replace	
12	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] int fraction = parseInt(date, offset, parseEndOffset);  switch (parseEndOffset - offset) { // number of digits parsed case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; break; default: [BUGGY] [BUGGY] milliseconds = fraction; } offset = endOffset; } } } }  if (date.length() <= offset) { throw new IllegalArgumentException("No time zone indicator"); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	191	191	1	add	
13	[BUG] [BUGGY] offset = endOffset; [FE] JsonSyntaxException [CONTEXT] switch (parseEndOffset - offset) { // number of digits parsed case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; break; default: milliseconds = fraction; } [BUGGY] offset = endOffset; [BUGGY] } } } }  if (date.length() <= offset) { throw new IllegalArgumentException("No time zone indicator"); }  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	replace	
14	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] switch (parseEndOffset - offset) { // number of digits parsed case 2: milliseconds = fraction * 10; break; case 1: milliseconds = fraction * 100; break; default: milliseconds = fraction; } [BUGGY] [BUGGY] offset = endOffset; } } } }  if (date.length() <= offset) { throw new IllegalArgumentException("No time zone indicator"); }  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	193	193	1	add	
15	[BUG] [BUGGY] } else if (timezoneIndicator == '+' || timezoneIndicator == '-') { [FE] JsonSyntaxException [CONTEXT] if (date.length() <= offset) { throw new IllegalArgumentException("No time zone indicator"); } TimeZone timezone = null; char timezoneIndicator = date.charAt(offset); if (timezoneIndicator == 'Z') { timezone = TIMEZONE_UTC; offset += 1; [BUGGY] } else if (timezoneIndicator == '+' || timezoneIndicator == '-') { [BUGGY] String timezoneOffset = date.substring(offset);   offset += timezoneOffset.length();  if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { timezone = TIMEZONE_UTC; } else {  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	210	210	1	replace	
16	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] if (date.length() <= offset) { throw new IllegalArgumentException("No time zone indicator"); } TimeZone timezone = null; char timezoneIndicator = date.charAt(offset); if (timezoneIndicator == 'Z') { timezone = TIMEZONE_UTC; offset += 1; [BUGGY] [BUGGY] } else if (timezoneIndicator == '+' || timezoneIndicator == '-') { String timezoneOffset = date.substring(offset);   offset += timezoneOffset.length();  if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { timezone = TIMEZONE_UTC; } else {  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	210	210	1	add	
17	[BUG] [BUGGY] String timezoneOffset = date.substring(offset); [FE] JsonSyntaxException [CONTEXT] throw new IllegalArgumentException("No time zone indicator"); } TimeZone timezone = null; char timezoneIndicator = date.charAt(offset); if (timezoneIndicator == 'Z') { timezone = TIMEZONE_UTC; offset += 1; } else if (timezoneIndicator == '+' || timezoneIndicator == '-') { [BUGGY] String timezoneOffset = date.substring(offset); [BUGGY]   offset += timezoneOffset.length();  if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { timezone = TIMEZONE_UTC; } else {   [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	211	211	1	replace	
18	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] throw new IllegalArgumentException("No time zone indicator"); } TimeZone timezone = null; char timezoneIndicator = date.charAt(offset); if (timezoneIndicator == 'Z') { timezone = TIMEZONE_UTC; offset += 1; } else if (timezoneIndicator == '+' || timezoneIndicator == '-') { [BUGGY] [BUGGY] String timezoneOffset = date.substring(offset);   offset += timezoneOffset.length();  if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { timezone = TIMEZONE_UTC; } else {   [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	211	211	1	add	
19	[BUG] [BUGGY] offset += timezoneOffset.length(); [FE] JsonSyntaxException [CONTEXT] char timezoneIndicator = date.charAt(offset); if (timezoneIndicator == 'Z') { timezone = TIMEZONE_UTC; offset += 1; } else if (timezoneIndicator == '+' || timezoneIndicator == '-') { String timezoneOffset = date.substring(offset);   [BUGGY] offset += timezoneOffset.length(); [BUGGY]  if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { timezone = TIMEZONE_UTC; } else {     String timezoneId = "GMT" + timezoneOffset;  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	215	215	1	replace	
20	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] char timezoneIndicator = date.charAt(offset); if (timezoneIndicator == 'Z') { timezone = TIMEZONE_UTC; offset += 1; } else if (timezoneIndicator == '+' || timezoneIndicator == '-') { String timezoneOffset = date.substring(offset);   [BUGGY] [BUGGY] offset += timezoneOffset.length();  if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { timezone = TIMEZONE_UTC; } else {     String timezoneId = "GMT" + timezoneOffset;  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	215	215	1	add	
21	[BUG] [BUGGY] if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { [FE] JsonSyntaxException [CONTEXT] if (timezoneIndicator == 'Z') { timezone = TIMEZONE_UTC; offset += 1; } else if (timezoneIndicator == '+' || timezoneIndicator == '-') { String timezoneOffset = date.substring(offset);   offset += timezoneOffset.length();  [BUGGY] if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { [BUGGY] timezone = TIMEZONE_UTC; } else {     String timezoneId = "GMT" + timezoneOffset;  timezone = TimeZone.getTimeZone(timezoneId); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	217	217	1	replace	
22	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] if (timezoneIndicator == 'Z') { timezone = TIMEZONE_UTC; offset += 1; } else if (timezoneIndicator == '+' || timezoneIndicator == '-') { String timezoneOffset = date.substring(offset);   offset += timezoneOffset.length();  [BUGGY] [BUGGY] if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { timezone = TIMEZONE_UTC; } else {     String timezoneId = "GMT" + timezoneOffset;  timezone = TimeZone.getTimeZone(timezoneId); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	217	217	1	add	
23	[BUG] [BUGGY] timezone = TIMEZONE_UTC; [FE] JsonSyntaxException [CONTEXT] timezone = TIMEZONE_UTC; offset += 1; } else if (timezoneIndicator == '+' || timezoneIndicator == '-') { String timezoneOffset = date.substring(offset);   offset += timezoneOffset.length();  if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { [BUGGY] timezone = TIMEZONE_UTC; [BUGGY] } else {     String timezoneId = "GMT" + timezoneOffset;  timezone = TimeZone.getTimeZone(timezoneId);  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	218	218	1	replace	
24	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] timezone = TIMEZONE_UTC; offset += 1; } else if (timezoneIndicator == '+' || timezoneIndicator == '-') { String timezoneOffset = date.substring(offset);   offset += timezoneOffset.length();  if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { [BUGGY] [BUGGY] timezone = TIMEZONE_UTC; } else {     String timezoneId = "GMT" + timezoneOffset;  timezone = TimeZone.getTimeZone(timezoneId);  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	218	218	1	add	
25	[BUG] [BUGGY] String timezoneId = "GMT" + timezoneOffset; [FE] JsonSyntaxException [CONTEXT] if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { timezone = TIMEZONE_UTC; } else {     [BUGGY] String timezoneId = "GMT" + timezoneOffset; [BUGGY]   timezone = TimeZone.getTimeZone(timezoneId); String act = timezone.getID(); if (!act.equals(timezoneId)) {     [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	224	224	1	replace	
26	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { timezone = TIMEZONE_UTC; } else {     [BUGGY] [BUGGY] String timezoneId = "GMT" + timezoneOffset;  timezone = TimeZone.getTimeZone(timezoneId); String act = timezone.getID(); if (!act.equals(timezoneId)) {     [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	224	224	1	add	
27	[BUG] [BUGGY] timezone = TimeZone.getTimeZone(timezoneId); [FE] JsonSyntaxException [CONTEXT] if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { timezone = TIMEZONE_UTC; } else {     String timezoneId = "GMT" + timezoneOffset;  [BUGGY] timezone = TimeZone.getTimeZone(timezoneId); [BUGGY]  String act = timezone.getID(); if (!act.equals(timezoneId)) {      String cleaned = act.replace(":", ""); if (!cleaned.equals(timezoneId)) { [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	227	227	1	replace	
28	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] if ("+0000".equals(timezoneOffset) || "+00:00".equals(timezoneOffset)) { timezone = TIMEZONE_UTC; } else {     String timezoneId = "GMT" + timezoneOffset;  [BUGGY] [BUGGY] timezone = TimeZone.getTimeZone(timezoneId); String act = timezone.getID(); if (!act.equals(timezoneId)) {      String cleaned = act.replace(":", ""); if (!cleaned.equals(timezoneId)) { [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	227	227	1	add	
29	[BUG] [BUGGY] String act = timezone.getID(); [FE] JsonSyntaxException [CONTEXT] } else {     String timezoneId = "GMT" + timezoneOffset;  timezone = TimeZone.getTimeZone(timezoneId); [BUGGY] String act = timezone.getID(); [BUGGY] if (!act.equals(timezoneId)) {      String cleaned = act.replace(":", ""); if (!cleaned.equals(timezoneId)) { throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to " +timezone.getID()); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	229	229	1	replace	
30	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] } else {     String timezoneId = "GMT" + timezoneOffset;  timezone = TimeZone.getTimeZone(timezoneId); [BUGGY] [BUGGY] String act = timezone.getID(); if (!act.equals(timezoneId)) {      String cleaned = act.replace(":", ""); if (!cleaned.equals(timezoneId)) { throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to " +timezone.getID()); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	229	229	1	add	
31	[BUG] [BUGGY] if (!act.equals(timezoneId)) { [FE] JsonSyntaxException [CONTEXT]     String timezoneId = "GMT" + timezoneOffset;  timezone = TimeZone.getTimeZone(timezoneId); String act = timezone.getID(); [BUGGY] if (!act.equals(timezoneId)) { [BUGGY]      String cleaned = act.replace(":", ""); if (!cleaned.equals(timezoneId)) { throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to " +timezone.getID()); } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	230	230	1	replace	
32	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT]     String timezoneId = "GMT" + timezoneOffset;  timezone = TimeZone.getTimeZone(timezoneId); String act = timezone.getID(); [BUGGY] [BUGGY] if (!act.equals(timezoneId)) {      String cleaned = act.replace(":", ""); if (!cleaned.equals(timezoneId)) { throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to " +timezone.getID()); } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	230	230	1	add	
33	[BUG] [BUGGY] String cleaned = act.replace(":", ""); [FE] JsonSyntaxException [CONTEXT] timezone = TimeZone.getTimeZone(timezoneId); String act = timezone.getID(); if (!act.equals(timezoneId)) {      [BUGGY] String cleaned = act.replace(":", ""); [BUGGY] if (!cleaned.equals(timezoneId)) { throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to " +timezone.getID()); } } } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	236	236	1	replace	
34	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] timezone = TimeZone.getTimeZone(timezoneId); String act = timezone.getID(); if (!act.equals(timezoneId)) {      [BUGGY] [BUGGY] String cleaned = act.replace(":", ""); if (!cleaned.equals(timezoneId)) { throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to " +timezone.getID()); } } } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	236	236	1	add	
35	[BUG] [BUGGY] if (!cleaned.equals(timezoneId)) { [FE] JsonSyntaxException [CONTEXT] timezone = TimeZone.getTimeZone(timezoneId); String act = timezone.getID(); if (!act.equals(timezoneId)) {      String cleaned = act.replace(":", ""); [BUGGY] if (!cleaned.equals(timezoneId)) { [BUGGY] throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to " +timezone.getID()); } } } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	
36	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] timezone = TimeZone.getTimeZone(timezoneId); String act = timezone.getID(); if (!act.equals(timezoneId)) {      String cleaned = act.replace(":", ""); [BUGGY] [BUGGY] if (!cleaned.equals(timezoneId)) { throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to " +timezone.getID()); } } } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	
37	[BUG] [BUGGY] throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to "   +timezone.getID()); [FE] JsonSyntaxException [CONTEXT] String act = timezone.getID(); if (!act.equals(timezoneId)) {      String cleaned = act.replace(":", ""); if (!cleaned.equals(timezoneId)) { [BUGGY] throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to "         +timezone.getID()); [BUGGY] +timezone.getID()); } } } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	replace	
38	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] String act = timezone.getID(); if (!act.equals(timezoneId)) {      String cleaned = act.replace(":", ""); if (!cleaned.equals(timezoneId)) { [BUGGY] [BUGGY] throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to "         +timezone.getID()); +timezone.getID()); } } } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	add	
39	[BUG] [BUGGY] } else { [FE] JsonSyntaxException [CONTEXT]    String cleaned = act.replace(":", ""); if (!cleaned.equals(timezoneId)) { throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to " +timezone.getID()); } } } [BUGGY] } else { [BUGGY] throw new IndexOutOfBoundsException("Invalid time zone indicator '" + timezoneIndicator+"'"); } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	replace	
40	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT]    String cleaned = act.replace(":", ""); if (!cleaned.equals(timezoneId)) { throw new IndexOutOfBoundsException("Mismatching time zone indicator: "+timezoneId+" given, resolves to " +timezone.getID()); } } } [BUGGY] [BUGGY] } else { throw new IndexOutOfBoundsException("Invalid time zone indicator '" + timezoneIndicator+"'"); } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	243	243	1	add	
41	[BUG] [BUGGY] } catch (IndexOutOfBoundsException e) { [FE] JsonSyntaxException [CONTEXT] calendar.set(Calendar.DAY_OF_MONTH, day); calendar.set(Calendar.HOUR_OF_DAY, hour); calendar.set(Calendar.MINUTE, minutes); calendar.set(Calendar.SECOND, seconds); calendar.set(Calendar.MILLISECOND, milliseconds); pos.setIndex(offset); return calendar.getTime();   [BUGGY] } catch (IndexOutOfBoundsException e) { [BUGGY] fail = e; } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	261	261	1	replace	
42	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] calendar.set(Calendar.DAY_OF_MONTH, day); calendar.set(Calendar.HOUR_OF_DAY, hour); calendar.set(Calendar.MINUTE, minutes); calendar.set(Calendar.SECOND, seconds); calendar.set(Calendar.MILLISECOND, milliseconds); pos.setIndex(offset); return calendar.getTime();   [BUGGY] [BUGGY] } catch (IndexOutOfBoundsException e) { fail = e; } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	261	261	1	add	
43	[BUG] [BUGGY] fail = e; [FE] JsonSyntaxException [CONTEXT] calendar.set(Calendar.HOUR_OF_DAY, hour); calendar.set(Calendar.MINUTE, minutes); calendar.set(Calendar.SECOND, seconds); calendar.set(Calendar.MILLISECOND, milliseconds); pos.setIndex(offset); return calendar.getTime();   } catch (IndexOutOfBoundsException e) { [BUGGY] fail = e; [BUGGY] } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	
44	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] calendar.set(Calendar.HOUR_OF_DAY, hour); calendar.set(Calendar.MINUTE, minutes); calendar.set(Calendar.SECOND, seconds); calendar.set(Calendar.MILLISECOND, milliseconds); pos.setIndex(offset); return calendar.getTime();   } catch (IndexOutOfBoundsException e) { [BUGGY] [BUGGY] fail = e; } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	
45	[BUG] [BUGGY] } [FE] JsonSyntaxException [CONTEXT] pos.setIndex(offset); return calendar.getTime();   } catch (IndexOutOfBoundsException e) { fail = e; } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; [BUGGY] } [BUGGY] String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); ex.initCause(fail); throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	replace	
46	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] pos.setIndex(offset); return calendar.getTime();   } catch (IndexOutOfBoundsException e) { fail = e; } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; [BUGGY] [BUGGY] } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); ex.initCause(fail); throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	267	267	1	add	
47	[BUG] [BUGGY] String input = (date == null) ? null : ('"' + date + "'"); [FE] JsonSyntaxException [CONTEXT] return calendar.getTime();   } catch (IndexOutOfBoundsException e) { fail = e; } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; } [BUGGY] String input = (date == null) ? null : ('"' + date + "'"); [BUGGY] String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); ex.initCause(fail); throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	268	268	1	replace	
48	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] return calendar.getTime();   } catch (IndexOutOfBoundsException e) { fail = e; } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; } [BUGGY] [BUGGY] String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); ex.initCause(fail); throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	268	268	1	add	
49	[BUG] [BUGGY] String msg = fail.getMessage(); [FE] JsonSyntaxException [CONTEXT]   } catch (IndexOutOfBoundsException e) { fail = e; } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); [BUGGY] String msg = fail.getMessage(); [BUGGY] if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); ex.initCause(fail); throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	269	269	1	replace	
50	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT]   } catch (IndexOutOfBoundsException e) { fail = e; } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); [BUGGY] [BUGGY] String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); ex.initCause(fail); throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	269	269	1	add	
51	[BUG] [BUGGY] if (msg == null || msg.isEmpty()) { [FE] JsonSyntaxException [CONTEXT]  } catch (IndexOutOfBoundsException e) { fail = e; } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); [BUGGY] if (msg == null || msg.isEmpty()) { [BUGGY] msg = "("+fail.getClass().getName()+")"; } ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); ex.initCause(fail); throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	replace	
52	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT]  } catch (IndexOutOfBoundsException e) { fail = e; } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); [BUGGY] [BUGGY] if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); ex.initCause(fail); throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	270	270	1	add	
53	[BUG] [BUGGY] ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); [FE] JsonSyntaxException [CONTEXT] } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } [BUGGY] ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); [BUGGY] ex.initCause(fail); throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	273	273	1	replace	
54	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] } catch (NumberFormatException e) { fail = e; } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } [BUGGY] [BUGGY] ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); ex.initCause(fail); throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	273	273	1	add	
55	[BUG] [BUGGY] ex.initCause(fail); [FE] JsonSyntaxException [CONTEXT] fail = e; } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); [BUGGY] ex.initCause(fail); [BUGGY] throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	
56	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] fail = e; } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); [BUGGY] [BUGGY] ex.initCause(fail); throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	
57	[BUG] [BUGGY] throw ex; [FE] JsonSyntaxException [CONTEXT] } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); ex.initCause(fail); [BUGGY] throw ex; [BUGGY] } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	replace	
58	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] } catch (IllegalArgumentException e) { fail = e; } String input = (date == null) ? null : ('"' + date + "'"); String msg = fail.getMessage(); if (msg == null || msg.isEmpty()) { msg = "("+fail.getClass().getName()+")"; } ParseException ex = new ParseException("Failed to parse date [" + input + "]: " + msg, pos.getIndex()); ex.initCause(fail); [BUGGY] [BUGGY] throw ex; } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	275	275	1	add	
59	[BUG] [BUGGY] for (int i = offset; i < string.length(); i++) { [FE] JsonSyntaxException [CONTEXT] private static int indexOfNonDigit(String string, int offset) { [BUGGY] for (int i = offset; i < string.length(); i++) { [BUGGY] char c = string.charAt(i); if (c < '0' || c > '9') return i; } return string.length(); } [CLASS] ISO8601Utils [METHOD] indexOfNonDigit [RETURN_TYPE] int  String string int offset [VARIABLES] char c TimeZone TIMEZONE_UTC timezone tz String UTC_ID act cleaned date input msg strValue string timezoneId timezoneOffset value boolean int i offset  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	344	344	1	replace	
60	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] private static int indexOfNonDigit(String string, int offset) { [BUGGY] [BUGGY] for (int i = offset; i < string.length(); i++) { char c = string.charAt(i); if (c < '0' || c > '9') return i; } return string.length(); } [CLASS] ISO8601Utils [METHOD] indexOfNonDigit [RETURN_TYPE] int  String string int offset [VARIABLES] char c TimeZone TIMEZONE_UTC timezone tz String UTC_ID act cleaned date input msg strValue string timezoneId timezoneOffset value boolean int i offset  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	344	344	1	add	
61	[BUG] [BUGGY] char c = string.charAt(i); [FE] JsonSyntaxException [CONTEXT] private static int indexOfNonDigit(String string, int offset) { for (int i = offset; i < string.length(); i++) { [BUGGY] char c = string.charAt(i); [BUGGY] if (c < '0' || c > '9') return i; } return string.length(); } [CLASS] ISO8601Utils [METHOD] indexOfNonDigit [RETURN_TYPE] int  String string int offset [VARIABLES] char c TimeZone TIMEZONE_UTC timezone tz String UTC_ID act cleaned date input msg strValue string timezoneId timezoneOffset value boolean int i offset  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	345	345	1	replace	
62	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] private static int indexOfNonDigit(String string, int offset) { for (int i = offset; i < string.length(); i++) { [BUGGY] [BUGGY] char c = string.charAt(i); if (c < '0' || c > '9') return i; } return string.length(); } [CLASS] ISO8601Utils [METHOD] indexOfNonDigit [RETURN_TYPE] int  String string int offset [VARIABLES] char c TimeZone TIMEZONE_UTC timezone tz String UTC_ID act cleaned date input msg strValue string timezoneId timezoneOffset value boolean int i offset  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	345	345	1	add	
63	[BUG] [BUGGY] if (c < '0' || c > '9') return i; [FE] JsonSyntaxException [CONTEXT] private static int indexOfNonDigit(String string, int offset) { for (int i = offset; i < string.length(); i++) { char c = string.charAt(i); [BUGGY] if (c < '0' || c > '9') return i; [BUGGY] } return string.length(); } [CLASS] ISO8601Utils [METHOD] indexOfNonDigit [RETURN_TYPE] int  String string int offset [VARIABLES] char c TimeZone TIMEZONE_UTC timezone tz String UTC_ID act cleaned date input msg strValue string timezoneId timezoneOffset value boolean int i offset  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	346	346	1	replace	
64	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] private static int indexOfNonDigit(String string, int offset) { for (int i = offset; i < string.length(); i++) { char c = string.charAt(i); [BUGGY] [BUGGY] if (c < '0' || c > '9') return i; } return string.length(); } [CLASS] ISO8601Utils [METHOD] indexOfNonDigit [RETURN_TYPE] int  String string int offset [VARIABLES] char c TimeZone TIMEZONE_UTC timezone tz String UTC_ID act cleaned date input msg strValue string timezoneId timezoneOffset value boolean int i offset  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	346	346	1	add	
65	[BUG] [BUGGY] private static final TimeZone TIMEZONE_UTC = TimeZone.getTimeZone(UTC_ID); [FE] JsonSyntaxException [CONTEXT] [BUGGY] private static final TimeZone TIMEZONE_UTC = TimeZone.getTimeZone(UTC_ID); [BUGGY]  [CLASS] ISO8601Utils  [VARIABLES] 	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	30	30	1	replace	
66	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] [BUGGY] [BUGGY] private static final TimeZone TIMEZONE_UTC = TimeZone.getTimeZone(UTC_ID); [CLASS] ISO8601Utils  [VARIABLES] 	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	30	30	1	add	
67	[BUG] [BUGGY] Exception fail = null; [FE] JsonSyntaxException [CONTEXT] public static Date parse(String date, ParsePosition pos) throws ParseException { [BUGGY] Exception fail = null; [BUGGY] try { int offset = pos.getIndex();  int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { offset += 1; }   [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	124	124	1	replace	
68	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public static Date parse(String date, ParsePosition pos) throws ParseException { [BUGGY] [BUGGY] Exception fail = null; try { int offset = pos.getIndex();  int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { offset += 1; }   [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	124	124	1	add	
69	[BUG] [BUGGY] int offset = pos.getIndex(); [FE] JsonSyntaxException [CONTEXT] public static Date parse(String date, ParsePosition pos) throws ParseException { Exception fail = null; try { [BUGGY] int offset = pos.getIndex(); [BUGGY]   int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { offset += 1; }  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	126	126	1	replace	
70	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public static Date parse(String date, ParsePosition pos) throws ParseException { Exception fail = null; try { [BUGGY] [BUGGY] int offset = pos.getIndex();  int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { offset += 1; }  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	126	126	1	add	
71	[BUG] [BUGGY] int year = parseInt(date, offset, offset += 4); [FE] JsonSyntaxException [CONTEXT] public static Date parse(String date, ParsePosition pos) throws ParseException { Exception fail = null; try { int offset = pos.getIndex();  [BUGGY] int year = parseInt(date, offset, offset += 4); [BUGGY] if (checkOffset(date, offset, '-')) { offset += 1; }  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	129	129	1	replace	
72	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public static Date parse(String date, ParsePosition pos) throws ParseException { Exception fail = null; try { int offset = pos.getIndex();  [BUGGY] [BUGGY] int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { offset += 1; }  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	129	129	1	add	
73	[BUG] [BUGGY] if (checkOffset(date, offset, '-')) { [FE] JsonSyntaxException [CONTEXT] public static Date parse(String date, ParsePosition pos) throws ParseException { Exception fail = null; try { int offset = pos.getIndex();  int year = parseInt(date, offset, offset += 4); [BUGGY] if (checkOffset(date, offset, '-')) { [BUGGY] offset += 1; }  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }   [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	130	130	1	replace	
74	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public static Date parse(String date, ParsePosition pos) throws ParseException { Exception fail = null; try { int offset = pos.getIndex();  int year = parseInt(date, offset, offset += 4); [BUGGY] [BUGGY] if (checkOffset(date, offset, '-')) { offset += 1; }  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }   [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	130	130	1	add	
75	[BUG] [BUGGY] offset += 1; [FE] JsonSyntaxException [CONTEXT] public static Date parse(String date, ParsePosition pos) throws ParseException { Exception fail = null; try { int offset = pos.getIndex();  int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { [BUGGY] offset += 1; [BUGGY] }  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	131	131	1	replace	
76	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] public static Date parse(String date, ParsePosition pos) throws ParseException { Exception fail = null; try { int offset = pos.getIndex();  int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { [BUGGY] [BUGGY] offset += 1; }  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	131	131	1	add	
77	[BUG] [BUGGY] int month = parseInt(date, offset, offset += 2); [FE] JsonSyntaxException [CONTEXT] try { int offset = pos.getIndex();  int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { offset += 1; }  [BUGGY] int month = parseInt(date, offset, offset += 2); [BUGGY] if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	135	135	1	replace	
78	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] try { int offset = pos.getIndex();  int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { offset += 1; }  [BUGGY] [BUGGY] int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	135	135	1	add	
79	[BUG] [BUGGY] if (checkOffset(date, offset, '-')) { [FE] JsonSyntaxException [CONTEXT] int offset = pos.getIndex();  int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { offset += 1; }  int month = parseInt(date, offset, offset += 2); [BUGGY] if (checkOffset(date, offset, '-')) { [BUGGY] offset += 1; }  int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	136	136	1	replace	
80	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] int offset = pos.getIndex();  int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { offset += 1; }  int month = parseInt(date, offset, offset += 2); [BUGGY] [BUGGY] if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	136	136	1	add	
81	[BUG] [BUGGY] offset += 1; [FE] JsonSyntaxException [CONTEXT]  int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { offset += 1; }  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { [BUGGY] offset += 1; [BUGGY] }  int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	137	137	1	replace	
82	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT]  int year = parseInt(date, offset, offset += 4); if (checkOffset(date, offset, '-')) { offset += 1; }  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { [BUGGY] [BUGGY] offset += 1; }  int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	137	137	1	add	
83	[BUG] [BUGGY] int day = parseInt(date, offset, offset += 2); [FE] JsonSyntaxException [CONTEXT] offset += 1; }  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  [BUGGY] int day = parseInt(date, offset, offset += 2); [BUGGY]  int hour = 0; int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	141	141	1	replace	
84	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] offset += 1; }  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  [BUGGY] [BUGGY] int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	141	141	1	add	
85	[BUG] [BUGGY] int hour = 0; [FE] JsonSyntaxException [CONTEXT]  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2);  [BUGGY] int hour = 0; [BUGGY] int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day);  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	143	143	1	replace	
86	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT]  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2);  [BUGGY] [BUGGY] int hour = 0; int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day);  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	143	143	1	add	
87	[BUG] [BUGGY] int minutes = 0; [FE] JsonSyntaxException [CONTEXT]  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2);  int hour = 0; [BUGGY] int minutes = 0; [BUGGY] int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	144	144	1	replace	
88	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT]  int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2);  int hour = 0; [BUGGY] [BUGGY] int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	144	144	1	add	
89	[BUG] [BUGGY] int seconds = 0; [FE] JsonSyntaxException [CONTEXT] int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; [BUGGY] int seconds = 0; [BUGGY] int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); return calendar.getTime(); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	145	145	1	replace	
90	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] int month = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; [BUGGY] [BUGGY] int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); return calendar.getTime(); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	145	145	1	add	
91	[BUG] [BUGGY] int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  // if the value has no time component (and no time zone), we are done [FE] JsonSyntaxException [CONTEXT] if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; [BUGGY] int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time      // if the value has no time component (and no time zone), we are done [BUGGY]   boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); return calendar.getTime(); } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	replace	
92	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] if (checkOffset(date, offset, '-')) { offset += 1; }  int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; [BUGGY] [BUGGY] int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time      // if the value has no time component (and no time zone), we are done  boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); return calendar.getTime(); } [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	146	148	1	add	
93	[BUG] [BUGGY] boolean hasT = checkOffset(date, offset, 'T'); [FE] JsonSyntaxException [CONTEXT]  int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  [BUGGY] boolean hasT = checkOffset(date, offset, 'T'); [BUGGY]  if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); return calendar.getTime(); } if (hasT) {  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	149	149	1	replace	
94	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT]  int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  [BUGGY] [BUGGY] boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); return calendar.getTime(); } if (hasT) {  [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	149	149	1	add	
95	[BUG] [BUGGY] if (!hasT && (date.length() <= offset)) { [FE] JsonSyntaxException [CONTEXT] int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  boolean hasT = checkOffset(date, offset, 'T'); [BUGGY] if (!hasT && (date.length() <= offset)) { [BUGGY] Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); return calendar.getTime(); } if (hasT) {  hour = parseInt(date, offset += 1, offset += 2); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	151	151	1	replace	
96	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] int day = parseInt(date, offset, offset += 2);  int hour = 0; int minutes = 0; int seconds = 0; int milliseconds = 0; // always use 0 otherwise returned date will include millis of current time  boolean hasT = checkOffset(date, offset, 'T'); [BUGGY] [BUGGY] if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); return calendar.getTime(); } if (hasT) {  hour = parseInt(date, offset += 1, offset += 2); [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	151	151	1	add	
97	[BUG] [BUGGY] if (hasT) { [FE] JsonSyntaxException [CONTEXT]  boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); return calendar.getTime(); } [BUGGY] if (hasT) { [BUGGY]   hour = parseInt(date, offset += 1, offset += 2); if (checkOffset(date, offset, ':')) { offset += 1; } minutes = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, ':')) { offset += 1; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	158	158	1	replace	
98	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT]  boolean hasT = checkOffset(date, offset, 'T'); if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); return calendar.getTime(); } [BUGGY] [BUGGY] if (hasT) {  hour = parseInt(date, offset += 1, offset += 2); if (checkOffset(date, offset, ':')) { offset += 1; } minutes = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, ':')) { offset += 1; [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	158	158	1	add	
99	[BUG] [BUGGY] hour = parseInt(date, offset += 1, offset += 2); [FE] JsonSyntaxException [CONTEXT] if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); return calendar.getTime(); } if (hasT) {  [BUGGY] hour = parseInt(date, offset += 1, offset += 2); [BUGGY] if (checkOffset(date, offset, ':')) { offset += 1; } minutes = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, ':')) { offset += 1; }  if (date.length() > offset) { [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	161	161	1	replace	
100	[BUG] [BUGGY] [FE] JsonSyntaxException [CONTEXT] if (!hasT && (date.length() <= offset)) { Calendar calendar = new GregorianCalendar(year, month - 1, day); pos.setIndex(offset); return calendar.getTime(); } if (hasT) {  [BUGGY] [BUGGY] hour = parseInt(date, offset += 1, offset += 2); if (checkOffset(date, offset, ':')) { offset += 1; } minutes = parseInt(date, offset, offset += 2); if (checkOffset(date, offset, ':')) { offset += 1; }  if (date.length() > offset) { [CLASS] ISO8601Utils [METHOD] parse [RETURN_TYPE] Date  String date ParsePosition pos [VARIABLES] TimeZone TIMEZONE_UTC timezone tz boolean hasT IndexOutOfBoundsException e Calendar calendar char c timezoneIndicator NumberFormatException e String UTC_ID act cleaned date input msg timezoneId timezoneOffset ParseException ex Exception fail int day endOffset fraction hour milliseconds minutes month offset parseEndOffset seconds year IllegalArgumentException e ParsePosition pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	0.5	161	161	1	add	
