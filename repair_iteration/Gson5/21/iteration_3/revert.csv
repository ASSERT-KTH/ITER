projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(IndexOutOfBoundsExceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwabletz){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Exceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwablee){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(IOExceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(RuntimeExceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwablemsg){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Exceptiontz){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwablec){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwableex){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(offset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getParsePosition();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=Calendar.getInstance(timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=Calendar.getInstance();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(date,timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIndexOutOfBoundsException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(e.getMessage()==null){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwabletz,Throwablee){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(ThrowsExceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIndexOutOfBoundException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getPosition();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getTimePosition();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(ThrowsExceptiontz){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(CharacterExceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getParser();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261parseAndIgnoreWhitespace(pos,timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofNumberFormatException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIndexOutOfBoundsException||einstanceofIllegalArgumentException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException||einstanceofIndexOutOfBoundsException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofRuntimeException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofTimeZoneException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIndexOutOfBoundsException||einstanceofNumberFormatException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261parseAndIgnoreWhitespace(date,pos,timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261parseAndIgnoreWhitespace(timezoneIndicator,pos);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261parseAndIgnoreWhitespace(calendar,pos,timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261parseAndIgnoreWhitespace(date,timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261parseAndIgnoreWhitespace(pos,timezoneIndicator,act);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261parseAndIgnoreWhitespace(date,pos);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261parseAndIgnoreWhitespace(calendar,pos);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(ThrowsExceptionex){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261thrownewIllegalArgumentException("");
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(date);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(timezoneId);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(input);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(timezoneOffset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(timezoneOutdicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(date,timezoneIndicator,act);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(timezoneIndicator,date);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(date,timezoneIndicator,date);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(date,timezoneIndicator,tz);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(date,timezoneIndicator,agent);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(date,timezoneIndicator,event);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(date,timezoneIndicator,ex);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=this.calendar.getParser();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getParser(timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getParser(offset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getParser().parse(date);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getParser().setIndex(offset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(date);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(timezoneIndicator,timezoneOffset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(timezoneIndicator,tz);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(timezoneIndicator,timezoneId);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(calendar,timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=Calendar.getInstance(date);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=Calendar.getInstance(date,timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=Calendar.getInstance(timezoneIndicator,date);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=Calendar.getInstance(timezoneIndicator,timezoneOffset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=Calendar.getInstance(timezoneIndicator,tz);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=Calendar.getInstance(timezoneIndicator,timezoneId);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=Calendar.getInstance(this.timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(ThrowsExceptionpos){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(ThrowsExceptionrex){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Exceptionc){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Exceptionpos){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Exceptionex){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(RuntimeExceptiontz){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwabletz,CharacterExceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getParsePosition()+1;
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getParsePosition()-1;
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=this.calendar.getParsePosition();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getParsePosition(offset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getParsePosition(1);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Exceptionmsg){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwablecause){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwabletz,Exceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwabletz,IOExceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Exceptione,Throwabletz){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Exceptiontz,Throwablee){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwablee,Throwabletz){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwabletz,EOF_CANCEL){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){pos.setIndex(offset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){e.printStackTrace();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(!hasT){calendar.set(Calendar.MILLISECOND,milliseconds);calendar.set(Calendar.MILLISECOND,milliseconds);pos.setIndex(offset);}
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(!hasT){calendar.set(Calendar.MILLISECOND,milliseconds);calendar.set(Calendar.HOUR_OF_DAY,hour);calendar.set(Calendar.MINUTE,minutes);calendar.set(Calendar.SECOND,
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(!hasT){calendar.set(Calendar.MILLISECOND,milliseconds);calendar.set(Calendar.MINUTE,milliseconds);pos.setIndex(offset);}
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(!hasT){calendar.set(Calendar.MILLISECOND,milliseconds);calendar.set(Calendar.HOUR_OF_DAY,hour);calendar.set(Calendar.MINUTE,minutes);calendar.set(Calendar.SECOND,seconds);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(!hasT){calendar.set(Calendar.MILLISECOND,milliseconds);calendar.set(Calendar.HOUR_OF_DAY,milliseconds);pos.setIndex(offset);}
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(!hasT){calendar.set(Calendar.MILLISECOND,milliseconds);calendar.set(Calendar.HOUR_OF_DAY,hour);calendar.set(Calendar.MINUTE,minutes);calendar.set(Calendar.MONTH,
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(e.getMessage()!=null){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(e.getMessage()==null||e.getMessage()!=null){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(fail.getMessage()==null){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(e.getMessage()!=null||e.getMessage()==null){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(e.getMessage()==null||!e.isEmpty()){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(e.getMessage()==null||e.getMessage()==null){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(offset+1);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(index);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(parseEndOffset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(outOfBounds);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getInstance();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=this.timezoneIndicator.getInstance();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getInstance(timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=Calendar.getInstance(false);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getPosition()+1;
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getPosition()-1;
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getPosition(1);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=this.calendar.getPosition();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getPosition(2);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getPosition(offset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException||einstanceofIllegalArgumentException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException&&!timezoneIndicator.isEmpty()){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException&&!(einstanceofIllegalArgumentException)){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException&&!(einstanceofNumberFormatException)){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException||einstanceofTimeZoneException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException&&pos.getType()==Token.EXPR_RESULT){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getTimePosition()+1;
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getTimePosition()-1;
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getTimePosition(offset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getTimePosition(1);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getStartOffset();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getItemPosition();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getItemPosition(offset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getPreviousPosition();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261catch(ThrowsExceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getInstance(this.timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getInstance(TimeZone.UTC);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NoClassDefFoundErrore){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261parseAndIgnoreWhitespace(pos,timezoneIndicator,tz);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(ThrowsExceptionmsg){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(e.getMessage()==null||!hasT){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(fail.getMessage()!=null){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(timezoneIndicator,this);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(ThrowsExceptionre){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(TimeZone.UTC);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(timezoneIndicator+1);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIndexOutOfBoundsException&&!timezoneIndicator.isEmpty()){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIndexOutOfBoundsException&&timezoneIndicator!=null){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException&&!hasT){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException&&timezoneIndicator!=null){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalStateException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getPointerPosition();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getOffset();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(date,TimeZone.UTC);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(date,timezoneIndicator,this);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(date,timezoneIndicator,timezoneOffset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwabletz,EOF_DATE){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwabletz,EOF_Date){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getPrefix();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(e!=null){thrownewIllegalArgumentException("");}
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){pos.setTime(timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){pos.setTimeZone(timezoneIndicator);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(e!=null){thrownewIllegalStateException("");}
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){pos.setStartIndex(offset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){pos.setIndex(offset);returnCalendar.getInstance();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(IOExceptionio){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIndexOutOfBoundException||einstanceofIllegalArgumentException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NumberFormatExceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.parse(date);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getParserStorage();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getSecondPosition();
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NoClassDefFoundExceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(e.getMessage()==null&&!e.isEmpty()){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwabletz,Objecte){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(Throwabletz,EOF_DECEMBER){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException&&!((IllegalArgumentException)e).isSynthetic()){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException&&!((IllegalArgumentException)e).isEmpty()){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException&&einstanceofIllegalArgumentException){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException&&!((IllegalArgumentException)e).isInvalid()){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIllegalArgumentException&&!((IllegalArgumentException)e).equals(timezoneIndicator)){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(date,timezoneIndicator,c);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261pos.setIndex(outset);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(!hasT){calendar.set(Calendar.DATE,0);calendar.set(Calendar.HOUR_OF_DAY,hour);calendar.set(Calendar.MILLISECOND,milliseconds);pos.setIndex(offset);}
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(!hasT){calendar.set(Calendar.DATE,0);calendar.set(Calendar.HOUR_OF_DAY,hour);calendar.set(Calendar.MINUTE,minutes);calendar.set(Calendar.MILLISECOND,milliseconds);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(!hasT){calendar.set(Calendar.MILLISECOND,milliseconds);calendar.set(Calendar.MILLISECOND,milliseconds);pos.setIndex(offset);returnCalendar.getInstance();}
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(!hasT){calendar.set(Calendar.MILLISECOND,milliseconds);calendar.set(Calendar.MILLISECOND,milliseconds);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(NullPointerExceptione){if(!hasT){calendar.set(Calendar.DATE,0);calendar.set(Calendar.MILLISECOND,milliseconds);pos.setIndex(offset);}
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=newParsePosition(timezoneIndicator,calendar);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIndexOutOfBoundsException&&!((IndexOutOfBoundsException)e).isSupported()){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIndexOutOfBoundsException&&!((IndexOutOfBoundsException)e).isEmpty()){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}elseif(einstanceofIndexOutOfBoundsException&&!((IndexOutOfBoundsException)e).isSynthetic()){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=Calendar.getInstance(timezoneIndicator,calendar);
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261}catch(StringExceptione){
projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java261ParsePositionpos=calendar.getInstance(TimeZone.UTC,timezoneIndicator);
