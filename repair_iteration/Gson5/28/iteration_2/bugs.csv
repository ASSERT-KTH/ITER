bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace();  ex.printStackTrace();  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.printStackTrace();    ex.printStackTrace();	  	compilable	  [FE]  JsonSyntaxException  	5	1	add
2	[BUG]  [BUGGY]  ex.printStackTrace();  ex.printStackTrace();  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace();  ex.printStackTrace();  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();    ex.printStackTrace();	  	compilable	  [FE]  JsonSyntaxException  	5	1	add
3	[BUG]  [BUGGY]  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
4	[BUG]  [BUGGY]  ex.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();    if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	5	None	add
5	[BUG]  [BUGGY]  ex.printStackTrace();  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace();  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();    if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
6	[BUG]  [BUGGY]  ex.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]            JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();    if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	5	None	add
7	[BUG]  [BUGGY]  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
8	[BUG]  [BUGGY]  ex.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  hasT  [FE]                JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();    if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	5	None	add
9	[BUG]  [BUGGY]  ex.initCause(date,  msg);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  msg);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  msg);	  ex.initCause(msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	1	None	replace
10	[BUG]  [BUGGY]  ex.initCause(msg,  date);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(msg,  date);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  date);	  ex.initCause(msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	1	None	replace
11	[BUG]  [BUGGY]  ex.initCause(msg,  pos);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]            JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(msg,  pos);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  pos);	  ex.initCause(msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	1	None	replace
12	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  msg);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(timezoneIndicator,  msg);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  msg);	  ex.initCause(msg);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	1	None	replace
13	[BUG]  [BUGGY]  ex.initCause(fail,  msg);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(fail,  msg);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(fail,  msg);	  ex.initCause(msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	1	None	replace
14	[BUG]  [BUGGY]  ex.initCause(e,  msg);  [CE]  cannot  find  symbol  e  [FE]                  JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(e,  msg);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(e,  msg);	  ex.initCause(msg);    	non-compiled	[CE]  cannot  find  symbol  e	1	None	replace
15	[BUG]  [BUGGY]  msg.initCause(ex);  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  msg.initCause(ex);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	msg.initCause(ex);	  ex.initCause(msg);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
16	[BUG]  [BUGGY]  ex.initCause(timezoneOffset);  [CE]  cannot  find  symbol  timezoneOffset  [FE]          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(timezoneOffset);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneOffset);	  ex.initCause(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	2	None	replace
17	[BUG]  [BUGGY]  ex.initCause(act);  [CE]  cannot  find  symbol  act  [FE]            JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(act);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(act);	  ex.initCause(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  act	2	None	replace
18	[BUG]  [BUGGY]  ex.initCause(date,  pos);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  pos);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  pos);	  ex.initCause(fail,    pos);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	7	None	replace
19	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  pos);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(timezoneIndicator,  pos);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  pos);	  ex.initCause(fail,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	7	None	replace
20	[BUG]  [BUGGY]  ex.initCause(fail,  date,  pos);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                      JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(fail,  date,  pos);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(fail,  date,  pos);	  ex.initCause(fail,    pos);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	7	None	replace
21	[BUG]  [BUGGY]  ex.initCause(msg,  date,  pos);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(msg,  date,  pos);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  date,  pos);	  ex.initCause(fail,    pos);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	7	None	replace
22	[BUG]  [BUGGY]  ex.initCause(desc,  pos);  [CE]  cannot  find  symbol  desc  [FE]                          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(desc,  pos);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(desc,  pos);	  ex.initCause(fail,    pos);    	non-compiled	[CE]  cannot  find  symbol  desc	7	None	replace
23	[BUG]  [BUGGY]  initCause(msg,  pos);  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  initCause(msg,  pos);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	initCause(msg,  pos);	  ex.initCause(fail,    pos);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
24	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
25	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	      	non-compiled	[CE]  cannot  find  symbol	9	None	replace
26	[BUG]  [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	      	non-compiled	[CE]  cannot  find  symbol  hasT	9	None	replace
27	[BUG]  [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  hasT  [FE]          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	      	non-compiled	[CE]  cannot  find  symbol  hasT	9	None	replace
28	[BUG]  [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(e);  }  [CE]  cannot  find  symbol  hasT  [FE]            JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(e);  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(e);  }	      	non-compiled	[CE]  cannot  find  symbol  hasT	9	None	replace
29	[BUG]  [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  return  ex;  }  [CE]  cannot  find  symbol  hasT  [FE]              JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  return  ex;  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  return  ex;  }	      	non-compiled	[CE]  cannot  find  symbol  hasT	9	None	replace
30	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex!=  null)  {  ex.printStackTrace();  }	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
31	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.printStackTrace();  }	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
32	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace(System.err);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.printStackTrace(System.err);	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
33	[BUG]  [BUGGY]  ex.printStackTrace(System.err);  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace(System.err);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(System.err);	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
34	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null)  {  ex.printStackTrace();  }	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
35	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.printStackTrace();  }	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
36	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg  ==  null)  {  ex.printStackTrace();  }	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
37	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null)  {  ex.printStackTrace();  }	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
38	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
39	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
40	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
41	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
42	[BUG]  [BUGGY]  ex.initCause(error);  [CE]  cannot  find  symbol  error  [FE]            JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(error);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(error);	  ex.initCause(e);    	non-compiled	[CE]  cannot  find  symbol  error	3	None	replace
43	[BUG]  [BUGGY]  ex.initCause(desc);  [CE]  cannot  find  symbol  desc  [FE]              JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(desc);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(desc);	  ex.initCause(e);    	non-compiled	[CE]  cannot  find  symbol  desc	3	None	replace
44	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(ex);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.initCause(ex);	  ex.initCause(e);    	compilable	  [FE]  IllegalArgumentException  	3	1	replace
45	[BUG]  [BUGGY]  ex.initCause(ex);  [FE]  IllegalArgumentException  [FE]                JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(ex);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(ex);	  ex.initCause(e);    	compilable	  [FE]  IllegalArgumentException  	3	1	replace
46	[BUG]  [BUGGY]  ex.initCause(date,  validate);  [CE]  cannot  find  symbol  validate  [FE]              JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  validate);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  validate);	  ex.initCause(fail,    date);    	non-compiled	[CE]  cannot  find  symbol  validate	4	None	replace
47	[BUG]  [BUGGY]  ex.initCause(date,  validateFail);  [CE]  cannot  find  symbol  validateFail  [FE]                JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  validateFail);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  validateFail);	  ex.initCause(fail,    date);    	non-compiled	[CE]  cannot  find  symbol  validateFail	4	None	replace
48	[BUG]  [BUGGY]  ex.initCause(date,  validateDate);  [CE]  cannot  find  symbol  validateDate  [FE]                  JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  validateDate);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  validateDate);	  ex.initCause(fail,    date);    	non-compiled	[CE]  cannot  find  symbol  validateDate	4	None	replace
49	[BUG]  [BUGGY]  ex.initCause(date,  date);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  date);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  date);	  ex.initCause(fail,    date);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	4	None	replace
50	[BUG]  [BUGGY]  ex.initCause(date,  filter);  [CE]  cannot  find  symbol  filter  [FE]                      JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  filter);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  filter);	  ex.initCause(fail,    date);    	non-compiled	[CE]  cannot  find  symbol  filter	4	None	replace
51	[BUG]  [BUGGY]  ex.initCause(date,  show);  [CE]  cannot  find  symbol  show  [FE]                        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  show);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  show);	  ex.initCause(fail,    date);    	non-compiled	[CE]  cannot  find  symbol  show	4	None	replace
52	[BUG]  [BUGGY]  ex.initCause(action);  [CE]  cannot  find  symbol  action  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(action);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(action);	  ex.initCause(timezoneId);    	non-compiled	[CE]  cannot  find  symbol  action	12	None	replace
53	[BUG]  [BUGGY]  ex.initCause(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  timezoneIndicator);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timezoneIndicator);	  ex.initCause(date);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	10	None	replace
54	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(timezoneIndicator,  date);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  date);	  ex.initCause(date);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	10	None	replace
55	[BUG]  [BUGGY]      JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]      JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  pos.getIndex());  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	        JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
56	[BUG]  [BUGGY]  ExitCause.initCause(date,  pos);  [CE]  cannot  find  symbol  ExitCause  [FE]                  JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ExitCause.initCause(date,  pos);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause.initCause(date,  pos);	  ex.initCause(fail,    pos);    	non-compiled	[CE]  cannot  find  symbol  ExitCause	7	None	replace
57	[BUG]  [BUGGY]  ex.initCause(tz);  [CE]  cannot  find  symbol  tz  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(tz);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(tz);	  ex.initCause(timezoneId);    	non-compiled	[CE]  cannot  find  symbol  tz	12	None	replace
58	[BUG]  [BUGGY]      if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.setTimeZone(timezoneIndicator);  }  [CE]  cannot  find  symbol  hasT  [FE]    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]      if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.setTimeZone(timezoneIndicator);  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	        if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.setTimeZone(timezoneIndicator);  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	8	None	add
59	[BUG]  [BUGGY]      JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  timezoneIndicator,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]      JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  timezoneIndicator,  pos.getIndex());  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	        JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  timezoneIndicator,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
60	[BUG]  [BUGGY]  ex.initCause(date,  TimeZone.UTC);  [CE]  cannot  find  symbol  UTC  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  TimeZone.UTC);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  TimeZone.UTC);	  ex.initCause(date);    	non-compiled	[CE]  cannot  find  symbol  UTC	10	None	replace
61	[BUG]  [BUGGY]  ex.initCause(date,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  this);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  this);	  ex.initCause(date);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	10	None	replace
62	[BUG]  [BUGGY]  ex.initCause(date,  timezoneId);  [CE]  cannot  find  symbol  timezoneId  [FE]            JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  timezoneId);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timezoneId);	  ex.initCause(date);    	non-compiled	[CE]  cannot  find  symbol  timezoneId	10	None	replace
63	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	5	1	add
64	[BUG]  [BUGGY]  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	5	1	add
65	[BUG]  [BUGGY]  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
66	[BUG]  [BUGGY]  ex.initCause(date,  fail);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]              JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  fail);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  fail);	  ex.initCause(fail,    date);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	4	None	replace
67	[BUG]  [BUGGY]  ex.initCause(date,  column);  [CE]  cannot  find  symbol  column  [FE]                JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  column);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  column);	  ex.initCause(fail,    date);    	non-compiled	[CE]  cannot  find  symbol  column	4	None	replace
68	[BUG]  [BUGGY]  ex.initCause(date,  freeze);  [CE]  cannot  find  symbol  freeze  [FE]                  JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  freeze);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  freeze);	  ex.initCause(fail,    date);    	non-compiled	[CE]  cannot  find  symbol  freeze	4	None	replace
69	[BUG]  [BUGGY]  ex.initCause(date,  enable);  [CE]  cannot  find  symbol  enable  [FE]                    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  enable);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  enable);	  ex.initCause(fail,    date);    	non-compiled	[CE]  cannot  find  symbol  enable	4	None	replace
70	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  ex.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
71	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);	  ex.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
72	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());	  ex.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
73	[BUG]  [BUGGY]  ex.initCause(timezoneOutdicator);  [CE]  cannot  find  symbol  timezoneOutdicator  [FE]            JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(timezoneOutdicator);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneOutdicator);	  ex.initCause(e);    	non-compiled	[CE]  cannot  find  symbol  timezoneOutdicator	3	None	replace
74	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(msg);  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(msg!=  null)  {  ex.initCause(msg);  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(msg);  }	  ex.initCause(msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	1	None	replace
75	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(msg!=  null)  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ex.initCause(msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	1	None	replace
76	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]            JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(msg!=  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }	  ex.initCause(msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	1	None	replace
77	[BUG]  [BUGGY]  ex.initCause(TimeZone.getDefault());  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(TimeZone.getDefault());  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(TimeZone.getDefault());	  ex.initCause(this);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	11	None	replace
78	[BUG]  [BUGGY]      ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]      ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	        ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	8	None	add
79	[BUG]  [BUGGY]      if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  }  [CE]  cannot  find  symbol  hasT  [FE]      JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]      if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	        if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	8	None	add
80	[BUG]  [BUGGY]      if(msg  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]      if(msg  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	        if(msg  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
81	[BUG]  [BUGGY]  ex.initCause(date,  template);  [CE]  cannot  find  symbol  template  [FE]              JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  template);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  template);	  ex.initCause(fail,    date);    	non-compiled	[CE]  cannot  find  symbol  template	4	None	replace
82	[BUG]  [BUGGY]  ex.initCause(date,  collapse);  [CE]  cannot  find  symbol  collapse  [FE]                JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  ex.initCause(date,  collapse);  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  collapse);	  ex.initCause(fail,    date);    	non-compiled	[CE]  cannot  find  symbol  collapse	4	None	replace
83	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.printStackTrace();  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  ex.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
84	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  no  suitable  method  found  for  println(String,int)  [FE]      JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  ex.printStackTrace();    	non-compiled	[CE]  no  suitable  method  found  for  println(String,int)	6	None	replace
85	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  return  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  incompatible  types  [FE]        JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  return  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.printStackTrace();  }  else  {  return  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    	non-compiled	[CE]  incompatible  types	6	None	replace
86	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  }	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
87	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  ParseException  ex  =  new  ParseException(   "Failed  to  parse  date  [   "  +  input  +     "]:     "  +  msg,  pos.getIndex());    [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  }  [BUGGY]    throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  }	  ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
