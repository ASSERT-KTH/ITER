bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  timezoneIndicator,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  timezoneIndicator,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  timezoneIndicator,  pos.getIndex());	          JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    timezoneIndicator,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
2	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());	          JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    timezoneIndicator,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
3	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  timezoneIndicator,  timezoneIndicator.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  timezoneIndicator,  timezoneIndicator.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  timezoneIndicator,  timezoneIndicator.getIndex());	          JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    timezoneIndicator,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
4	[BUG]  [BUGGY]  ex.initCause(date,  timezoneOffset);  [CE]  cannot  find  symbol  timezoneOffset  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  timezoneOffset);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timezoneOffset);	  ex.initCause(date,    collapse);    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	82	None	replace
5	[BUG]  [BUGGY]  ex.initCause(date,  null);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  null);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  null);	  ex.initCause(date,    collapse);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	82	None	replace
6	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	75	None	replace
7	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  date);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  date);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(msg,  date);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	75	None	replace
8	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null)  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	75	None	replace
9	[BUG]  [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null  ||  msg.isEmpty())  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	75	None	replace
10	[BUG]  [BUGGY]  initCause(msg,  ex);  [CE]  cannot  find  symbol  [FE]                                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  initCause(msg,  ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	initCause(msg,  ex);	  initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
11	[BUG]  [BUGGY]  initCause(msg,  date);  [CE]  cannot  find  symbol  [FE]                                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  initCause(msg,  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	initCause(msg,  date);	  initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
12	[BUG]  [BUGGY]  initCause(msg,  pos,  ex);  [CE]  cannot  find  symbol  [FE]                                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  initCause(msg,  pos,  ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	initCause(msg,  pos,  ex);	  initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
13	[BUG]  [BUGGY]  initMillis(msg,  pos);  [CE]  cannot  find  symbol  [FE]                                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  initMillis(msg,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	initMillis(msg,  pos);	  initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
14	[BUG]  [BUGGY]  initCause(ex,  pos);  [CE]  cannot  find  symbol  [FE]                                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  initCause(ex,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	initCause(ex,  pos);	  initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
15	[BUG]  [BUGGY]  init(msg,  pos,  ex);  [CE]  cannot  find  symbol  [FE]                                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  init(msg,  pos,  ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	init(msg,  pos,  ex);	  initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
16	[BUG]  [BUGGY]  initCause(input,  pos);  [CE]  cannot  find  symbol  [FE]                                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  initCause(input,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	initCause(input,  pos);	  initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
17	[BUG]  [BUGGY]  if(input!=  null)  {  ex.printStackTrace();  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(input!=  null)  {  ex.printStackTrace();  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(input!=  null)  {  ex.printStackTrace();  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    JsonSyntaxException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
18	[BUG]  [BUGGY]  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    JsonSyntaxException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
19	[BUG]  [BUGGY]  if(fail!=  null)  {  ex.printStackTrace();  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(fail!=  null)  {  ex.printStackTrace();  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(fail!=  null)  {  ex.printStackTrace();  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    JsonSyntaxException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
20	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    JsonSyntaxException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
21	[BUG]  [BUGGY]  ex.initCause(date,  hasT);  [CE]  cannot  find  symbol  hasT  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  hasT);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  hasT);	  ex.initCause(date,    validateFail);    	non-compiled	[CE]  cannot  find  symbol  hasT	47	None	replace
22	[BUG]  [BUGGY]  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  ex.printStackTrace();    if(ex!=    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
23	[BUG]  [BUGGY]  parseDate.printStackTrace();  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  parseDate  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseDate.printStackTrace();  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseDate.printStackTrace();  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  ex.printStackTrace();    if(ex!=    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  parseDate	5	None	replace
24	[BUG]  [BUGGY]  if(input!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(input!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(input!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  ex.printStackTrace();    if(ex!=    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
25	[BUG]  [BUGGY]  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  ex.printStackTrace();    if(ex!=    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
26	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();	  ex.printStackTrace();    if(ex!=    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
27	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    ex.printStackTrace();    }    if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	86	1	add
28	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    ex.printStackTrace();    }    if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	86	1	add
29	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }  if(ex  ==  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    ex.printStackTrace();    }    if(ex  ==  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	86	1	add
30	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }  if(ex  ==  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }  if(ex  ==  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    ex.printStackTrace();    }    if(ex  ==  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	86	1	add
31	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +  [CE]  ')'  expected  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    ex.printStackTrace();    }    if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +	  	non-compiled	[CE]  ')'  expected	86	None	add
32	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());	          JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
33	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());	          JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
34	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());	          JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
35	[BUG]  [BUGGY]  ex.initCause(date,  tz);  [CE]  cannot  find  symbol  tz  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  tz);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  tz);	  ex.initCause(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  tz	53	None	replace
36	[BUG]  [BUGGY]  ex.initCause(date,  msg,  pos);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  msg,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  msg,  pos);	  ex.initCause(date,    msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	9	None	replace
37	[BUG]  [BUGGY]  ex.initCause(date,  timezoneIndicator,  msg);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  timezoneIndicator,  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timezoneIndicator,  msg);	  ex.initCause(date,    msg);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	9	None	replace
38	[BUG]  [BUGGY]  ex.initCause(date,  msg,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  msg,  timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  msg,  timezoneIndicator);	  ex.initCause(date,    msg);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	9	None	replace
39	[BUG]  [BUGGY]  ex.initCause(date,  pos,  msg);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  pos,  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  pos,  msg);	  ex.initCause(date,    msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	9	None	replace
40	[BUG]  [BUGGY]  ex.initCause(date,  msg,  date);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  msg,  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  msg,  date);	  ex.initCause(date,    msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	9	None	replace
41	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  date,  msg);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneIndicator,  date,  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  date,  msg);	  ex.initCause(date,    msg);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	9	None	replace
42	[BUG]  [BUGGY]  if(msg  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	          if(msg    ==    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
43	[BUG]  [BUGGY]  if(msg!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	          if(msg    ==    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
44	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex()));  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex()));  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex()));	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    return    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
45	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportError( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  Thread.currentThread().getContextClassLoader().reportError( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	Thread.currentThread().getContextClassLoader().reportError( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    return    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
46	[BUG]  [BUGGY]  ex.initCause(date,  TimeZone.UTC,  timezoneIndicator);  [CE]  cannot  find  symbol  UTC  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  TimeZone.UTC,  timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  TimeZone.UTC,  timezoneIndicator);	  ex.initCause(date,    TimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  UTC	60	None	replace
47	[BUG]  [BUGGY]  ex.initCause(date,  TimeZone.UTC,  msg);  [CE]  cannot  find  symbol  UTC  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  TimeZone.UTC,  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  TimeZone.UTC,  msg);	  ex.initCause(date,    TimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  UTC	60	None	replace
48	[BUG]  [BUGGY]  ex.initCause(date,  TimeZone.UTC,  pos);  [CE]  cannot  find  symbol  UTC  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  TimeZone.UTC,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  TimeZone.UTC,  pos);	  ex.initCause(date,    TimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  UTC	60	None	replace
49	[BUG]  [BUGGY]  ex.initCause(date,  TimeZone.UTC,  act);  [CE]  cannot  find  symbol  UTC  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  TimeZone.UTC,  act);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  TimeZone.UTC,  act);	  ex.initCause(date,    TimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  UTC	60	None	replace
50	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  TimeZone.UTC);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneIndicator,  TimeZone.UTC);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  TimeZone.UTC);	  ex.initCause(date,    TimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	60	None	replace
51	[BUG]  [BUGGY]  ex.initCause(date,  TimeZone.UTC,  hasT);  [CE]  cannot  find  symbol  UTC  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  TimeZone.UTC,  hasT);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  TimeZone.UTC,  hasT);	  ex.initCause(date,    TimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  UTC	60	None	replace
52	[BUG]  [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        if(ex!=    null)    {    ex.printStackTrace();    }    if(ex!=  null)  {  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
53	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.printStackTrace();        if(ex!=    null)    {    ex.printStackTrace();    }    ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	63	1	add
54	[BUG]  [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        if(ex!=    null)    {    ex.printStackTrace();    }    ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	63	1	add
55	[BUG]  [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  if(ex  ==  null)  {  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  if(ex  ==  null)  {  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        if(ex!=    null)    {    ex.printStackTrace();    }    if(ex  ==  null)  {  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
56	[BUG]  [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  if(ex  ==  null)  {  ex.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  if(ex  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        if(ex!=    null)    {    ex.printStackTrace();    }    if(ex!=  null)  {  ex.printStackTrace();  if(ex  ==  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
57	[BUG]  [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        if(ex!=    null)    {    ex.printStackTrace();    }    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
58	[BUG]  [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        if(ex!=    null)    {    ex.printStackTrace();    }    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	63	None	add
59	[BUG]  [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  if(ex  >=  null)  {  ex.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  if(ex  >=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        if(ex!=    null)    {    ex.printStackTrace();    }    if(ex!=  null)  {  ex.printStackTrace();  if(ex  >=  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
60	[BUG]  [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  hasT  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }	  if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  cannot  find  symbol  hasT	27	None	replace
61	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg  ==  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
62	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
63	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
64	[BUG]  [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
65	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg  ==  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
66	[BUG]  [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
67	[BUG]  [BUGGY]  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [CE]  illegal  start  of  type  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
68	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
69	[BUG]  [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null  ||  msg.isEmpty())  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
70	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
71	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
72	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
73	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
74	[BUG]  [BUGGY]  if(!hasT)  {  ex.printStackTrace();  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  ex.printStackTrace();  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  hasT	2	None	replace
75	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
76	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
77	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
78	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
79	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  throw  ex;  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  throw  ex;  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
80	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  throw  ex;  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  throw  ex;  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  throw  ex;  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
81	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  throw  ex;  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  throw  ex;  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
82	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  throw  ex;  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  throw  ex;  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  throw  ex;  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
83	[BUG]  [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  return  ex;  }  [CE]  cannot  find  symbol  hasT  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  return  ex;  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  return  ex;  }	  if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    return    ex;    }    	non-compiled	[CE]  cannot  find  symbol  hasT	29	None	replace
84	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  return  ex;  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  return  ex;  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  return  ex;	  if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    return    ex;    }    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
85	[BUG]  [BUGGY]  if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  return  ex;  }  [CE]  cannot  find  symbol  hasT  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  return  ex;  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  return  ex;  }	  if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    return    ex;    }    	non-compiled	[CE]  cannot  find  symbol  hasT	29	None	replace
86	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	35	1	replace
87	[BUG]  [BUGGY]  if(msg!=  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	35	1	replace
88	[BUG]  [BUGGY]  ex.initCause(date,  timezoneIndicator,  fail);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  timezoneIndicator,  fail);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timezoneIndicator,  fail);	  ex.initCause(date,    fail);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	66	None	replace
89	[BUG]  [BUGGY]  ex.initCause(date,  pos,  fail);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  pos,  fail);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  pos,  fail);	  ex.initCause(date,    fail);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	66	None	replace
90	[BUG]  [BUGGY]  ex.initCause(date,  msg,  fail);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  msg,  fail);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  msg,  fail);	  ex.initCause(date,    fail);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	66	None	replace
91	[BUG]  [BUGGY]  ex.initCause(date,  date,  msg);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  date,  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  date,  msg);	  ex.initCause(date,    fail);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	66	None	replace
92	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  date,  fail);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneIndicator,  date,  fail);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  date,  fail);	  ex.initCause(date,    fail);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	66	None	replace
93	[BUG]  [BUGGY]  ex.initCause(timezoneOffset,  pos);  [CE]  cannot  find  symbol  timezoneOffset  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneOffset,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneOffset,  pos);	  ex.initCause(timezoneIndicator,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	19	None	replace
94	[BUG]  [BUGGY]  ex.initCause(timezoneId,  pos);  [CE]  cannot  find  symbol  timezoneId  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneId,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneId,  pos);	  ex.initCause(timezoneIndicator,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneId	19	None	replace
95	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  this);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneIndicator,  this);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  this);	  ex.initCause(date,    this);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	61	None	replace
96	[BUG]  [BUGGY]  ex.initCause(date,  e);  [CE]  cannot  find  symbol  e  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  e);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  e);	  ex.initCause(date,    this);    	non-compiled	[CE]  cannot  find  symbol  e	61	None	replace
97	[BUG]  [BUGGY]  ex.initCause(timezone);  [CE]  cannot  find  symbol  timezone  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezone);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezone);	  ex.initCause(tz);    	non-compiled	[CE]  cannot  find  symbol  timezone	57	None	replace
98	[BUG]  [BUGGY]  ex.initCause(date,  timezone);  [CE]  cannot  find  symbol  timezone  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  timezone);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timezone);	  ex.initCause(timezoneIndicator,    date);    	non-compiled	[CE]  cannot  find  symbol  timezone	54	None	replace
99	[BUG]  [BUGGY]  ex.initCause(timezoneId,  date);  [CE]  cannot  find  symbol  timezoneId  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneId,  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneId,  date);	  ex.initCause(timezoneIndicator,    date);    	non-compiled	[CE]  cannot  find  symbol  timezoneId	54	None	replace
100	[BUG]  [BUGGY]  ex.initCause(timezoneOffset,  date);  [CE]  cannot  find  symbol  timezoneOffset  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneOffset,  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneOffset,  date);	  ex.initCause(timezoneIndicator,    date);    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	54	None	replace
101	[BUG]  [BUGGY]  ex.initCause(msg,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  timezoneIndicator);	  ex.initCause(e,    msg);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	14	None	replace
102	[BUG]  [BUGGY]  ex.initCause(msg,  e);  [CE]  cannot  find  symbol  e  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  e);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  e);	  ex.initCause(e,    msg);    	non-compiled	[CE]  cannot  find  symbol  e	14	None	replace
103	[BUG]  [BUGGY]  ExitCause.initCause(ex,  pos);  [CE]  cannot  find  symbol  ExitCause  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause.initCause(ex,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause.initCause(ex,  pos);	  ExitCause.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  ExitCause	56	None	replace
104	[BUG]  [BUGGY]  ExitCause.initCause(ex);  [CE]  cannot  find  symbol  ExitCause  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause.initCause(ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause.initCause(ex);	  ExitCause.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  ExitCause	56	None	replace
105	[BUG]  [BUGGY]  ExitCause.initCause(ex,  date);  [CE]  cannot  find  symbol  ExitCause  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause.initCause(ex,  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause.initCause(ex,  date);	  ExitCause.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  ExitCause	56	None	replace
106	[BUG]  [BUGGY]  ExitCause.initCause(fail,  pos);  [CE]  cannot  find  symbol  ExitCause  [FE]                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause.initCause(fail,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause.initCause(fail,  pos);	  ExitCause.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  ExitCause	56	None	replace
107	[BUG]  [BUGGY]  ExitCause.initCause(msg,  pos);  [CE]  cannot  find  symbol  ExitCause  [FE]                              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause.initCause(msg,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause.initCause(msg,  pos);	  ExitCause.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  ExitCause	56	None	replace
108	[BUG]  [BUGGY]  ExitCause.initCause(date,  ex);  [CE]  cannot  find  symbol  ExitCause  [FE]                                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause.initCause(date,  ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause.initCause(date,  ex);	  ExitCause.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  ExitCause	56	None	replace
109	[BUG]  [BUGGY]  ExitCause.initCause(fail,  date);  [CE]  cannot  find  symbol  ExitCause  [FE]                                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause.initCause(fail,  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause.initCause(fail,  date);	  ExitCause.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  ExitCause	56	None	replace
110	[BUG]  [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  hasT	26	None	replace
111	[BUG]  [BUGGY]  if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  hasT	26	None	replace
112	[BUG]  [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  }  [CE]  cannot  find  symbol  hasT  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  }	          if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.initCause(ex);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	79	None	replace
113	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);	          if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.initCause(ex);    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
114	[BUG]  [BUGGY]  if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  }  [CE]  cannot  find  symbol  hasT  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  }	          if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.initCause(ex);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	79	None	replace
115	[BUG]  [BUGGY]  parseDate.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  parseDate  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseDate.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseDate.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  parseDate	3	None	replace
116	[BUG]  [BUGGY]  if(ex  instanceof  JsonSyntaxException)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex  instanceof  JsonSyntaxException)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex  instanceof  JsonSyntaxException)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
117	[BUG]  [BUGGY]  parseDate.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [CE]  cannot  find  symbol  parseDate  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseDate.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseDate.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  parseDate	3	None	replace
118	[BUG]  [BUGGY]  parseDate.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  parseDate  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseDate.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseDate.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  parseDate	3	None	replace
119	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex!=    null)    {    ex.printStackTrace();    }    if(ex!=  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
120	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=    null)    {    ex.printStackTrace();    }    if(ex!=  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
121	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  if(ex  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex!=    null)    {    ex.printStackTrace();    }    if(ex  ==  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
122	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  if(ex  ==  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  if(ex  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=    null)    {    ex.printStackTrace();    }    if(ex  ==  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	30	1	add
123	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  if(ex  >=  null)  {  ex.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  if(ex  >=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=    null)    {    ex.printStackTrace();    }    if(ex  >=  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	30	None	add
124	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  If(ex!=  null)  {  ex.printStackTrace();  }  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  If(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=    null)    {    ex.printStackTrace();    }    If(ex!=  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  ';'  expected	30	None	add
125	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  if(ex  >>  null)  {  ex.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  if(ex  >>  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=    null)    {    ex.printStackTrace();    }    if(ex  >>  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	30	None	add
126	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null)  {  ex.printStackTrace(System.err);  }	  ex.printStackTrace(System.err);    	compilable	  [FE]  JsonSyntaxException  	33	1	replace
127	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.printStackTrace(System.err);  }	  ex.printStackTrace(System.err);    	compilable	  [FE]  JsonSyntaxException  	33	1	replace
128	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  method  found  for  println(String,int)  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  ex.printStackTrace(System.err);    	non-compiled	[CE]  no  suitable  method  found  for  println(String,int)	33	None	replace
129	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.print  [CE]  not  a  statement  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.print  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.print	  ex.printStackTrace(System.err);    	non-compiled	[CE]  not  a  statement	33	None	replace
130	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  ex.printStackTrace(System.err);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
131	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex()  [CE]  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex()  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex()	  ex.printStackTrace(System.err);    	non-compiled	[CE]  	33	None	replace
132	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace(  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace(  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.printStackTrace(System.err);  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace(	  ex.printStackTrace(System.err);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
133	[BUG]  [BUGGY]  ||  ex!=  null)  {  ex.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ||  ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	||  ex!=  null)  {  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
134	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex  ==  null)  {  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	31	1	replace
135	[BUG]  [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex  ==  null)  {  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	31	1	replace
136	[BUG]  [BUGGY]  ExitUtils.printStackTrace(ex);  [CE]  cannot  find  symbol  ExitUtils  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitUtils.printStackTrace(ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitUtils.printStackTrace(ex);	  if(ex!=    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  ExitUtils	31	None	replace
137	[BUG]  [BUGGY]  [FE]    [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	Thread.currentThread().interrupt();	  if(ex!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]    	31	1	replace
138	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [FE]    [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	Thread.currentThread().interrupt();	  if(ex!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]    	31	1	replace
139	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	87	1	replace
140	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	87	1	replace
141	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	87	1	replace
142	[BUG]  [BUGGY]  if(ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	87	1	replace
143	[BUG]  [BUGGY]  ||  ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ||  ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	||  ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    ex.printStackTrace();    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
144	[BUG]  [BUGGY]  pos.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  pos.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	pos.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    timezoneIndicator    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
145	[BUG]  [BUGGY]  parseDate.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  parseDate  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseDate.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseDate.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    timezoneIndicator    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  parseDate	65	None	replace
146	[BUG]  [BUGGY]  parse.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  parse  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parse.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parse.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    timezoneIndicator    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  parse	65	None	replace
147	[BUG]  [BUGGY]  if(ex  instanceof  JsonSyntaxException)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex  instanceof  JsonSyntaxException)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex  instanceof  JsonSyntaxException)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    timezoneIndicator    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
148	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  ex.initCause(ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.initCause(ex);    ex.initCause(ex);	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
149	[BUG]  [BUGGY]  ex.initCause(ex);  ex.initCause(ex);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  ex.initCause(ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(ex);    ex.initCause(ex);	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
150	[BUG]  [BUGGY]  ex.initCause(ex);  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(ex);    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
151	[BUG]  [BUGGY]  ex.initCause(ex);  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(ex);    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
152	[BUG]  [BUGGY]  ex.initCause(ex);  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(ex);    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
153	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  date);  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  date);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(msg,  date);  }	  if(msg!=    null)    {    ex.initCause(msg);    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	74	None	replace
154	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.initCause(msg);  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.initCause(msg);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.initCause(msg);  }	  if(msg!=    null)    {    ex.initCause(msg);    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	74	None	replace
155	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(date,  msg);  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(date,  msg);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(date,  msg);  }	  if(msg!=    null)    {    ex.initCause(msg);    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	74	None	replace
156	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(date,  pos);  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(date,  pos);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(date,  pos);  }	  if(msg!=    null)    {    ex.initCause(msg);    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	74	None	replace
157	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  timezoneIndicator);  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  timezoneIndicator);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(msg,  timezoneIndicator);  }	  if(msg!=    null)    {    ex.initCause(msg);    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	74	None	replace
158	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.err);  ex.printStackTrace(System.err);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.printStackTrace(System.err);    ex.printStackTrace(System.err);	  	compilable	  [FE]  JsonSyntaxException  	32	1	add
159	[BUG]  [BUGGY]  ex.printStackTrace(System.err);  ex.printStackTrace(System.err);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.err);  ex.printStackTrace(System.err);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(System.err);    ex.printStackTrace(System.err);	  	compilable	  [FE]  JsonSyntaxException  	32	1	add
160	[BUG]  [BUGGY]  ex.printStackTrace(System.err);  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.err);  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(System.err);    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
161	[BUG]  [BUGGY]  ex.printStackTrace(System.err);  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace(System.err);  }  [CE]  cannot  find  symbol  hasT  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.err);  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace(System.err);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(System.err);    if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace(System.err);  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	32	None	add
162	[BUG]  [BUGGY]  ex.printStackTrace(System.err);  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace(System.err);  }  [CE]  cannot  find  symbol  hasT  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.err);  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace(System.err);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(System.err);    if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace(System.err);  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	32	None	add
163	[BUG]  [BUGGY]  ex.printStackTrace(System.err);  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace(System.err);  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.err);  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace(System.err);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(System.err);    if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace(System.err);  }	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
164	[BUG]  [BUGGY]  ex.printStackTrace(System.err);  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.err);  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(System.err);    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
165	[BUG]  [BUGGY]  ex.printStackTrace(System.err);  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  hasT  [FE]                JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.err);  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(System.err);    if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	32	None	add
166	[BUG]  [BUGGY]  ex.initCause(date,  TimeZone.getDefault());  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  TimeZone.getDefault());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  TimeZone.getDefault());	  ex.initCause(TimeZone.getDefault());    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	77	None	replace
167	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  TimeZone.getDefault());  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneIndicator,  TimeZone.getDefault());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  TimeZone.getDefault());	  ex.initCause(TimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	77	None	replace
168	[BUG]  [BUGGY]  ex.initCause(fail,  TimeZone.getDefault());  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(fail,  TimeZone.getDefault());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(fail,  TimeZone.getDefault());	  ex.initCause(TimeZone.getDefault());    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	77	None	replace
169	[BUG]  [BUGGY]  ex.initCause(desc,  TimeZone.getDefault());  [CE]  cannot  find  symbol  desc  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(desc,  TimeZone.getDefault());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(desc,  TimeZone.getDefault());	  ex.initCause(TimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  desc	77	None	replace
170	[BUG]  [BUGGY]  ex.initCause(TimeZone.getDefault(),  date);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(TimeZone.getDefault(),  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(TimeZone.getDefault(),  date);	  ex.initCause(TimeZone.getDefault());    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	77	None	replace
171	[BUG]  [BUGGY]  ex.initCause(tz.getDefault());  [CE]  cannot  find  symbol  tz  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(tz.getDefault());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(tz.getDefault());	  ex.initCause(TimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  tz	77	None	replace
172	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  DateZone.getDefault());  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneIndicator,  DateZone.getDefault());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  DateZone.getDefault());	  ex.initCause(TimeZone.getDefault());    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	77	None	replace
173	[BUG]  [BUGGY]  ex.initCause(date,  act);  [CE]  cannot  find  symbol  act  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  act);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  act);	  ex.initCause(date,    validate);    	non-compiled	[CE]  cannot  find  symbol  act	46	None	replace
174	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg);  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg);	  ex.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
175	[BUG]  [BUGGY]  thread.println( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg);  [CE]  cannot  find  symbol  thread  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  thread.println( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	thread.println( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg);	  ex.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    	non-compiled	[CE]  cannot  find  symbol  thread	71	None	replace
176	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input);	  ex.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
177	[BUG]  [BUGGY]  parseDate.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  parseDate  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseDate.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseDate.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  ex.printStackTrace();    if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  parseDate	4	None	replace
178	[BUG]  [BUGGY]  parseFail.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  parseFail  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseFail.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseFail.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  ex.printStackTrace();    if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  parseFail	4	None	replace
179	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  ex.printStackTrace();  ex.printStackTrace();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.printStackTrace();        ex.printStackTrace();    ex.printStackTrace();  ex.printStackTrace();	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
180	[BUG]  [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  ex.printStackTrace();  ex.printStackTrace();  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  ex.printStackTrace();  ex.printStackTrace();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        ex.printStackTrace();    ex.printStackTrace();  ex.printStackTrace();	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
181	[BUG]  [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        ex.printStackTrace();    if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	1	None	add
182	[BUG]  [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        ex.printStackTrace();    if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	1	None	add
183	[BUG]  [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        ex.printStackTrace();    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
184	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.printStackTrace();        ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
185	[BUG]  [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
186	[BUG]  [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(!hasT)  {  ex.printStackTrace();  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]              JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(!hasT)  {  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        ex.printStackTrace();    if(!hasT)  {  ex.printStackTrace();  ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	1	None	add
187	[BUG]  [BUGGY]  ex.initCause(date,  day);  [CE]  cannot  find  symbol  day  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  day);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  day);	  ex.initCause(date,    filter);    	non-compiled	[CE]  cannot  find  symbol  day	50	None	replace
188	[BUG]  [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.initCause(e);  }  [CE]  cannot  find  symbol  hasT  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.initCause(e);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.initCause(e);  }	  if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.initCause(e);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	28	None	replace
189	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.initCause(e);  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.initCause(e);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.initCause(e);	  if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.initCause(e);    }    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
190	[BUG]  [BUGGY]  if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.initCause(e);  }  [CE]  cannot  find  symbol  hasT  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.initCause(e);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.initCause(e);  }	  if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.initCause(e);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	28	None	replace
191	[BUG]  [BUGGY]  thread.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  thread  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  thread.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	thread.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getIndex());	  ex.println(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  thread	72	None	replace
192	[BUG]  [BUGGY]  pos.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  pos.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	pos.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  ex.getIndex());	  ex.println(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
193	[BUG]  [BUGGY]  ExitCode.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  ExitCode  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCode.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCode.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());	  ex.println(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  ExitCode	72	None	replace
194	[BUG]  [BUGGY]  parseFailure( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseFailure( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseFailure( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getIndex());	  ex.println(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
195	[BUG]  [BUGGY]  ex.initCause(date,  UTC_ID);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  UTC_ID);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  UTC_ID);	  ex.initCause(date,    timezoneId);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	62	None	replace
196	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  [CE]  no  suitable  method  found  for  println(String,int)  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  no  suitable  method  found  for  println(String,int)	84	None	replace
197	[BUG]  [BUGGY]  if(ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  no  suitable  method  found  for  println(String,int)  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  no  suitable  method  found  for  println(String,int)	84	None	replace
198	[BUG]  [BUGGY]  ||  ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ||  ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	||  ex!=  null)  {  System.err.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
199	[BUG]  [BUGGY]  ex.initCause(date,  date,  pos);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  date,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  date,  pos);	  ex.initCause(date,    date);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	49	None	replace
200	[BUG]  [BUGGY]  ex.initCause(date,  date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  date,  timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  date,  timezoneIndicator);	  ex.initCause(date,    date);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	49	None	replace
201	[BUG]  [BUGGY]  ex.initCause(date,  timezoneIndicator,  date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  timezoneIndicator,  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timezoneIndicator,  date);	  ex.initCause(date,    date);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	49	None	replace
202	[BUG]  [BUGGY]  ex.initCause(msg,  date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  date,  timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  date,  timezoneIndicator);	  ex.initCause(msg,    date);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	10	None	replace
203	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  msg,  date);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneIndicator,  msg,  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  msg,  date);	  ex.initCause(msg,    date);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	10	None	replace
204	[BUG]  [BUGGY]  ex.initCause(msg,  date,  null);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  date,  null);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  date,  null);	  ex.initCause(msg,    date);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	10	None	replace
205	[BUG]  [BUGGY]  initCause(msg,  date,  pos);  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  initCause(msg,  date,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	initCause(msg,  date,  pos);	  ex.initCause(msg,    date);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
206	[BUG]  [BUGGY]  ex.initCause(msg,  date,  hasT);  [CE]  cannot  find  symbol  hasT  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  date,  hasT);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  date,  hasT);	  ex.initCause(msg,    date);    	non-compiled	[CE]  cannot  find  symbol  hasT	10	None	replace
207	[BUG]  [BUGGY]  ex.initCause(date,  pos,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  pos,  timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  pos,  timezoneIndicator);	  ex.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	18	None	replace
208	[BUG]  [BUGGY]  ex.initCause(date,  pos,  date);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  pos,  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  pos,  date);	  ex.initCause(date,    pos);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	18	None	replace
209	[BUG]  [BUGGY]  ex.initCause(date,  pos,  null);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  pos,  null);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  pos,  null);	  ex.initCause(date,    pos);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	18	None	replace
210	[BUG]  [BUGGY]  ex.initCause(date,  pos,  hasT);  [CE]  cannot  find  symbol  hasT  [FE]                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  pos,  hasT);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  pos,  hasT);	  ex.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  hasT	18	None	replace
211	[BUG]  [BUGGY]  ex.initCause(date,  pos,  event);  [CE]  cannot  find  symbol  event  [FE]                              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  pos,  event);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  pos,  event);	  ex.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  event	18	None	replace
212	[BUG]  [BUGGY]  parse.initCause(msg,  pos);  [CE]  cannot  find  symbol  parse  [FE]                              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parse.initCause(msg,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parse.initCause(msg,  pos);	  ex.initCause(desc,    pos);    	non-compiled	[CE]  cannot  find  symbol  parse	22	None	replace
213	[BUG]  [BUGGY]  pos.initCause(msg);  [CE]  cannot  find  symbol  [FE]                                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  pos.initCause(msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	pos.initCause(msg);	  ex.initCause(desc,    pos);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
214	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=    null)    {    ex.printStackTrace();    }    if(msg!=  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	34	1	add
215	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    if(msg!=  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	34	1	add
216	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=    null)    {    ex.printStackTrace();    }    if(msg  ==  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	34	1	add
217	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    if(msg  ==  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	34	1	add
218	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  if(msg  >=  null)  {  ex.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  if(msg  >=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    if(msg  >=  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	34	None	add
219	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  if(msg  >>  null)  {  ex.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  if(msg  >>  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    if(msg  >>  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	34	None	add
220	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  If(msg!=  null)  {  ex.printStackTrace();  }  [CE]  ';'  expected  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  If(msg!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    If(msg!=  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  ';'  expected	34	None	add
221	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  if(msg  [Delete]  null)  {  ex.printStackTrace();  }  [CE]  ')'  expected  [FE]              JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  if(msg  [Delete]  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    if(msg  [Delete]  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  ')'  expected	34	None	add
222	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  date.getIndex());  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  date.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  date.getIndex());	  ex.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
223	[BUG]  [BUGGY]  ExitCode.println( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  ex.getIndex());  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCode.println( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  ex.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCode.println( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  ex.getIndex());	  ex.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
224	[BUG]  [BUGGY]  msg.initCause(e);  [CE]  cannot  find  symbol  e  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  msg.initCause(e);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	msg.initCause(e);	  msg.initCause(ex);    	non-compiled	[CE]  cannot  find  symbol  e	15	None	replace
225	[BUG]  [BUGGY]  msg.initCause(fail);  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  msg.initCause(fail);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	msg.initCause(fail);	  msg.initCause(ex);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
226	[BUG]  [BUGGY]  msg.initCause(fail,  ex);  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  msg.initCause(fail,  ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	msg.initCause(fail,  ex);	  msg.initCause(ex);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
227	[BUG]  [BUGGY]  msg.initCause(desc);  [CE]  cannot  find  symbol  desc  [FE]                              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  msg.initCause(desc);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	msg.initCause(desc);	  msg.initCause(ex);    	non-compiled	[CE]  cannot  find  symbol  desc	15	None	replace
228	[BUG]  [BUGGY]  msg.initCause(ce);  [CE]  cannot  find  symbol  ce  [FE]                                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  msg.initCause(ce);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	msg.initCause(ce);	  msg.initCause(ex);    	non-compiled	[CE]  cannot  find  symbol  ce	15	None	replace
229	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	38	1	add
230	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	38	1	add
231	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	38	1	add
232	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	38	1	add
233	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  >=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  >=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  >=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	38	None	add
234	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  If(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  If(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    If(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	non-compiled	[CE]  ';'  expected	38	None	add
235	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  >>  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  >>  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  >>  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	38	None	add
236	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  [Delete]  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [CE]  ')'  expected  [FE]              JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  [Delete]  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  [Delete]  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	non-compiled	[CE]  ')'  expected	38	None	add
237	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	          ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	78	None	replace
238	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  pos.getIndex());	          ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	78	None	replace
239	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  pos  + "]: "  +  msg,  date.getIndex());	          ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	78	None	replace
240	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  pos,  pos.getIndex());	          ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	78	None	replace
241	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + ",]: "  +  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + ",]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  date  + ",]: "  +  msg,  pos.getIndex());	          ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	78	None	replace
242	[BUG]  [BUGGY]  if(!hasT)  {  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }	  ex.printStackTrace();    if(ex!=    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
243	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(fail!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(fail!=  null)  {  ex.printStackTrace();  }	  ex.printStackTrace();    if(ex!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	64	1	replace
244	[BUG]  [BUGGY]  if(fail!=  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(fail!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(fail!=  null)  {  ex.printStackTrace();  }	  ex.printStackTrace();    if(ex!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	64	1	replace
245	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(ex);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null)  {  ex.initCause(ex);  }	  ex.initCause(ex);    	compilable	  [FE]  IllegalArgumentException  	45	1	replace
246	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(ex);  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(ex);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(ex);  }	  ex.initCause(ex);    	compilable	  [FE]  IllegalArgumentException  	45	1	replace
247	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.initCause(ex);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg  ==  null)  {  ex.initCause(ex);  }	  ex.initCause(ex);    	compilable	  [FE]  JsonSyntaxException  	45	1	replace
248	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.initCause(ex);  }  [FE]  JsonSyntaxException  [FE]      IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.initCause(ex);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null)  {  ex.initCause(ex);  }	  ex.initCause(ex);    	compilable	  [FE]  JsonSyntaxException  	45	1	replace
249	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(ex);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null)  {  ex.initCause(ex);  }  else  {  ex.printStackTrace();  }	  ex.initCause(ex);    	compilable	  [FE]  IllegalArgumentException  	45	1	replace
250	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(ex);  }  else  {  ex.printStackTrace();  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(ex);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(ex);  }  else  {  ex.printStackTrace();  }	  ex.initCause(ex);    	compilable	  [FE]  IllegalArgumentException  	45	1	replace
251	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.initCause(ex);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg  ==  null)  {  ex.initCause(ex);  }  else  {  ex.printStackTrace();  }	  ex.initCause(ex);    	compilable	  [FE]  JsonSyntaxException  	45	1	replace
252	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.initCause(ex);  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]          IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.initCause(ex);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null)  {  ex.initCause(ex);  }  else  {  ex.printStackTrace();  }	  ex.initCause(ex);    	compilable	  [FE]  JsonSyntaxException  	45	1	replace
253	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(ex);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null)  {  ex.initCause(ex);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ex.initCause(ex);    	compilable	  [FE]  IllegalArgumentException  	45	1	replace
254	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(ex);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(ex);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(ex);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  ex.initCause(ex);    	compilable	  [FE]  IllegalArgumentException  	45	1	replace
255	[BUG]  [BUGGY]  ex.initCause(date,  timezoneIndicator,  pos);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  timezoneIndicator,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timezoneIndicator,  pos);	  ex.initCause(fail,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	20	None	replace
256	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  date,  pos);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneIndicator,  date,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  date,  pos);	  ex.initCause(fail,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	20	None	replace
257	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg    ==    null)    {    ex.printStackTrace();    }    if(msg  ==  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	36	1	add
258	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    if(msg  ==  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	36	1	add
259	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg    ==    null)    {    ex.printStackTrace();    }    if(msg!=  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	36	1	add
260	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    if(msg!=  null)  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	36	1	add
261	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  If(msg  ==  null)  {  ex.printStackTrace();  }  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  If(msg  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    If(msg  ==  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  ';'  expected	36	None	add
262	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg  >=  null)  {  ex.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg  >=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    if(msg  >=  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	36	None	add
263	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg  >>  null)  {  ex.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg  >>  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    if(msg  >>  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	36	None	add
264	[BUG]  [BUGGY]  ||  msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ||  msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	||  msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
265	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
266	[BUG]  [BUGGY]  if(msg!=  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
267	[BUG]  [BUGGY]  (msg  ==  null  ||  msg.isEmpty())?)  {  ex.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  (msg  ==  null  ||  msg.isEmpty())?)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	(msg  ==  null  ||  msg.isEmpty())?)  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
268	[BUG]  [BUGGY]  ex.initCause(msg,  pos,  date);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  pos,  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  pos,  date);	  ex.initCause(msg,    pos);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	11	None	replace
269	[BUG]  [BUGGY]  ex.initCause(msg,  pos,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  pos,  timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  pos,  timezoneIndicator);	  ex.initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	11	None	replace
270	[BUG]  [BUGGY]  ex.initCause(msg,  timezoneIndicator,  pos);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  timezoneIndicator,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  timezoneIndicator,  pos);	  ex.initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	11	None	replace
271	[BUG]  [BUGGY]  ex.initCause(date,  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  DateTimeConstants.MILLIS_PER_SECOND);	  ex.initCause(date,    column);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	67	None	replace
272	[BUG]  [BUGGY]  ex.initCause(date,  DateTimeConstants.SECONDS_PER_MILLIS);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  DateTimeConstants.SECONDS_PER_MILLIS);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  DateTimeConstants.SECONDS_PER_MILLIS);	  ex.initCause(date,    column);    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	67	None	replace
273	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.setTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.setTimeZone(timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  ex.setTimeZone(timezoneIndicator);	          if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.setTimeZone(timezoneIndicator);    }    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
274	[BUG]  [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.setTimeZone(timezoneIndicator);  }  [CE]  cannot  find  symbol  hasT  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.setTimeZone(timezoneIndicator);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.setTimeZone(timezoneIndicator);  }	          if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.setTimeZone(timezoneIndicator);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	58	None	replace
275	[BUG]  [BUGGY]  if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.setTimeZone(timezoneIndicator);  }  [CE]  cannot  find  symbol  hasT  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.setTimeZone(timezoneIndicator);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.setTimeZone(timezoneIndicator);  }	          if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.setTimeZone(timezoneIndicator);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	58	None	replace
276	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + ",  msg: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + ",  msg: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + ",  msg: "  +  msg,  pos.getIndex());	  JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
277	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getCode());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getCode());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getCode());	  JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
278	[BUG]  [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  ||  msg.isEmpty())  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null  ||  msg.isEmpty())  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	76	None	replace
279	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	76	None	replace
280	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  date);  }  else  {  ex.printStackTrace();  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  date);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(msg,  date);  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	76	None	replace
281	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  pos);  }  else  {  ex.printStackTrace();  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  pos);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(msg,  pos);  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	76	None	replace
282	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	76	None	replace
283	[BUG]  [BUGGY]  parseFail.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  parseFail  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseFail.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseFail.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  ex.printStackTrace();    if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  parseFail	6	None	replace
284	[BUG]  [BUGGY]  parseDate.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  parseDate  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseDate.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseDate.printStackTrace();  if(!hasT)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  ex.printStackTrace();    if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  parseDate	6	None	replace
285	[BUG]  [BUGGY]  ex.initCause(msg,  date,  pos,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  date,  pos,  timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  date,  pos,  timezoneIndicator);	  ex.initCause(msg,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	21	None	replace
286	[BUG]  [BUGGY]  ex.initCause(msg,  date,  timezoneIndicator,  pos);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  date,  timezoneIndicator,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  date,  timezoneIndicator,  pos);	  ex.initCause(msg,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	21	None	replace
287	[BUG]  [BUGGY]  ex.initCause(msg,  date,  pos,  null);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  date,  pos,  null);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  date,  pos,  null);	  ex.initCause(msg,    date,    pos);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	21	None	replace
288	[BUG]  [BUGGY]  ex.initCause(msg,  date,  pos,  hasT);  [CE]  cannot  find  symbol  hasT  [FE]                                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  date,  pos,  hasT);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  date,  pos,  hasT);	  ex.initCause(msg,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol  hasT	21	None	replace
289	[BUG]  [BUGGY]  ex.initCause(msg,  date,  pos,  event);  [CE]  cannot  find  symbol  event  [FE]                                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  date,  pos,  event);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  date,  pos,  event);	  ex.initCause(msg,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol  event	21	None	replace
290	[BUG]  [BUGGY]  ex.initCause(msg,  date,  pos,  act);  [CE]  cannot  find  symbol  act  [FE]                                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  date,  pos,  act);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  date,  pos,  act);	  ex.initCause(msg,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol  act	21	None	replace
291	[BUG]  [BUGGY]  ex.initCause(msg,  fail);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  fail);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  fail);	  ex.initCause(fail,    msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	13	None	replace
292	[BUG]  [BUGGY]  ex.initCause(msg,  freeze);  [CE]  cannot  find  symbol  freeze  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  freeze);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  freeze);	  ex.initCause(fail,    msg);    	non-compiled	[CE]  cannot  find  symbol  freeze	13	None	replace
293	[BUG]  [BUGGY]  ex.initCause(msg,  filter);  [CE]  cannot  find  symbol  filter  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  filter);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  filter);	  ex.initCause(fail,    msg);    	non-compiled	[CE]  cannot  find  symbol  filter	13	None	replace
294	[BUG]  [BUGGY]  ex.initCause(msg,  error);  [CE]  cannot  find  symbol  error  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  error);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  error);	  ex.initCause(fail,    msg);    	non-compiled	[CE]  cannot  find  symbol  error	13	None	replace
295	[BUG]  [BUGGY]  ex.initCause(msg,  throwable);  [CE]  cannot  find  symbol  throwable  [FE]                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  throwable);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  throwable);	  ex.initCause(fail,    msg);    	non-compiled	[CE]  cannot  find  symbol  throwable	13	None	replace
296	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	40	1	add
297	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	40	1	add
298	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	40	1	add
299	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	40	1	add
300	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  If(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  If(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    If(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	non-compiled	[CE]  ';'  expected	40	None	add
301	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null  ||  ex.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null  ||  ex.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  ==  null  ||  ex.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol	40	None	add
302	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  >=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  >=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  >=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	40	None	add
303	[BUG]  [BUGGY]  ex.initCause(timezoneId,  msg);  [CE]  cannot  find  symbol  timezoneId  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneId,  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneId,  msg);	  ex.initCause(timezoneIndicator,    msg);    	non-compiled	[CE]  cannot  find  symbol  timezoneId	12	None	replace
304	[BUG]  [BUGGY]  ex.initCause(timezoneOffset,  msg);  [CE]  cannot  find  symbol  timezoneOffset  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneOffset,  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneOffset,  msg);	  ex.initCause(timezoneIndicator,    msg);    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	12	None	replace
305	[BUG]  [BUGGY]  msg.initCause(timezoneIndicator,  msg);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  msg.initCause(timezoneIndicator,  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	msg.initCause(timezoneIndicator,  msg);	  ex.initCause(timezoneIndicator,    msg);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	12	None	replace
306	[BUG]  [BUGGY]  pos.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  pos.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	pos.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
307	[BUG]  [BUGGY]  ParseException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ParseException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ParseException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getIndex());	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	7	None	replace
308	[BUG]  [BUGGY]  ex.initCause(date,  timezoneOutset);  [CE]  cannot  find  symbol  timezoneOutset  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  timezoneOutset);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timezoneOutset);	  ex.initCause(date,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneOutset	53	None	replace
309	[BUG]  [BUGGY]  parseAndCause(ex,  pos);  [CE]  cannot  find  symbol  [FE]                              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseAndCause(ex,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseAndCause(ex,  pos);	  ex.initCause(desc,    pos);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
310	[BUG]  [BUGGY]  ex.initCause(ex);  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  [CE]  cannot  find  symbol  Ex  [FE]    IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(ex);    Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.initCause(ex);	  	non-compiled	[CE]  cannot  find  symbol  Ex	44	None	add
311	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  if(ex!=  null)  {  ex.initCause(ex);  }  else  {  ex.initCause(ex);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.initCause(ex);    if(ex!=  null)  {  ex.initCause(ex);  }  else  {  ex.initCause(ex);  }	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
312	[BUG]  [BUGGY]  ex.initCause(ex);  if(ex!=  null)  {  ex.initCause(ex);  }  else  {  ex.initCause(ex);  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  if(ex!=  null)  {  ex.initCause(ex);  }  else  {  ex.initCause(ex);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(ex);    if(ex!=  null)  {  ex.initCause(ex);  }  else  {  ex.initCause(ex);  }	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
313	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  if(ex!=  null)  {  ex.initCause(ex);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.initCause(ex);    if(ex!=  null)  {  ex.initCause(ex);  }	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
314	[BUG]  [BUGGY]  ex.initCause(ex);  if(ex!=  null)  {  ex.initCause(ex);  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  if(ex!=  null)  {  ex.initCause(ex);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(ex);    if(ex!=  null)  {  ex.initCause(ex);  }	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
315	[BUG]  [BUGGY]  ex.initCause(ex);  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  Ex  [FE]          IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(ex);    Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol  Ex	44	None	add
316	[BUG]  [BUGGY]  ex.initCause(ex);  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.initCause(ex);  [CE]  cannot  find  symbol  Ex  [FE]            IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.initCause(ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(ex);    Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  ex.initCause(ex);	  	non-compiled	[CE]  cannot  find  symbol  Ex	44	None	add
317	[BUG]  [BUGGY]  initMilliseconds(msg,  pos);  [CE]  cannot  find  symbol  [FE]                                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  initMilliseconds(msg,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	initMilliseconds(msg,  pos);	  initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
318	[BUG]  [BUGGY]  initCause(fail,  pos);  [CE]  cannot  find  symbol  [FE]                                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  initCause(fail,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	initCause(fail,  pos);	  initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
319	[BUG]  [BUGGY]  if(!hasT)  {  ex.printStackTrace();  if(ex  ==  null)  {  ex.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  ex.printStackTrace();  if(ex  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  ex.printStackTrace();  if(ex  ==  null)  {  ex.printStackTrace();  }	  ex.printStackTrace();    if(ex!=    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
320	[BUG]  [BUGGY]  ExitCause.initCause(date,  msg);  [CE]  cannot  find  symbol  ExitCause  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause.initCause(date,  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause.initCause(date,  msg);	  ex.initCause(timezoneIndicator,    msg);    	non-compiled	[CE]  cannot  find  symbol  ExitCause	12	None	replace
321	[BUG]  [BUGGY]  ex.println(System.err);  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println(System.err);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println(System.err);	  ex.printStackTrace(System.err);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
322	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.out);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.printStackTrace(System.out);	  ex.printStackTrace(System.err);    	compilable	  [FE]  JsonSyntaxException  	33	1	replace
323	[BUG]  [BUGGY]  ex.printStackTrace(System.out);  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.out);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(System.out);	  ex.printStackTrace(System.err);    	compilable	  [FE]  JsonSyntaxException  	33	1	replace
324	[BUG]  [BUGGY]  ex.println(System.currentTimeMillis());  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println(System.currentTimeMillis());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println(System.currentTimeMillis());	  ex.printStackTrace(System.err);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
325	[BUG]  [BUGGY]  ex.println(System.out);  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println(System.out);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println(System.out);	  ex.printStackTrace(System.err);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
326	[BUG]  [BUGGY]  ex.printLocal(TimeZone.UTC,  timezoneIndicator);  [CE]  cannot  find  symbol  UTC  [FE]            JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printLocal(TimeZone.UTC,  timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printLocal(TimeZone.UTC,  timezoneIndicator);	  ex.printStackTrace(System.err);    	non-compiled	[CE]  cannot  find  symbol  UTC	33	None	replace
327	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg);  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  msg);	  ex.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
328	[BUG]  [BUGGY]  ex.setTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.setTimeZone(timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.setTimeZone(timezoneIndicator);	  ex.initCause(ex);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	45	None	replace
329	[BUG]  [BUGGY]  ex.initCause(date,  timezoneOutdicator);  [CE]  cannot  find  symbol  timezoneOutdicator  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  timezoneOutdicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timezoneOutdicator);	  ex.initCause(date,    freeze);    	non-compiled	[CE]  cannot  find  symbol  timezoneOutdicator	68	None	replace
330	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  msg,  pos);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneIndicator,  msg,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  msg,  pos);	  ex.initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	11	None	replace
331	[BUG]  [BUGGY]  ex.initCause(date,  timeZone);  [CE]  cannot  find  symbol  timeZone  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  timeZone);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timeZone);	  ex.initCause(date,    timezoneId);    	non-compiled	[CE]  cannot  find  symbol  timeZone	62	None	replace
332	[BUG]  [BUGGY]  pos.initCause(ex);  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  pos.initCause(ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	pos.initCause(ex);	  ex.initCause(act);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
333	[BUG]  [BUGGY]  if(input  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(input  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(input  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	          if(msg    ==    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
334	[BUG]  [BUGGY]  if(ex  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	          if(msg    ==    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
335	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();	          if(msg    ==    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
336	[BUG]  [BUGGY]  if(!hasT)  {  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  ex.printStackTrace();    if(!hasT)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  hasT	6	None	replace
337	[BUG]  [BUGGY]  ex.initCause(e,  date);  [CE]  cannot  find  symbol  e  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(e,  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(e,  date);	  ex.initCause(e,    msg);    	non-compiled	[CE]  cannot  find  symbol  e	14	None	replace
338	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
339	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
340	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(input!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(input!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
341	[BUG]  [BUGGY]  if(input!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(input!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(input!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
342	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  +   "]:   "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  +   "]:   "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  +   "]:   "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    timezoneIndicator    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
343	[BUG]  [BUGGY]  pos.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  ex.getIndex());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  pos.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  ex.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	pos.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]: "  +  msg,  ex.getIndex());	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    timezoneIndicator    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
344	[BUG]  [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  +   "]:   "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  +   "]:   "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  +   "]:   "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    timezoneIndicator    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
345	[BUG]  [BUGGY]  ex.initCause(fail,  date,  msg);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(fail,  date,  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(fail,  date,  msg);	  ex.initCause(fail,    msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	13	None	replace
346	[BUG]  [BUGGY]  ex.initCause(date,  TimeZone.UTC,  timezoneId);  [CE]  cannot  find  symbol  UTC  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  TimeZone.UTC,  timezoneId);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  TimeZone.UTC,  timezoneId);	  ex.initCause(date,    TimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  UTC	60	None	replace
347	[BUG]  [BUGGY]  ex.initCause(date,  TimeZone.UTC,  date);  [CE]  cannot  find  symbol  UTC  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  TimeZone.UTC,  date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  TimeZone.UTC,  date);	  ex.initCause(date,    TimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  UTC	60	None	replace
348	[BUG]  [BUGGY]  ex.initCause(date,  TimeZone.UTC,  false);  [CE]  cannot  find  symbol  UTC  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  TimeZone.UTC,  false);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  TimeZone.UTC,  false);	  ex.initCause(date,    TimeZone.UTC);    	non-compiled	[CE]  cannot  find  symbol  UTC	60	None	replace
349	[BUG]  [BUGGY]  ex.initCause(date,  this.timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  this.timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  this.timezoneIndicator);	  ex.initCause(date,    template);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	81	None	replace
350	[BUG]  [BUGGY]  ex.printStackTrace(System.err);  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  ex.printStackTrace(System.err);  }  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.err);  if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  ex.printStackTrace(System.err);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(System.err);    if(ex!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  ex.printStackTrace(System.err);  }	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
351	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg  ==  null)  {  Ex.printStackTrace();  }  [CE]  cannot  find  symbol  Ex  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg  ==  null)  {  Ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    if(msg  ==  null)  {  Ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  Ex	36	None	add
352	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  method  found  for  println(String,int)  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  System.err.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }	  	non-compiled	[CE]  no  suitable  method  found  for  println(String,int)	40	None	add
353	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  cannot  find  symbol	40	None	add
354	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  System.err.println( "Unable  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  no  suitable  method  found  for  println(String,int)  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  System.err.println( "Unable  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  System.err.println( "Unable  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  	non-compiled	[CE]  no  suitable  method  found  for  println(String,int)	40	None	add
355	[BUG]  [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  }  else  {  return  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }  [CE]  incompatible  types  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  }  else  {  return  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex  ==  null)  {  ex.printStackTrace();  }  else  {  return  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    return    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  incompatible  types	85	None	replace
356	[BUG]  [BUGGY]  ExitCause.initCause(input,  pos);  [CE]  cannot  find  symbol  ExitCause  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause.initCause(input,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause.initCause(input,  pos);	  ExitCause.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  ExitCause	56	None	replace
357	[BUG]  [BUGGY]  ExitCause.initCause(timezoneIndicator,  pos);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause.initCause(timezoneIndicator,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause.initCause(timezoneIndicator,  pos);	  ExitCause.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	56	None	replace
358	[BUG]  [BUGGY]  ex.initCause(timezoneIndicator,  msg,  date,  pos);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneIndicator,  msg,  date,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneIndicator,  msg,  date,  pos);	  ex.initCause(msg,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	21	None	replace
359	[BUG]  [BUGGY]  ex.initCause(date,  input,  msg);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  input,  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  input,  msg);	  ex.initCause(date,    msg);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	9	None	replace
360	[BUG]  [BUGGY]  ex.initCause(date,  msg,  act);  [CE]  cannot  find  symbol  act  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  msg,  act);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  msg,  act);	  ex.initCause(date,    msg);    	non-compiled	[CE]  cannot  find  symbol  act	9	None	replace
361	[BUG]  [BUGGY]  if(fail!=  null)  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(fail!=  null)  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(fail!=  null)  {  ex.initCause(msg);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	75	None	replace
362	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(date,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(date,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(date,  pos);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	75	None	replace
363	[BUG]  [BUGGY]  StaxUtil.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  StaxUtil  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  StaxUtil.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	StaxUtil.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getIndex());	  ex.println(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	72	None	replace
364	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getName());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getName());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getName());	  ex.println(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
365	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLocale());  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLocale());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "+date  + "]: "  +  msg,  pos.getLocale());	  ex.println(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
366	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  timezoneIndicator,  input.getIndex());  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  timezoneIndicator,  input.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  timezoneIndicator,  input.getIndex());	          JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    timezoneIndicator,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
367	[BUG]  [BUGGY]  ex.initCause(date,  false);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  false);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  false);	  ex.initCause(date,    this);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	61	None	replace
368	[BUG]  [BUGGY]  ex.initCause(input);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(input);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(input);	  ex.initCause(error);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	42	None	replace
369	[BUG]  [BUGGY]  if(!hasT)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  hasT	39	None	replace
370	[BUG]  [BUGGY]  ex.initCause(date,  error,  pos);  [CE]  cannot  find  symbol  error  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  error,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  error,  pos);	  ex.initCause(fail,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol  error	20	None	replace
371	[BUG]  [BUGGY]  ex.initCause(date,  filter,  pos);  [CE]  cannot  find  symbol  filter  [FE]                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  filter,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  filter,  pos);	  ex.initCause(fail,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol  filter	20	None	replace
372	[BUG]  [BUGGY]  ex.initCause(date,  false,  pos);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  false,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  false,  pos);	  ex.initCause(fail,    date,    pos);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	20	None	replace
373	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.printStackTrace();        ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
374	[BUG]  [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  ex.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
375	[BUG]  [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(!hasT)  {  ex.printStackTrace();  ex.printStackTrace();  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  if(!hasT)  {  ex.printStackTrace();  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        ex.printStackTrace();    if(!hasT)  {  ex.printStackTrace();  ex.printStackTrace();  ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	1	None	add
376	[BUG]  [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + ") ");  ex.printStackTrace();  ex.printStackTrace();  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + ") ");  ex.printStackTrace();  ex.printStackTrace();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        ex.printStackTrace();    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + ") ");  ex.printStackTrace();  ex.printStackTrace();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
377	[BUG]  [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  e.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [CE]  cannot  find  symbol  e  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  e.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        if(ex!=    null)    {    ex.printStackTrace();    }    e.printStackTrace();  if(ex!=  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  e	63	None	add
378	[BUG]  [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        if(ex!=    null)    {    ex.printStackTrace();    }    ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	63	None	add
379	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.initCause(msg);  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.initCause(msg);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null)  {  ex.initCause(msg);  }	  if(msg!=    null)    {    ex.initCause(msg);    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	74	None	replace
380	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(date);  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(date);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(date);  }	  if(msg!=    null)    {    ex.initCause(msg);    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	74	None	replace
381	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(timezoneIndicator,  msg);  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(timezoneIndicator,  msg);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(timezoneIndicator,  msg);  }	  if(msg!=    null)    {    ex.initCause(msg);    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	74	None	replace
382	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(date,  input);  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(date,  input);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(date,  input);  }	  if(msg!=    null)    {    ex.initCause(msg);    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	74	None	replace
383	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
384	[BUG]  [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
385	[BUG]  [BUGGY]  Error.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  Error.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	Error.println( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg);  ex.printStackTrace();	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
386	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  data.getIndex());  [CE]  cannot  find  symbol  data  [FE]        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  data.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "  +  pos  +   "]: "  +  msg,  data.getIndex());	  ex.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol  data	70	None	replace
387	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg  ==  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	37	1	replace
388	[BUG]  [BUGGY]  if(msg  ==  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	37	1	replace
389	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  Ex.printStackTrace();  }  [CE]  cannot  find  symbol  Ex  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg!=  null)  {  ex.printStackTrace();  }  else  {  Ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg!=  null)  {  ex.printStackTrace();  }  else  {  Ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  Ex	38	None	add
390	[BUG]  [BUGGY]  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  Ex  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  if(ex!=    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  Ex	31	None	replace
391	[BUG]  [BUGGY]  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [CE]  cannot  find  symbol  Ex  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);	  if(ex!=    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  Ex	31	None	replace
392	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
393	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
394	[BUG]  [BUGGY]  if(!hasT)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  hasT	2	None	replace
395	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
396	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.printStackTrace();  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
397	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: ",  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: ",  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: ",  msg,  pos.getIndex());	  JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
398	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getSourceName());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getSourceName());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getSourceName());	  JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
399	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getMessage());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getMessage());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  pos.getMessage());	  JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
400	[BUG]  [BUGGY]  ex.initCause(date,  pos,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  pos,  this);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  pos,  this);	  ex.initCause(date,    pos);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	18	None	replace
401	[BUG]  [BUGGY]  ex.initCause(date,  pos,  false);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  pos,  false);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  pos,  false);	  ex.initCause(date,    pos);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	18	None	replace
402	[BUG]  [BUGGY]  if(fail!=  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(fail!=  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(fail!=  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	76	None	replace
403	[BUG]  [BUGGY]  if(input!=  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(input!=  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(input!=  null)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	76	None	replace
404	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(date,  pos);  }  else  {  ex.printStackTrace();  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(date,  pos);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(date,  pos);  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	76	None	replace
405	[BUG]  [BUGGY]  ex.initCause(date,  input);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  input);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  input);	  ex.initCause(date,    column);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	67	None	replace
406	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
407	[BUG]  [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
408	[BUG]  [BUGGY]  pos.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  pos.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	pos.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
409	[BUG]  [BUGGY]  if(ex  instanceof  JsonSyntaxException)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex  instanceof  JsonSyntaxException)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex  instanceof  JsonSyntaxException)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
410	[BUG]  [BUGGY]  ex.initCause(date,  TimeZone.UTC,  fail);  [CE]  cannot  find  symbol  UTC  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  TimeZone.UTC,  fail);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  TimeZone.UTC,  fail);	  ex.initCause(date,    fail);    	non-compiled	[CE]  cannot  find  symbol  UTC	66	None	replace
411	[BUG]  [BUGGY]  ex.initCause(date,  input,  fail);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  input,  fail);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  input,  fail);	  ex.initCause(date,    fail);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	66	None	replace
412	[BUG]  [BUGGY]  ex.initCause(date,  UTC_ID,  fail);  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  UTC_ID,  fail);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  UTC_ID,  fail);	  ex.initCause(date,    fail);    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	66	None	replace
413	[BUG]  [BUGGY]  timeout  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  while(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex!=    null)    {    ex.printStackTrace();    }    while(ex!=  null)  {  ex.printStackTrace();  }	  	compilable	timeout	30	1	add
414	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  while(ex!=  null)  {  ex.printStackTrace();  }  timeout  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  while(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=    null)    {    ex.printStackTrace();    }    while(ex!=  null)  {  ex.printStackTrace();  }	  	compilable	timeout	30	1	add
415	[BUG]  [BUGGY]  msg.initCause(null,  ex);  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  msg.initCause(null,  ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	msg.initCause(null,  ex);	  msg.initCause(ex);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
416	[BUG]  [BUGGY]  msg.initCause(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  msg.initCause(timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	msg.initCause(timezoneIndicator);	  msg.initCause(ex);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	15	None	replace
417	[BUG]  [BUGGY]  msg.initCause(this,  ex);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  msg.initCause(this,  ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	msg.initCause(this,  ex);	  msg.initCause(ex);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	15	None	replace
418	[BUG]  [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  JsonSyntaxException  ex  =  new  JsonSyntaxException( " "));  if(ex!=  null)  {  ex.printStackTrace();  }  [CE]  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace();    if(ex!=  null)  {  ex.printStackTrace();  }  JsonSyntaxException  ex  =  new  JsonSyntaxException( " "));  if(ex!=  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace();        if(ex!=    null)    {    ex.printStackTrace();    }    JsonSyntaxException  ex  =  new  JsonSyntaxException( " "));  if(ex!=  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  	63	None	add
419	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(ex,  pos);  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseAndIgnoreWhitespace(ex,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseAndIgnoreWhitespace(ex,  pos);	  ex.initCause(act);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
420	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(e,  pos);  [CE]  cannot  find  symbol  e  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseAndIgnoreWhitespace(e,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseAndIgnoreWhitespace(e,  pos);	  ex.initCause(act);    	non-compiled	[CE]  cannot  find  symbol  e	17	None	replace
421	[BUG]  [BUGGY]  ex.initCause(date,  error);  [CE]  cannot  find  symbol  error  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  error);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  error);	  ex.initCause(date,    validateFail);    	non-compiled	[CE]  cannot  find  symbol  error	47	None	replace
422	[BUG]  [BUGGY]  ex.initCause(dateId,  msg);  [CE]  cannot  find  symbol  dateId  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(dateId,  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(dateId,  msg);	  ex.initCause(timezoneIndicator,    msg);    	non-compiled	[CE]  cannot  find  symbol  dateId	12	None	replace
423	[BUG]  [BUGGY]  former.initCause(msg,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  former.initCause(msg,  timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	former.initCause(msg,  timezoneIndicator);	  ex.initCause(timezoneIndicator,    msg);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	12	None	replace
424	[BUG]  [BUGGY]  if(ex.getMessage()!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex.getMessage()!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex.getMessage()!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
425	[BUG]  [BUGGY]  if(ex.getMessage()  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex.getMessage()  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex.getMessage()  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  +   "]: "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
426	[BUG]  [BUGGY]  if(ex!=  null)  {  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  Ex  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null)  {  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  ex.printStackTrace();    if(ex!=    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  Ex	64	None	replace
427	[BUG]  [BUGGY]  if(!hasT)  {  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(!hasT)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(!hasT)  {  ex.printStackTrace();  }	  ex.printStackTrace();    if(ex!=    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  hasT	64	None	replace
428	[BUG]  [BUGGY]  ex.printStackTrace(TimeZone.getDefault());  [CE]  no  suitable  method  found  for  printStackTrace(TimeZone)  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(TimeZone.getDefault());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(TimeZone.getDefault());	  ex.printStackTrace(System.err);    	non-compiled	[CE]  no  suitable  method  found  for  printStackTrace(TimeZone)	33	None	replace
429	[BUG]  [BUGGY]  ex.printStackTrace(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(timezoneIndicator);	  ex.printStackTrace(System.err);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	33	None	replace
430	[BUG]  [BUGGY]  ex.printStackTrace(date);  [CE]  no  suitable  method  found  for  printStackTrace(String)  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(date);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(date);	  ex.printStackTrace(System.err);    	non-compiled	[CE]  no  suitable  method  found  for  printStackTrace(String)	33	None	replace
431	[BUG]  [BUGGY]  ex.initCause(TimeZone.UTC);  [CE]  cannot  find  symbol  UTC  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(TimeZone.UTC);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(TimeZone.UTC);	  ex.initCause(tz);    	non-compiled	[CE]  cannot  find  symbol  UTC	57	None	replace
432	[BUG]  [BUGGY]  ex.initCause(timezoneID);  [CE]  cannot  find  symbol  timezoneID  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(timezoneID);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(timezoneID);	  ex.initCause(tz);    	non-compiled	[CE]  cannot  find  symbol  timezoneID	57	None	replace
433	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
434	[BUG]  [BUGGY]  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());	  if(msg!=    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	39	1	replace
435	[BUG]  [BUGGY]  if(ex.getMessage()!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]:   "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex.getMessage()!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]:   "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex.getMessage()!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]:   "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    timezoneIndicator    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
436	[BUG]  [BUGGY]  if(ex.getMessage()  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]:   "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex.getMessage()  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]:   "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex.getMessage()  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]:   "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    timezoneIndicator    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
437	[BUG]  [BUGGY]  if(ex.getMessage()  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]:   "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex.getMessage()  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]:   "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex.getMessage()  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  timezoneIndicator  + "]:   "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    timezoneIndicator    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
438	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  input,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  input,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  input,  pos.getIndex());	          JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
439	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  date.getIndex());  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  date.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  msg,  date.getIndex());	          JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    msg    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
440	[BUG]  [BUGGY]  ex.initCause(date,  validateDate(date,  pos));  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  validateDate(date,  pos));  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  validateDate(date,  pos));	  ex.initCause(fail,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
441	[BUG]  [BUGGY]  ex.initCause(date,  timezoneId,  pos);  [CE]  cannot  find  symbol  timezoneId  [FE]                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  timezoneId,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timezoneId,  pos);	  ex.initCause(fail,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneId	20	None	replace
442	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  Ex.printStackTrace();  }  [CE]  cannot  find  symbol  Ex  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  Ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  Ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  Ex	40	None	add
443	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  Ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [CE]  cannot  find  symbol  Ex  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  if(msg  ==  null)  {  Ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    if(msg  ==  null)  {  Ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  Ex	40	None	add
444	[BUG]  [BUGGY]  ExitCause  ex  =  initCause(date,  pos);  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause  ex  =  initCause(date,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause  ex  =  initCause(date,  pos);	  ExitCause.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
445	[BUG]  [BUGGY]  ExitCause  ex  =  new  ExitCause(date,  pos);  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause  ex  =  new  ExitCause(date,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause  ex  =  new  ExitCause(date,  pos);	  ExitCause.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
446	[BUG]  [BUGGY]  ExitCause  ex  =  new  ExitCause(date,  input);  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ExitCause  ex  =  new  ExitCause(date,  input);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ExitCause  ex  =  new  ExitCause(date,  input);	  ExitCause.initCause(date,    pos);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
447	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  ex.initCause(msg);  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  ex.initCause(msg);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null  &&  msg.length()  >  0)  {  ex.initCause(msg);  }	  if(msg!=    null)    {    ex.initCause(msg);    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	74	None	replace
448	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  ex.initCause(msg,  date);  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  ex.initCause(msg,  date);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null  &&  msg.length()  >  0)  {  ex.initCause(msg,  date);  }	  if(msg!=    null)    {    ex.initCause(msg);    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	74	None	replace
449	[BUG]  [BUGGY]  if(hasT)  {  ex.printStackTrace();  ex.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(hasT)  {  ex.printStackTrace();  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(hasT)  {  ex.printStackTrace();  ex.printStackTrace();  }	  ex.printStackTrace();    ex.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  hasT	2	None	replace
450	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  input,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  input,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  input,  pos.getIndex());	  ex.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
451	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg  ==  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
452	[BUG]  [BUGGY]  if(msg  ==  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null  ||!msg.isEmpty())  {  ex.printStackTrace();  }  else  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    else    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	41	1	replace
453	[BUG]  [BUGGY]  ex.initCause(msg,  date,  pos,  error);  [CE]  cannot  find  symbol  error  [FE]                            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  date,  pos,  error);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  date,  pos,  error);	  ex.initCause(msg,    date,    pos);    	non-compiled	[CE]  cannot  find  symbol  error	21	None	replace
454	[BUG]  [BUGGY]  if(ex!=  null  &&  ex.isEmpty())  {  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null  &&  ex.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null  &&  ex.isEmpty())  {  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
455	[BUG]  [BUGGY]  if(ex!=  null  &&  ex.hasChildren())  {  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null  &&  ex.hasChildren())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null  &&  ex.hasChildren())  {  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
456	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null  &&  ex.getMessage()  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(ex!=  null  &&  ex.getMessage()  ==  null)  {  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	31	1	replace
457	[BUG]  [BUGGY]  if(ex!=  null  &&  ex.getMessage()  ==  null)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null  &&  ex.getMessage()  ==  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=  null  &&  ex.getMessage()  ==  null)  {  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	31	1	replace
458	[BUG]  [BUGGY]  ex.initCause(date,  table);  [CE]  cannot  find  symbol  table  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  table);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  table);	  ex.initCause(date,    column);    	non-compiled	[CE]  cannot  find  symbol  table	67	None	replace
459	[BUG]  [BUGGY]  if(msg!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	          if(msg    ==    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
460	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  pos,  pos.getIndex());  ex.printStackTrace();  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  pos,  pos.getIndex());  ex.printStackTrace();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  pos,  pos.getIndex());  ex.printStackTrace();	          if(msg    ==    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
461	[BUG]  [BUGGY]  if(msg  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  + "]:   "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  + "]:   "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  + "]:   "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	          if(msg    ==    null)    {    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
462	[BUG]  [BUGGY]  ex.initCause(date,  timezoneId,  fail);  [CE]  cannot  find  symbol  timezoneId  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(date,  timezoneId,  fail);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(date,  timezoneId,  fail);	  ex.initCause(date,    fail);    	non-compiled	[CE]  cannot  find  symbol  timezoneId	66	None	replace
463	[BUG]  [BUGGY]  oricaror(ex)  {  return  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  oricaror(ex)  {  return  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	oricaror(ex)  {  return  new  ParseException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  }	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    return    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    }    	non-compiled	[CE]  	85	None	replace
464	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  timezoneIndicator,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  timezoneIndicator,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  pos  +   "]:   "  +  timezoneIndicator,  pos.getIndex());	          JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    timezoneIndicator,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
465	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  timezoneIndicator  [ "  +  date  +   "]:   "  +  timezoneIndicator,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  timezoneIndicator  [ "  +  date  +   "]:   "  +  timezoneIndicator,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  timezoneIndicator  [ "  +  date  +   "]:   "  +  timezoneIndicator,  pos.getIndex());	          JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    timezoneIndicator,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
466	[BUG]  [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg  {  null)  {  ex.printStackTrace();  }  [CE]  ')'  expected  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null)  {  ex.printStackTrace();  }  if(msg  {  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg    ==    null)    {    ex.printStackTrace();    }    if(msg  {  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  ')'  expected	36	None	add
467	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  input,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  input,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  msg  + "]:   "  +  input,  pos.getIndex());	  JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
468	[BUG]  [BUGGY]  if(ex.getMessage()  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex.getMessage()  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex.getMessage()  ==  null)  {  ex.printStackTrace();  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]:   "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
469	[BUG]  [BUGGY]  if(ex.getMessage()!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex.getMessage()!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex.getMessage()!=  null)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
470	[BUG]  [BUGGY]  if(ex  instanceof  JsonSyntaxException)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex  instanceof  JsonSyntaxException)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex  instanceof  JsonSyntaxException)  {  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  +   "]: "  +  msg,  pos.getIndex());  }	  ex.printStackTrace();    JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
471	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  date,  pos.getIndex());	          ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	78	None	replace
472	[BUG]  [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input,  pos.getIndex());  [CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ParseException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  msg  + "]: "  +  input,  pos.getIndex());	          ParseException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  variable  ex  is  already  defined  in  method  parse(String,ParsePosition)	78	None	replace
473	[BUG]  [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex  ==  null)  {  ex.printStackTrace();  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex  ==  null)  {  ex.printStackTrace();  }  else  {  JsonSyntaxException  ex  =  new  ParseException( "Failed  to  parse  date  [ "  +  input  +   "]:   "  +  msg,  pos.getIndex());  ex.printStackTrace();  }	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    JsonSyntaxException    ex    =    new    ParseException(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
474	[BUG]  [BUGGY]  msg,  ex.initCause(ex);  [CE]  not  a  statement  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  msg,  ex.initCause(ex);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	msg,  ex.initCause(ex);	  msg.initCause(ex);    	non-compiled	[CE]  not  a  statement	15	None	replace
475	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  if(ex.getCause()!=  null)  {  ex.initCause(ex);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.initCause(ex);    if(ex.getCause()!=  null)  {  ex.initCause(ex);  }	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
476	[BUG]  [BUGGY]  ex.initCause(ex);  if(ex.getCause()!=  null)  {  ex.initCause(ex);  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(ex);  if(ex.getCause()!=  null)  {  ex.initCause(ex);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(ex);    if(ex.getCause()!=  null)  {  ex.initCause(ex);  }	  	compilable	  [FE]  IllegalArgumentException  	44	1	add
477	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.err);  if(ex!=  null)  {  ex.printStackTrace(System.err);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	ex.printStackTrace(System.err);    if(ex!=  null)  {  ex.printStackTrace(System.err);  }	  	compilable	  [FE]  JsonSyntaxException  	32	1	add
478	[BUG]  [BUGGY]  ex.printStackTrace(System.err);  if(ex!=  null)  {  ex.printStackTrace(System.err);  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.err);  if(ex!=  null)  {  ex.printStackTrace(System.err);  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(System.err);    if(ex!=  null)  {  ex.printStackTrace(System.err);  }	  	compilable	  [FE]  JsonSyntaxException  	32	1	add
479	[BUG]  [BUGGY]  ex.printStackTrace(System.err);  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.printStackTrace(System.err);  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.printStackTrace(System.err);    JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg);	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
480	[BUG]  [BUGGY]  ex.initCause(msg,  throw  new  IllegalArgumentException( " "));  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  throw  new  IllegalArgumentException( " "));  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  throw  new  IllegalArgumentException( " "));	  ex.initCause(fail,    msg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
481	[BUG]  [BUGGY]  ex.initCause(msg,  throw  new  IllegalStateException( " "));  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  throw  new  IllegalStateException( " "));  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  throw  new  IllegalStateException( " "));	  ex.initCause(fail,    msg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
482	[BUG]  [BUGGY]  ex.initCause(msg,  validateDate(date),  pos);  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  validateDate(date),  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  validateDate(date),  pos);	  ex.initCause(fail,    msg);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
483	[BUG]  [BUGGY]  ex.initCause(msg,  validateDate(date));  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.initCause(msg,  validateDate(date));  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.initCause(msg,  validateDate(date));	  ex.initCause(fail,    msg);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
484	[BUG]  [BUGGY]  if(msg  ==  null  ||  ex.isEmpty())  {  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg  ==  null  ||  ex.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg  ==  null  ||  ex.isEmpty())  {  ex.printStackTrace();  }	  if(msg    ==    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
485	[BUG]  [BUGGY]  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  [CE]  cannot  find  symbol  Ex  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	Ex.println( "Failed  to  parse  date  [ "  +  input  + "]: "  +  msg,  pos.getIndex());  ex.printStackTrace();	  if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg,    pos.getIndex());    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  Ex	84	None	replace
486	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  if(ex  [BUGGY]  null)  {  ex.printStackTrace();  }  [CE]  ')'  expected  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  if(ex  [BUGGY]  null)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=    null)    {    ex.printStackTrace();    }    if(ex  [BUGGY]  null)  {  ex.printStackTrace();  }	  	non-compiled	[CE]  ')'  expected	30	None	add
487	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(msg,  pos);  [CE]  cannot  find  symbol  [FE]                                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseAndIgnoreWhitespace(msg,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseAndIgnoreWhitespace(msg,  pos);	  initCause(msg,    pos);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
488	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  input,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  input,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  input,  pos.getIndex());	  ex.println(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
489	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getStartIndex());  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getStartIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getStartIndex());	  ex.println(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
490	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  this.date.getIndex());  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  this.date.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  this.date.getIndex());	  ex.println(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	72	None	replace
491	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getSourceName());  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getSourceName());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getSourceName());	  ex.println(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
492	[BUG]  [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getLocalMillis());  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getLocalMillis());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.println( "Failed  to  parse  date  [ "+date  + "]:   "  +  msg,  pos.getLocalMillis());	  ex.println(   "Failed    to    parse    date    [   "+date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
493	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  input);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  input);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(msg,  input);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	75	None	replace
494	[BUG]  [BUGGY]  ex.setCause(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.setCause(timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.setCause(timezoneIndicator);	  ex.initCause(ex);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	45	None	replace
495	[BUG]  [BUGGY]  ex.setMillis(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      IllegalArgumentException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  ex.setMillis(timezoneIndicator);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	ex.setMillis(timezoneIndicator);	  ex.initCause(ex);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	45	None	replace
496	[BUG]  [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	JsonSyntaxException  ex  =  new  JsonSyntaxException( "Failed  to  parse  date  [ "  +  date  + "]: "  +  msg,  input,  pos.getIndex());	  JsonSyntaxException    ex    =    new    JsonSyntaxException(   "Failed    to    parse    date    [   "    +    date    +   "]:   "    +    msg,    pos.getIndex());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
497	[BUG]  [BUGGY]  if(msg!=  null  &&  ex.isEmpty())  {  ex.printStackTrace();  }  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  &&  ex.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null  &&  ex.isEmpty())  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
498	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  &&  msg.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null  &&  msg.isEmpty())  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	35	1	replace
499	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.isEmpty())  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  &&  msg.isEmpty())  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null  &&  msg.isEmpty())  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	35	1	replace
500	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	add	if(msg!=  null  &&  msg.length()  >  0)  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	35	1	replace
501	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  ex.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null  &&  msg.length()  >  0)  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.printStackTrace();    }    	compilable	  [FE]  JsonSyntaxException  	35	1	replace
502	[BUG]  [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null  &&  msg.length()  >  0)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null  &&  msg.length()  >  0)  {  ex.initCause(msg);  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  method  initCause  in  class  Throwable  cannot  be  applied  to  given  types;	76	None	replace
503	[BUG]  [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  timezoneIndicator);  }  else  {  ex.printStackTrace();  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(msg!=  null)  {  ex.initCause(msg,  timezoneIndicator);  }  else  {  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(msg!=  null)  {  ex.initCause(msg,  timezoneIndicator);  }  else  {  ex.printStackTrace();  }	  if(msg!=    null)    {    ex.initCause(msg);    }    else    {    ex.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	76	None	replace
504	[BUG]  [BUGGY]  parseAndIgnoreWhitespace(date,  pos);  [CE]  cannot  find  symbol  [FE]                              JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseAndIgnoreWhitespace(date,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseAndIgnoreWhitespace(date,  pos);	  ex.initCause(desc,    pos);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
505	[BUG]  [BUGGY]  parseAndReturn(date,  pos);  [CE]  cannot  find  symbol  [FE]                                JsonSyntaxException      [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  parseAndReturn(date,  pos);  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	parseAndReturn(date,  pos);	  ex.initCause(desc,    pos);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
506	[BUG]  [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }  If(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }  [CE]  [FE]    JsonSyntaxException    [CONTEXT]      fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  ParseException  ex  =  new  ParseException(     "Failed  to  parse  date  [     "  +  input  +       "]:       "  +  msg,  pos.getIndex());      [BUGGY]  if(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println(   "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }  If(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }  [BUGGY]      throw  ex;  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	274	274	1	replace	if(ex!=    null)    {    ex.printStackTrace();    }    else    {    System.err.println(   "Failed    to    parse    date    [   "    +    input    +   "]:   "    +    msg);    ex.printStackTrace();    }    If(ex!=  null)  {  ex.printStackTrace();  }  else  {  System.err.println( "Failed  to  parse  date  [   "  +  input  +   "]:   "  +  msg);  ex.printStackTrace();  }	  	non-compiled	[CE]  	86	None	add
