bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]      pos.setIndex(offset);  return  calendar.getTime();  [CE]  cannot  find  symbol  offset  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]      pos.setIndex(offset);  return  calendar.getTime();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	        pos.setIndex(offset);  return  calendar.getTime();	  	non-compiled	[CE]  cannot  find  symbol  offset	13	None	add
2	[BUG]  [BUGGY]      pos.setStartIndex(offset);  [CE]  cannot  find  symbol  offset  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]      pos.setStartIndex(offset);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	        pos.setStartIndex(offset);	  	non-compiled	[CE]  cannot  find  symbol  offset	13	None	add
3	[BUG]  [BUGGY]      pos.setIndex(offset);  return  Calendar.getInstance();  [CE]  cannot  find  symbol  offset  [FE]        NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]      pos.setIndex(offset);  return  Calendar.getInstance();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	        pos.setIndex(offset);  return  Calendar.getInstance();	  	non-compiled	[CE]  cannot  find  symbol  offset	13	None	add
4	[BUG]  [BUGGY]      pos.setTime(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]      pos.setTime(timezoneIndicator);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	        pos.setTime(timezoneIndicator);	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	13	None	add
5	[BUG]  [BUGGY]      pos.setStartIndex(offset);  return  calendar.getTime();  [CE]  cannot  find  symbol  offset  [FE]            NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]      pos.setStartIndex(offset);  return  calendar.getTime();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	        pos.setStartIndex(offset);  return  calendar.getTime();	  	non-compiled	[CE]  cannot  find  symbol  offset	13	None	add
6	[BUG]  [BUGGY]  if(!hasMillis)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasMillis  [FE]                JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!hasMillis)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasMillis)  {  fail  =  e;  }	  if(!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasMillis	22	None	replace
7	[BUG]  [BUGGY]  if(!hasMilliseconds)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasMilliseconds  [FE]                  JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!hasMilliseconds)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasMilliseconds)  {  fail  =  e;  }	  if(!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasMilliseconds	22	None	replace
8	[BUG]  [BUGGY]  if(!hasNull)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasNull  [FE]                    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!hasNull)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasNull)  {  fail  =  e;  }	  if(!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasNull	22	None	replace
9	[BUG]  [BUGGY]  if(!hasFail)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasFail  [FE]                      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!hasFail)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasFail)  {  fail  =  e;  }	  if(!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasFail	22	None	replace
10	[BUG]  [BUGGY]  if(!fail)  {  fail  =  e;  }  [CE]  bad  operand  type  Exception  for  unary  operator  '!'  [FE]                        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!fail)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!fail)  {  fail  =  e;  }	  if(!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  bad  operand  type  Exception  for  unary  operator  '!'	22	None	replace
11	[BUG]  [BUGGY]  if(!hasTimeZone)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasTimeZone  [FE]                          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!hasTimeZone)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone)  {  fail  =  e;  }	  if(!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	22	None	replace
12	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }	  fail    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	3	None	replace
13	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]            JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  fail    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	3	None	replace
14	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  incompatible  types  [FE]              JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  fail    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	3	None	replace
15	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [CE]  incompatible  types  [FE]                JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }	  fail    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	3	None	replace
16	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [CE]  incompatible  types  [FE]                  JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }	  fail    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	3	None	replace
17	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	19	1	add
18	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	19	1	add
19	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  [CE]  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }	  	non-compiled	[CE]  	19	None	add
20	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	19	1	add
21	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ".   ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	19	1	add
22	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ",   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	19	1	add
23	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ",   ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ",   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	19	1	add
24	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	15	1	add
25	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	15	1	add
26	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  	non-compiled	[CE]  ';'  expected	15	None	add
27	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	15	None	add
28	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  when(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  when(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    when(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  	non-compiled	[CE]  ';'  expected	15	None	add
29	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
30	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException(   "   ");  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException(   "   ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException(   "   ");	  	non-compiled	[CE]  unreachable  statement	9	None	add
31	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  msg  =  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]      IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  msg  =  new  IllegalArgumentException( "   ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwable  msg  =  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	9	None	add
32	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]        IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( "   ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwable  cause  =  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	9	None	add
33	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  cause  =  e.getCause();  [CE]  unreachable  statement  [FE]          IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  cause  =  e.getCause();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwable  cause  =  e.getCause();	  	non-compiled	[CE]  unreachable  statement	9	None	add
34	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  msg  =  e.getMessage();  [CE]  incompatible  types  [FE]            IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  msg  =  e.getMessage();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwable  msg  =  e.getMessage();	  	non-compiled	[CE]  incompatible  types	9	None	add
35	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  null;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  fail  =  null;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	2	1	replace
36	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  null;  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  null;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  null;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	2	1	replace
37	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null)  {  fail  =  null;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	2	1	replace
38	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  null;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	2	1	replace
39	[BUG]  [BUGGY]  ||  e!=  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  ||  e!=  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e!=  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
40	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this);	  if(e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	2	None	replace
41	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Thread.currentThread().setContextClassLoader(timezoneIndicator);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(timezoneIndicator);	  if(e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	2	None	replace
42	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=  null)  {  fail  =  null;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	2	1	replace
43	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  [FE]  NullPointerException  [FE]              JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null)  {  fail  =  null;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	2	1	replace
44	[BUG]  [BUGGY]  [FE]    [FE]                JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Thread.currentThread().interrupt();	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]    	2	1	replace
45	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [FE]    [FE]                JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]    	2	1	replace
46	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	17	1	add
47	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	17	1	add
48	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [CE]  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }	  	non-compiled	[CE]  	17	None	add
49	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	17	1	add
50	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	17	1	add
51	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
52	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
53	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
54	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	1	1	add
55	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    if(e  >=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	1	None	add
56	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e  >>  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e  >>  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    if(e  >>  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	1	None	add
57	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  If(e!=  null)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]            JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  If(e!=  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    If(e!=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ';'  expected	1	None	add
58	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e  [BUGGY]  null)  {  fail  =  e;  }  [CE]  ')'  expected  [FE]              JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e  [BUGGY]  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    if(e  [BUGGY]  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ')'  expected	1	None	add
59	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e  [Delete]  null)  {  fail  =  e;  }  [CE]  ')'  expected  [FE]                JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e  [Delete]  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    if(e  [Delete]  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ')'  expected	1	None	add
60	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  e.printStackTrace();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();    e.printStackTrace();	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
61	[BUG]  [BUGGY]  e.printStackTrace();  e.printStackTrace();  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  e.printStackTrace();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    e.printStackTrace();	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
62	[BUG]  [BUGGY]  e.printStackTrace();  if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  incompatible  types	4	None	add
63	[BUG]  [BUGGY]  e.printStackTrace();  if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  incompatible  types  [FE]        NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  incompatible  types	4	None	add
64	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
65	[BUG]  [BUGGY]  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]          NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
66	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
67	[BUG]  [BUGGY]  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
68	[BUG]  [BUGGY]  e.printStackTrace();  if(e.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]              NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    if(e.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  incompatible  types	4	None	add
69	[BUG]  [BUGGY]  e.printStackTrace();  if(e.printStackTrace())  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  incompatible  types  [FE]                NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.printStackTrace())  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    if(e.printStackTrace())  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  incompatible  types	4	None	add
70	[BUG]  [BUGGY]  e.printStackTrace();  if(e.printStackTrace())  {  e.printStackTrace();  }  [CE]  incompatible  types  [FE]                  NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.printStackTrace())  {  e.printStackTrace();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    if(e.printStackTrace())  {  e.printStackTrace();  }	  	non-compiled	[CE]  incompatible  types	4	None	add
71	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	7	None	replace
72	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( " "));  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( " "));  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( " "));	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
73	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this,  timezoneIndicator);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	7	None	replace
74	[BUG]  [BUGGY]  pos.setIndex(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(timezoneIndicator);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(timezoneIndicator);	  pos.setIndex(outOfBoundsException);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	21	None	replace
75	[BUG]  [BUGGY]  pos.setIndex(input);  [CE]  cannot  find  symbol  input  [FE]                JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(input);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(input);	  pos.setIndex(outOfBoundsException);    	non-compiled	[CE]  cannot  find  symbol  input	21	None	replace
76	[BUG]  [BUGGY]  pos.setIndex(index);  [CE]  cannot  find  symbol  index  [FE]                  JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(index);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(index);	  pos.setIndex(outOfBoundsException);    	non-compiled	[CE]  cannot  find  symbol  index	21	None	replace
77	[BUG]  [BUGGY]  pos.setIndex(ex);  [CE]  cannot  find  symbol  ex  [FE]                    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(ex);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(ex);	  pos.setIndex(outOfBoundsException);    	non-compiled	[CE]  cannot  find  symbol  ex	21	None	replace
78	[BUG]  [BUGGY]  pos.setIndex(outOfMillis);  [CE]  cannot  find  symbol  outOfMillis  [FE]                      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(outOfMillis);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(outOfMillis);	  pos.setIndex(outOfBoundsException);    	non-compiled	[CE]  cannot  find  symbol  outOfMillis	21	None	replace
79	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	11	1	add
80	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	11	1	add
81	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	11	1	add
82	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	11	1	add
83	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    if(e  >=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	11	None	add
84	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  If(e  ==  null)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  If(e  ==  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    If(e  ==  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ';'  expected	11	None	add
85	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  >>  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  >>  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    if(e  >>  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	11	None	add
86	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  [BUGGY]  null)  {  fail  =  e;  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  [BUGGY]  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    if(e  [BUGGY]  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ')'  expected	11	None	add
87	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	16	1	replace
88	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	16	1	replace
89	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	16	None	replace
90	[BUG]  [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  NumberFormatException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	16	None	replace
91	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	16	None	replace
92	[BUG]  [BUGGY]  ||  e  ==  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  ||  e  ==  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  ==  null)  {  fail  =  e;  }	  if(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
93	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	throw  new  IndexOutOfBoundsException( " ");	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  IndexOutOfBoundsException  	18	1	replace
94	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( " ");  [FE]  IndexOutOfBoundsException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IndexOutOfBoundsException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IndexOutOfBoundsException( " ");	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  IndexOutOfBoundsException  	18	1	replace
95	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Throwable  tz  =  e.getCause();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Throwable  tz  =  e.getCause();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  NullPointerException  	18	1	replace
96	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Throwable  tz  =  e.getCause();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e.getCause();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  NullPointerException  	18	1	replace
97	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Thread.currentThread().getContextClassLoader();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Thread.currentThread().getContextClassLoader();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  NullPointerException  	18	1	replace
98	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  [FE]  NullPointerException  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Thread.currentThread().getContextClassLoader();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  NullPointerException  	18	1	replace
99	[BUG]  [BUGGY]  pos.setIndex(e);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(e);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(e);	  pos.setIndex(offset);    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	8	None	replace
100	[BUG]  [BUGGY]  pos.setIndex(date);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                  JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(date);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(date);	  pos.setIndex(offset);    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	8	None	replace
101	[BUG]  [BUGGY]  pos.setIndex(i);  [CE]  cannot  find  symbol  i  [FE]                    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(i);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(i);	  pos.setIndex(offset);    	non-compiled	[CE]  cannot  find  symbol  i	8	None	replace
102	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	6	1	add
103	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	6	1	add
104	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	6	1	add
105	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	6	1	add
106	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  >=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  >=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  >=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  	6	None	add
107	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	6	1	add
108	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	6	1	add
109	[BUG]  [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
110	[BUG]  [BUGGY]  result  =  new  IndexOutOfBoundsException( " ");  [CE]  cannot  find  symbol  result  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  result  =  new  IndexOutOfBoundsException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	result  =  new  IndexOutOfBoundsException( " ");	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  result	20	None	replace
111	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
112	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]      IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!hasT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  hasT	10	None	replace
113	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IllegalStateException  	10	1	replace
114	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [FE]  IllegalStateException  [FE]        IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  IllegalStateException  	10	1	replace
115	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".getMessage());  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " ".getMessage());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
116	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace(System.err);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace(System.err);	  e.printStackTrace();    	compilable	  [FE]  NullPointerException  	5	1	replace
117	[BUG]  [BUGGY]  e.printStackTrace(System.err);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace(System.err);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);	  e.printStackTrace();    	compilable	  [FE]  NullPointerException  	5	1	replace
118	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    	compilable	  [FE]  NullPointerException  	5	1	replace
119	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    	compilable	  [FE]  NullPointerException  	5	1	replace
120	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  e.printStackTrace();  }	  e.printStackTrace();    	compilable	  [FE]  NullPointerException  	5	1	replace
121	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  e.printStackTrace();  }	  e.printStackTrace();    	compilable	  [FE]  NullPointerException  	5	1	replace
122	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    	compilable	  [FE]  NullPointerException  	5	1	replace
123	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    	compilable	  [FE]  NullPointerException  	5	1	replace
124	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]            NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!hasT)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  hasT	5	None	replace
125	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]              NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }	  e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
126	[BUG]  [BUGGY]  StaxUtil.throwIndexOutOfBoundsException( " ");  [CE]  cannot  find  symbol  StaxUtil  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  StaxUtil.throwIndexOutOfBoundsException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	StaxUtil.throwIndexOutOfBoundsException( " ");	  e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	5	None	replace
127	[BUG]  [BUGGY]  StaxUtil.throwIndexOutOfBoundsException(e);  [CE]  cannot  find  symbol  StaxUtil  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  StaxUtil.throwIndexOutOfBoundsException(e);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	StaxUtil.throwIndexOutOfBoundsException(e);	  e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	5	None	replace
128	[BUG]  [BUGGY]  if(!hasT)  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  hasT  [FE]                JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!hasT)  {  fail  =  e.getMessage();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  fail  =  e.getMessage();  }	  if(!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasT	22	None	replace
129	[BUG]  [BUGGY]  if(!hasT)  {  fail  =  e.toString();  }  [CE]  cannot  find  symbol  hasT  [FE]                  JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!hasT)  {  fail  =  e.toString();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  fail  =  e.toString();  }	  if(!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasT	22	None	replace
130	[BUG]  [BUGGY]  if(hasT)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasT  [FE]                    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(hasT)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  fail  =  e;  }	  if(!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasT	22	None	replace
131	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e.getMessage();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  e.getMessage();  }	  fail    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	3	None	replace
132	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  incompatible  types  [FE]            JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  fail    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	3	None	replace
133	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]              JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  fail    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	3	None	replace
134	[BUG]  [BUGGY]  fail  =  e.toString();  [CE]  incompatible  types  [FE]                JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  fail  =  e.toString();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail  =  e.toString();	  fail    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	3	None	replace
135	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  failure  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	1	None	add
136	[BUG]  [BUGGY]      pos.setIndex(outOfBounds);  [CE]  cannot  find  symbol  outOfBounds  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]      pos.setIndex(outOfBounds);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	        pos.setIndex(outOfBounds);	  	non-compiled	[CE]  cannot  find  symbol  outOfBounds	13	None	add
137	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
138	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    JsonSyntaxException  e  =  new  JsonSyntaxException( " ");	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
139	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  e.printStackTrace();  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  e.printStackTrace();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  e.printStackTrace();	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
140	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  e.printStackTrace();  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  e.printStackTrace();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  e.printStackTrace();	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
141	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
142	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [CE]  cannot  find  symbol  [FE]              NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
143	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  [CE]  cannot  find  symbol  [FE]                NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
144	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	16	None	replace
145	[BUG]  [BUGGY]  pos.setIndex(indexOutOfBoundsException);  [CE]  cannot  find  symbol  indexOutOfBoundsException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(indexOutOfBoundsException);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(indexOutOfBoundsException);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  indexOutOfBoundsException	16	None	replace
146	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  NullPointerException  	18	1	replace
147	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  NullPointerException  	18	1	replace
148	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
149	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
150	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
151	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
152	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	18	1	replace
153	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    If(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  	6	None	add
154	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail  ==  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
155	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
156	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	2	1	replace
157	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	2	1	replace
158	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  fail  =  new  NullPointerException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
159	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  new  NullPointerException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
160	[BUG]  [BUGGY]  IllegalArgumentException  e  =  null;  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  IllegalArgumentException  e  =  null;  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  null;	  if(e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	2	None	replace
161	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  {  null)  {  fail  =  e;  }  [CE]  ')'  expected  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  {  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    if(e  {  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ')'  expected	11	None	add
162	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  failure  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	11	None	add
163	[BUG]  [BUGGY]  pos.setIndex(outset);  [CE]  cannot  find  symbol  outset  [FE]              JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(outset);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(outset);	  pos.setIndex(outOfBoundsException);    	non-compiled	[CE]  cannot  find  symbol  outset	21	None	replace
164	[BUG]  [BUGGY]  NullPointerException  e  =  null;  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  NullPointerException  e  =  null;  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointerException  e  =  null;	  if(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	12	None	replace
165	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  NullPointerException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	throw  new  NullPointerException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  NullPointerException  	10	1	replace
166	[BUG]  [BUGGY]  throw  new  NullPointerException( " ");  [FE]  NullPointerException  [FE]    IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  NullPointerException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  NullPointerException( " ");	  throw    new    IllegalArgumentException(   "   ");    	compilable	  [FE]  NullPointerException  	10	1	replace
167	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [CE]  inconvertible  types  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  inconvertible  types	20	None	replace
168	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  fail  =  new  IndexOutOfBoundsException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	fail  =  new  IndexOutOfBoundsException( " ");	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	20	1	replace
169	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException( " ");  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  fail  =  new  IndexOutOfBoundsException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail  =  new  IndexOutOfBoundsException( " ");	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  JsonSyntaxException  	20	1	replace
170	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos);  }  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,ParsePosition)  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos);  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,ParsePosition)	20	None	replace
171	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }  [CE]  cannot  find  symbol  failed  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failed	15	None	add
172	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  for(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  not  a  statement  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  for(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    for(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  	non-compiled	[CE]  not  a  statement	15	None	add
173	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	7	1	replace
174	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	7	1	replace
175	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IndexOutOfBoundsException  	7	1	replace
176	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  IndexOutOfBoundsException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IndexOutOfBoundsException  	7	1	replace
177	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aughtExceptionHandler.throwAsUnquotedException( " ");	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	7	None	replace
178	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
179	[BUG]  [BUGGY]  pos.setIndex(indexOutOfBounds);  [CE]  cannot  find  symbol  indexOutOfBounds  [FE]                JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(indexOutOfBounds);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(indexOutOfBounds);	  pos.setIndex(offset);    	non-compiled	[CE]  cannot  find  symbol  indexOutOfBounds	8	None	replace
180	[BUG]  [BUGGY]  e.printStackTrace(pos);  [CE]  no  suitable  method  found  for  printStackTrace(ParsePosition)  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace(pos);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(pos);	  e.printStackTrace();    	non-compiled	[CE]  no  suitable  method  found  for  printStackTrace(ParsePosition)	5	None	replace
181	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  e.printStackTrace();    	compilable	  [FE]  NullPointerException  	5	1	replace
182	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  e.printStackTrace();    	compilable	  [FE]  NullPointerException  	5	1	replace
183	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  inconvertible  types  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  inconvertible  types	18	None	replace
184	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,IndexOutOfBoundsException)  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,IndexOutOfBoundsException)	18	None	replace
185	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  inconvertible  types  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  inconvertible  types	18	None	replace
186	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }  [CE]  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	18	None	replace
187	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(e);  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Thread.currentThread().getContextClassLoader().report(e);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().report(e);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
188	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e);  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().reportError(e);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
189	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException(   "   ");  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException(   "   ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException(   "   ");	  	non-compiled	[CE]  not  a  statement	9	None	add
190	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  cause  =  e.getMessage();  [CE]  incompatible  types  [FE]      IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  cause  =  e.getMessage();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwable  cause  =  e.getMessage();	  	non-compiled	[CE]  incompatible  types	9	None	add
191	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  ex  =  e.getMessage();  [CE]  incompatible  types  [FE]        IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  ex  =  e.getMessage();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwable  ex  =  e.getMessage();	  	non-compiled	[CE]  incompatible  types	9	None	add
192	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e.getMessage();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e.getMessage();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  incompatible  types	16	None	replace
193	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	16	None	replace
194	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e.toString();  }  [CE]  incompatible  types  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e.toString();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e.toString();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  incompatible  types	16	None	replace
195	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
196	[BUG]  [BUGGY]  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
197	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
198	[BUG]  [BUGGY]  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
199	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
200	[BUG]  [BUGGY]  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]        NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
201	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
202	[BUG]  [BUGGY]  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  JsonSyntaxException  [FE]          NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
203	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
204	[BUG]  [BUGGY]  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]            NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	4	1	add
205	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());  [CE]  cannot  find  symbol  [FE]              NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();    JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
206	[BUG]  [BUGGY]  if(e  ==  null  ||!hasT)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasT  [FE]    NullPointerException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e  ==  null  ||!hasT)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  ||!hasT)  {  fail  =  e;  }	  if(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasT	12	None	replace
207	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	7	1	replace
208	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	7	1	replace
209	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIAE( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  aughtExceptionHandler.throwAsIAE( " ");  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aughtExceptionHandler.throwAsIAE( " ");	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	7	None	replace
210	[BUG]  [BUGGY]  aught(Exception.class,  e.getMessage(),  e);  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  aught(Exception.class,  e.getMessage(),  e);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(Exception.class,  e.getMessage(),  e);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
211	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  Thread.currentThread().getContextClassLoader().process(timezoneIndicator);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().process(timezoneIndicator);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	7	None	replace
212	[BUG]  [BUGGY]  if(!hasTimeZone())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!hasTimeZone())  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone())  {  fail  =  e;  }	  if(!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
213	[BUG]  [BUGGY]  if(!hasTimezoneIndicator)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasTimezoneIndicator  [FE]                  JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!hasTimezoneIndicator)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimezoneIndicator)  {  fail  =  e;  }	  if(!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimezoneIndicator	22	None	replace
214	[BUG]  [BUGGY]  if(!hasDays)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasDays  [FE]                    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(!hasDays)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasDays)  {  fail  =  e;  }	  if(!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasDays	22	None	replace
215	[BUG]  [BUGGY]  e  =  e.getMessage();  [CE]  incompatible  types  [FE]          JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  e  =  e.getMessage();  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e  =  e.getMessage();	  fail    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	3	None	replace
216	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  return  calendar.getTime();  }  [CE]  incompatible  types  [FE]            JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  return  calendar.getTime();  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  return  calendar.getTime();  }	  fail    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	3	None	replace
217	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
218	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	2	1	replace
219	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	2	1	replace
220	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	2	1	replace
221	[BUG]  [BUGGY]  if(e!=  null  &&!e.isEmpty())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  if(e!=  null  &&!e.isEmpty())  {  fail  =  e;  }  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&!e.isEmpty())  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
222	[BUG]  [BUGGY]  pos.setIndex(parseEndOffset);  [CE]  cannot  find  symbol  parseEndOffset  [FE]                JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(parseEndOffset);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(parseEndOffset);	  pos.setIndex(offset);    	non-compiled	[CE]  cannot  find  symbol  parseEndOffset	8	None	replace
223	[BUG]  [BUGGY]  pos.setIndex(parseStartOffset);  [CE]  cannot  find  symbol  parseStartOffset  [FE]                  JsonSyntaxException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  pos.setIndex(parseStartOffset);  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(parseStartOffset);	  pos.setIndex(offset);    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	8	None	replace
224	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(getMessage()));  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(getMessage()));  [BUGGY]    }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('   "'  +  date  +     "'   ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =     "(   "+fail.getClass().getName()+   ")   ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " ".equals(getMessage()));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
