bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reset();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reset();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().reset();	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
2	[BUG]  [BUGGY]  Throwables.throw  new  IndexOutOfBoundsException( " ");  [CE]  <identifier>  expected  [FE]        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwables.throw  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwables.throw  new  IndexOutOfBoundsException( " ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
3	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "),  e);  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwables.throw  new  IllegalArgumentException( " "),  e);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
4	[BUG]  [BUGGY]  ParsePosition.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ParsePosition.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ParsePosition.throw  new  IllegalArgumentException( " ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
5	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  e);  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwables.throw  new  IllegalArgumentException( " ",  e);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
6	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [CE]  <identifier>  expected  [FE]                IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwables.throw  new  IllegalArgumentException( " ".getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
7	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                  IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwables.throw  new  IllegalStateException( " ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
8	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail!=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=    null)    {    fail    =    null;    }    if(fail!=  null)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	42	1	add
9	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail!=  null)  {  fail  =  null;  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail!=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    null;    }    if(fail!=  null)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	42	1	add
10	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail  ==  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=    null)    {    fail    =    null;    }    if(fail  ==  null)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	42	1	add
11	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail  ==  null)  {  fail  =  null;  }  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail  ==  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    null;    }    if(fail  ==  null)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	42	1	add
12	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail  >=  null)  {  fail  =  null;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail  >=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    null;    }    if(fail  >=  null)  {  fail  =  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	42	None	add
13	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail  >>  null)  {  fail  =  null;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail  >>  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    null;    }    if(fail  >>  null)  {  fail  =  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	42	None	add
14	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  If(fail!=  null)  {  fail  =  null;  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  If(fail!=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    null;    }    If(fail!=  null)  {  fail  =  null;  }	  	non-compiled	[CE]  ';'  expected	42	None	add
15	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail  [BUGGY]  null)  {  fail  =  null;  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail  [BUGGY]  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    null;    }    if(fail  [BUGGY]  null)  {  fail  =  null;  }	  	non-compiled	[CE]  ')'  expected	42	None	add
16	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  TimeZone(timezoneIndicator,  pos));  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContext(new  TimeZone(timezoneIndicator,  pos));  [BUGGY]    null)  {  fail  =  e;  }  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  TimeZone(timezoneIndicator,  pos));	  if(e    ==    null)    {    fail    =    e;    }    if(e    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	86	None	replace
17	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  TimeZone(timezoneIndicator));  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  TimeZone(timezoneIndicator));  [BUGGY]    null)  {  fail  =  e;  }  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(new  TimeZone(timezoneIndicator));	  if(e    ==    null)    {    fail    =    e;    }    if(e    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	86	None	replace
18	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  pos);  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().reportError(e,  pos);	  Thread.currentThread().getContextClassLoader().reportError(e);    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
19	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  e);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().reportError(e,  e);	  Thread.currentThread().getContextClassLoader().reportError(e);    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
20	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  msg);  [CE]  cannot  find  symbol  msg  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  msg);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().reportError(e,  msg);	  Thread.currentThread().getContextClassLoader().reportError(e);    	non-compiled	[CE]  cannot  find  symbol  msg	188	None	replace
21	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  ex);  [CE]  cannot  find  symbol  ex  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  ex);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().reportError(e,  ex);	  Thread.currentThread().getContextClassLoader().reportError(e);    	non-compiled	[CE]  cannot  find  symbol  ex	188	None	replace
22	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  act);  [CE]  cannot  find  symbol  act  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  act);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().reportError(e,  act);	  Thread.currentThread().getContextClassLoader().reportError(e);    	non-compiled	[CE]  cannot  find  symbol  act	188	None	replace
23	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  tz);  [CE]  cannot  find  symbol  tz  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  tz);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().reportError(e,  tz);	  Thread.currentThread().getContextClassLoader().reportError(e);    	non-compiled	[CE]  cannot  find  symbol  tz	188	None	replace
24	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException(   "   ");  [CE]  unreachable  statement  [FE]    IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException(   "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    throw  new  IndexOutOfBoundsException(   "   ");	  	non-compiled	[CE]  unreachable  statement	93	None	add
25	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  Throw  new  IndexOutOfBoundsException(   "   ");  [CE]  not  a  statement  [FE]      IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  Throw  new  IndexOutOfBoundsException(   "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    Throw  new  IndexOutOfBoundsException(   "   ");	  	non-compiled	[CE]  not  a  statement	93	None	add
26	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  Throwable  cause  =  new  IndexOutOfBoundsException(   "   ");  [CE]  unreachable  statement  [FE]        IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  Throwable  cause  =  new  IndexOutOfBoundsException(   "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    Throwable  cause  =  new  IndexOutOfBoundsException(   "   ");	  	non-compiled	[CE]  unreachable  statement	93	None	add
27	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException(' ");  [CE]  unclosed  character  literal  [FE]          IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException(' ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    throw  new  IndexOutOfBoundsException(' ");	  	non-compiled	[CE]  unclosed  character  literal	93	None	add
28	[BUG]  [BUGGY]  pos.setStartIndex(date);  return  calendar.getTime();  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(date);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(date);  return  calendar.getTime();	          pos.setStartIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
29	[BUG]  [BUGGY]  pos.setStartIndex(startOffset);  return  calendar.getTime();  [CE]  cannot  find  symbol  startOffset  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(startOffset);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(startOffset);  return  calendar.getTime();	          pos.setStartIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  startOffset	5	None	replace
30	[BUG]  [BUGGY]  pos.setStartIndex(endOffset);  return  calendar.getTime();  [CE]  cannot  find  symbol  endOffset  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(endOffset);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(endOffset);  return  calendar.getTime();	          pos.setStartIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  endOffset	5	None	replace
31	[BUG]  [BUGGY]  pos.setStartIndex(timezoneIndicator);  return  calendar.getTime();  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(timezoneIndicator);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(timezoneIndicator);  return  calendar.getTime();	          pos.setStartIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	5	None	replace
32	[BUG]  [BUGGY]  pos.setStartIndex(-1);  return  calendar.getTime();  [CE]  cannot  find  symbol  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(-1);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(-1);  return  calendar.getTime();	          pos.setStartIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
33	[BUG]  [BUGGY]  pos.setStartIndex(input);  return  calendar.getTime();  [CE]  cannot  find  symbol  input  [FE]                          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(input);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(input);  return  calendar.getTime();	          pos.setStartIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  input	5	None	replace
34	[BUG]  [BUGGY]  [FE]    [FE]        [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();	  	compilable	  [FE]    	44	1	add
35	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  [FE]    [FE]        [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();	  	compilable	  [FE]    	44	1	add
36	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  [CE]  unreachable  statement  [FE]          [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  unreachable  statement	44	None	add
37	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	44	None	add
38	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  pos.setTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  pos.setTimeZone(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();  pos.setTimeZone(timezoneIndicator);	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	44	None	add
39	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  this.timezoneIndicator  =  tz.getTimezoneIndicator();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  this.timezoneIndicator  =  tz.getTimezoneIndicator();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();  this.timezoneIndicator  =  tz.getTimezoneIndicator();	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	44	None	add
40	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  thread.currentThread().interrupt();  [CE]  cannot  find  symbol  thread  [FE]                  [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  thread.currentThread().interrupt();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    thread.currentThread().interrupt();	  	non-compiled	[CE]  cannot  find  symbol  thread	44	None	add
41	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	44	None	add
42	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  }  catch(Exception  e)  {  throw  new  IllegalStateException( " ");  [CE]  unreachable  statement  [FE]                      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  }  catch(Exception  e)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();  }  catch(Exception  e)  {  throw  new  IllegalStateException( " ");	  	non-compiled	[CE]  unreachable  statement	44	None	add
43	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  NullPointerException  	198	1	replace
44	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  NullPointerException  	198	1	replace
45	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	198	None	replace
46	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null)  {  e.printStackTrace();  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  NullPointerException  	198	1	replace
47	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [FE]  NullPointerException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  e.printStackTrace();  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  NullPointerException  	198	1	replace
48	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  if(e.getMessage()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	198	None	replace
49	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	198	1	replace
50	[BUG]  [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	198	1	replace
51	[BUG]  [BUGGY]  if(!hasMillis)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasMillis  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasMillis)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasMillis)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasMillis	124	None	replace
52	[BUG]  [BUGGY]  if(!hasMilliseconds)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasMilliseconds  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasMilliseconds)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasMilliseconds)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasMilliseconds	124	None	replace
53	[BUG]  [BUGGY]  if(!hasNull)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasNull  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasNull)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasNull)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasNull	124	None	replace
54	[BUG]  [BUGGY]  if(!hasFailed)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasFailed  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasFailed)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasFailed)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasFailed	124	None	replace
55	[BUG]  [BUGGY]  if(!hasT)  {  pos.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  pos.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  pos.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	124	None	replace
56	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]                          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  }	  if(!hasT)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	124	None	replace
57	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  UnsupportedOperationException( " ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  UnsupportedOperationException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  UnsupportedOperationException( " ");	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
58	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  JsonSyntaxException( " ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  JsonSyntaxException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  JsonSyntaxException( " ");	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
59	[BUG]  [BUGGY]  IllegalArgumentException  e  =  NON_GLOBAL_EXPR_RESULT;  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  NON_GLOBAL_EXPR_RESULT;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  NON_GLOBAL_EXPR_RESULT;	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
60	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( " ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  IllegalArgumentException( " ");	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
61	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  ParseException( " ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  ParseException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  ParseException( " ");	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
62	[BUG]  [BUGGY]  IllegalArgumentException  e  =  JsonSyntaxException.from(pos);  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  JsonSyntaxException.from(pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  JsonSyntaxException.from(pos);	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
63	[BUG]  [BUGGY]  if(!hasMillis)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasMillis  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasMillis)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasMillis)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasMillis	112	None	replace
64	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	112	None	replace
65	[BUG]  [BUGGY]  if(!hasNull)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasNull  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasNull)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasNull)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasNull	112	None	replace
66	[BUG]  [BUGGY]  if(!hasMilliseconds)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasMilliseconds  [FE]                IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasMilliseconds)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasMilliseconds)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasMilliseconds	112	None	replace
67	[BUG]  [BUGGY]  if(!hasFailed)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasFailed  [FE]                  IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasFailed)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasFailed)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasFailed	112	None	replace
68	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]                    IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	112	None	replace
69	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	104	1	add
70	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	104	1	add
71	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	104	1	add
72	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	104	1	add
73	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	104	1	add
74	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	104	1	add
75	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	104	1	add
76	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	104	1	add
77	[BUG]  [BUGGY]  reason(e)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  reason(e)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	reason(e)  {  fail  =  e;  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    >>    null)    {    fail    =    e;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
78	[BUG]  [BUGGY]  reason(e)  {  fail  =  null;  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  reason(e)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	reason(e)  {  fail  =  null;  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    >>    null)    {    fail    =    e;    }    	non-compiled	[CE]  ';'  expected	85	None	replace
79	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  reason:  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	reason:  e.printStackTrace();	  if(e    ==    null)    {    fail    =    e;    }    if(e    >>    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	85	1	replace
80	[BUG]  [BUGGY]  reason:  e.printStackTrace();  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  reason:  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	reason:  e.printStackTrace();	  if(e    ==    null)    {    fail    =    e;    }    if(e    >>    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	85	1	replace
81	[BUG]  [BUGGY]  because(!hasT)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  because(!hasT)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	because(!hasT)  {  fail  =  e;  }	  if(!hasDays)    {    fail    =    e;    }    	non-compiled	[CE]  ';'  expected	214	None	replace
82	[BUG]  [BUGGY]  illegalArgumentException.printStackTrace();  [CE]  cannot  find  symbol  illegalArgumentException  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  illegalArgumentException.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	illegalArgumentException.printStackTrace();	  if(!hasDays)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  illegalArgumentException	214	None	replace
83	[BUG]  [BUGGY]  if(!hasDays)  {  fail  =  null;  }  [CE]  cannot  find  symbol  hasDays  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasDays)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasDays)  {  fail  =  null;  }	  if(!hasDays)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasDays	214	None	replace
84	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  pos);  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().report(e,  pos);	  Thread.currentThread().getContextClassLoader().report(e);    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
85	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  msg);  [CE]  cannot  find  symbol  msg  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  msg);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().report(e,  msg);	  Thread.currentThread().getContextClassLoader().report(e);    	non-compiled	[CE]  cannot  find  symbol  msg	187	None	replace
86	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  this);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().report(e,  this);	  Thread.currentThread().getContextClassLoader().report(e);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	187	None	replace
87	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  c);  [CE]  cannot  find  symbol  c  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  c);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().report(e,  c);	  Thread.currentThread().getContextClassLoader().report(e);    	non-compiled	[CE]  cannot  find  symbol  c	187	None	replace
88	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  hasT);  [CE]  cannot  find  symbol  hasT  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  hasT);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().report(e,  hasT);	  Thread.currentThread().getContextClassLoader().report(e);    	non-compiled	[CE]  cannot  find  symbol  hasT	187	None	replace
89	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  TimeZone.UTC);  [CE]  cannot  find  symbol  UTC  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  TimeZone.UTC);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().report(e,  TimeZone.UTC);	  Thread.currentThread().getContextClassLoader().report(e);    	non-compiled	[CE]  cannot  find  symbol  UTC	187	None	replace
90	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	17	1	add
91	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	17	1	add
92	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  if(e  instance  [CE]  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  if(e  instance  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  if(e  instance	  	non-compiled	[CE]  	17	None	add
93	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(  [CE]  ')'  expected  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(	  	non-compiled	[CE]  ')'  expected	17	None	add
94	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail  ==  null)  {  fail  =  null;  }	  if(e!=    null)    {    fail    =    null;    }    	compilable	  [FE]  NullPointerException  	36	1	replace
95	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  null;  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null)  {  fail  =  null;  }	  if(e!=    null)    {    fail    =    null;    }    	compilable	  [FE]  NullPointerException  	36	1	replace
96	[BUG]  [BUGGY]  ||  e!=  null)  {  fail  =  null;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e!=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e!=  null)  {  fail  =  null;  }	  if(e!=    null)    {    fail    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
97	[BUG]  [BUGGY]  pos.setIndex(outOfSecond);  [CE]  cannot  find  symbol  outOfSecond  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(outOfSecond);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(outOfSecond);	          pos.setIndex(outOfBounds);    	non-compiled	[CE]  cannot  find  symbol  outOfSecond	136	None	replace
98	[BUG]  [BUGGY]  pos.setIndex(outOfSeconds);  [CE]  cannot  find  symbol  outOfSeconds  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(outOfSeconds);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(outOfSeconds);	          pos.setIndex(outOfBounds);    	non-compiled	[CE]  cannot  find  symbol  outOfSeconds	136	None	replace
99	[BUG]  [BUGGY]  pos.setStartIndex(date);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(date);	          pos.setStartIndex(offset);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
100	[BUG]  [BUGGY]  pos.setStartIndex(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(timezoneIndicator);	          pos.setStartIndex(offset);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	2	None	replace
101	[BUG]  [BUGGY]  pos.setStartIndex(e);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(e);	          pos.setStartIndex(offset);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
102	[BUG]  [BUGGY]  pos.setStartIndex(input);  [CE]  cannot  find  symbol  input  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(input);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(input);	          pos.setStartIndex(offset);    	non-compiled	[CE]  cannot  find  symbol  input	2	None	replace
103	[BUG]  [BUGGY]  pos.setStartIndex(index);  [CE]  cannot  find  symbol  index  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(index);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(index);	          pos.setStartIndex(offset);    	non-compiled	[CE]  cannot  find  symbol  index	2	None	replace
104	[BUG]  [BUGGY]  pos.setStartIndex(timezoneId);  [CE]  cannot  find  symbol  timezoneId  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(timezoneId);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(timezoneId);	          pos.setStartIndex(offset);    	non-compiled	[CE]  cannot  find  symbol  timezoneId	2	None	replace
105	[BUG]  [BUGGY]  Thread.currentThread().interrupt(e);  [CE]  method  interrupt  in  class  Thread  cannot  be  applied  to  given  types;  [FE]        [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt(e);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  method  interrupt  in  class  Thread  cannot  be  applied  to  given  types;	45	None	replace
106	[BUG]  [BUGGY]  Thread.sleep(5  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]          [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.sleep(5  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.sleep(5  *  DateTimeConstants.MILLIS_PER_SECOND);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	45	None	replace
107	[BUG]  [BUGGY]  Thread.sleep(5  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]            [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.sleep(5  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.sleep(5  *  DateTimeConstants.MILLIS_PER_DAY);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	45	None	replace
108	[BUG]  [BUGGY]  Thread.sleep(5  *  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]              [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.sleep(5  *  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.sleep(5  *  DateTimeConstants.MILLIS_PER_MINUTE);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	45	None	replace
109	[BUG]  [BUGGY]  Thread.sleep(5  *  DateTimeConstants.SECONDS_PER_WEEK);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.sleep(5  *  DateTimeConstants.SECONDS_PER_WEEK);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.sleep(5  *  DateTimeConstants.SECONDS_PER_WEEK);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	45	None	replace
110	[BUG]  [BUGGY]  Thread.sleep(5  *  DateTimeConstants.SECONDS_PER_MINUTE);  [CE]  cannot  find  symbol  DateTimeConstants  [FE]                  [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.sleep(5  *  DateTimeConstants.SECONDS_PER_MINUTE);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.sleep(5  *  DateTimeConstants.SECONDS_PER_MINUTE);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  cannot  find  symbol  DateTimeConstants	45	None	replace
111	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException(e));  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException(e));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException(e));	  if(e!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
112	[BUG]  [BUGGY]  aught(e.getMessage(),  e);  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e.getMessage(),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e.getMessage(),  e);	  if(e!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
113	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	89	None	replace
114	[BUG]  [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
115	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  null;  }  [CE]  inconvertible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  null;  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	89	None	replace
116	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e.getMessage();  }  [CE]  inconvertible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e.getMessage();  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	89	None	replace
117	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  JsonNull.createJsonNull();  }  [CE]  inconvertible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  JsonNull.createJsonNull();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  JsonNull.createJsonNull();  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	89	None	replace
118	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  UTC_ID;  }  [CE]  inconvertible  types  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  UTC_ID;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  UTC_ID;  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	89	None	replace
119	[BUG]  [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException;  [CE]  incompatible  types  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  e  instanceof  IndexOutOfBoundsException;	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  incompatible  types	184	None	replace
120	[BUG]  [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException;  [CE]  incompatible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e  instanceof  IndexOutOfBoundsException;	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  incompatible  types	184	None	replace
121	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( " ",  e);  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,IndexOutOfBoundsException)  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException( " ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IndexOutOfBoundsException( " ",  e);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,IndexOutOfBoundsException)	184	None	replace
122	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null)  {  e.printStackTrace();  }	  e.printStackTrace();    if(e!=    null)    {    e.printStackTrace();    }    	compilable	  [FE]  NullPointerException  	204	1	replace
123	[BUG]  [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  e.printStackTrace();  }	  e.printStackTrace();    if(e!=    null)    {    e.printStackTrace();    }    	compilable	  [FE]  NullPointerException  	204	1	replace
124	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [CE]  not  a  statement  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  not  a  statement	153	None	replace
125	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(e)  {  [CE]  ';'  expected  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(e)  {  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(e)  {	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  ';'  expected	153	None	replace
126	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(e)  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(e)  {  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(e)  {	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  ';'  expected	153	None	replace
127	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get();  [CE]  cannot  find  symbol  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get();	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger	153	None	replace
128	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori().add(e);  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori().add(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori().add(e);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
129	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori();  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori();	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
130	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(e  =UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [CE]  ')'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(e  =UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.get(e  =UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  ')'  expected	153	None	replace
131	[BUG]  [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
132	[BUG]  [BUGGY]  aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
133	[BUG]  [BUGGY]  aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
134	[BUG]  [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " "  +  msg.getMessage());  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " "  +  msg.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " "  +  msg.getMessage());  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
135	[BUG]  [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ").getMessage();  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ").getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ").getMessage();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
136	[BUG]  [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
137	[BUG]  [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
138	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  NullPointerException  	202	1	replace
139	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  NullPointerException  	202	1	replace
140	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  throw  new  IllegalStateException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	202	None	replace
141	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  if(e.getMessage()  ==  null)  {  throw  new  IllegalStateException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	202	None	replace
142	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	175	1	add
143	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	175	1	add
144	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	175	1	add
145	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	175	1	add
146	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  If(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [CE]  [FE]        IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  If(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    If(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }	  	non-compiled	[CE]  	175	None	add
147	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.out);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace(System.out);	  e.printStackTrace(System.err);    	compilable	  [FE]  NullPointerException  	117	1	replace
148	[BUG]  [BUGGY]  e.printStackTrace(System.out);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.out);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.out);	  e.printStackTrace(System.err);    	compilable	  [FE]  NullPointerException  	117	1	replace
149	[BUG]  [BUGGY]  e.printStackTrace(TimeZone.getDefault());  [CE]  no  suitable  method  found  for  printStackTrace(TimeZone)  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(TimeZone.getDefault());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(TimeZone.getDefault());	  e.printStackTrace(System.err);    	non-compiled	[CE]  no  suitable  method  found  for  printStackTrace(TimeZone)	117	None	replace
150	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  System.err.println( "Unexpected  error: "  +  e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	System.err.println( "Unexpected  error: "  +  e.getMessage());	  e.printStackTrace(System.err);    	compilable	  [FE]  NullPointerException  	117	1	replace
151	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  e.getMessage());  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  System.err.println( "Unexpected  error: "  +  e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	System.err.println( "Unexpected  error: "  +  e.getMessage());	  e.printStackTrace(System.err);    	compilable	  [FE]  NullPointerException  	117	1	replace
152	[BUG]  [BUGGY]  Error.println( "Unexpected  error: "  +  e.getMessage());  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Error.println( "Unexpected  error: "  +  e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Error.println( "Unexpected  error: "  +  e.getMessage());	  e.printStackTrace(System.err);    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
153	[BUG]  [BUGGY]  Throwable  ex  =  e.getMessage();  [CE]  incompatible  types  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  ex  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  ex  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    ex    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	191	None	replace
154	[BUG]  [BUGGY]  char  ex  =  e.getMessage();  [CE]  incompatible  types  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  char  ex  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	char  ex  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    ex    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	191	None	replace
155	[BUG]  [BUGGY]  IllegalArgumentException  e  =  null;  throw  new  IllegalArgumentException( " ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  null;  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  null;  throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    ex    =    e.getMessage();    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	191	None	replace
156	[BUG]  [BUGGY]  IllegalArgumentException  e  =  null;  Throwable  ex  =  e.getMessage();  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  null;  Throwable  ex  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  null;  Throwable  ex  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    ex    =    e.getMessage();    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	191	None	replace
157	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  String  ex  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	String  ex  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    ex    =    e.getMessage();    	compilable	  [FE]  NullPointerException  	191	1	replace
158	[BUG]  [BUGGY]  String  ex  =  e.getMessage();  [FE]  NullPointerException  [FE]                    IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  String  ex  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	String  ex  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    ex    =    e.getMessage();    	compilable	  [FE]  NullPointerException  	191	1	replace
159	[BUG]  [BUGGY]  assistExceptionHandler.throwAsIAE( " ");  [CE]  cannot  find  symbol  assistExceptionHandler  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  assistExceptionHandler.throwAsIAE( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	assistExceptionHandler.throwAsIAE( " ");	  aughtExceptionHandler.throwAsIAE(   "   ");    	non-compiled	[CE]  cannot  find  symbol  assistExceptionHandler	209	None	replace
160	[BUG]  [BUGGY]  msg.throwAsIAE( " ");  [CE]  cannot  find  symbol  msg  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  msg.throwAsIAE( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	msg.throwAsIAE( " ");	  aughtExceptionHandler.throwAsIAE(   "   ");    	non-compiled	[CE]  cannot  find  symbol  msg	209	None	replace
161	[BUG]  [BUGGY]  tz.throwAsIAE( " ");  [CE]  cannot  find  symbol  tz  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  tz.throwAsIAE( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	tz.throwAsIAE( " ");	  aughtExceptionHandler.throwAsIAE(   "   ");    	non-compiled	[CE]  cannot  find  symbol  tz	209	None	replace
162	[BUG]  [BUGGY]  pos.throwAsIAE( " ");  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.throwAsIAE( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.throwAsIAE( " ");	  aughtExceptionHandler.throwAsIAE(   "   ");    	non-compiled	[CE]  cannot  find  symbol	209	None	replace
163	[BUG]  [BUGGY]  reason(e.getMessage()))  {  fail  =  e;  }  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  reason(e.getMessage()))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	reason(e.getMessage()))  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    if(e    >=    null)    {    fail    =    e;    }    	non-compiled	[CE]  ';'  expected	55	None	replace
164	[BUG]  [BUGGY]  StaxUtil.throwIndexOutOfBoundsException(e,  pos);  [CE]  cannot  find  symbol  StaxUtil  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  StaxUtil.throwIndexOutOfBoundsException(e,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	StaxUtil.throwIndexOutOfBoundsException(e,  pos);	  StaxUtil.throwIndexOutOfBoundsException(e);    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	127	None	replace
165	[BUG]  [BUGGY]  ParseUtil.throwIndexOutOfBoundsException(e);  [CE]  cannot  find  symbol  ParseUtil  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ParseUtil.throwIndexOutOfBoundsException(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ParseUtil.throwIndexOutOfBoundsException(e);	  StaxUtil.throwIndexOutOfBoundsException(e);    	non-compiled	[CE]  cannot  find  symbol  ParseUtil	127	None	replace
166	[BUG]  [BUGGY]  MutableStaxUtils.throwIndexOutOfBoundsException(e);  [CE]  cannot  find  symbol  MutableStaxUtils  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableStaxUtils.throwIndexOutOfBoundsException(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableStaxUtils.throwIndexOutOfBoundsException(e);	  StaxUtil.throwIndexOutOfBoundsException(e);    	non-compiled	[CE]  cannot  find  symbol  MutableStaxUtils	127	None	replace
167	[BUG]  [BUGGY]  Helper.throwIndexOutOfBoundsException(e,  pos);  [CE]  cannot  find  symbol  Helper  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Helper.throwIndexOutOfBoundsException(e,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Helper.throwIndexOutOfBoundsException(e,  pos);	  StaxUtil.throwIndexOutOfBoundsException(e);    	non-compiled	[CE]  cannot  find  symbol  Helper	127	None	replace
168	[BUG]  [BUGGY]  ParseUtil.throwIndexOutOfBoundsException(e,  pos);  [CE]  cannot  find  symbol  ParseUtil  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ParseUtil.throwIndexOutOfBoundsException(e,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ParseUtil.throwIndexOutOfBoundsException(e,  pos);	  StaxUtil.throwIndexOutOfBoundsException(e);    	non-compiled	[CE]  cannot  find  symbol  ParseUtil	127	None	replace
169	[BUG]  [BUGGY]  Helper.throwIndexOutOfBoundsException(e);  [CE]  cannot  find  symbol  Helper  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Helper.throwIndexOutOfBoundsException(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Helper.throwIndexOutOfBoundsException(e);	  StaxUtil.throwIndexOutOfBoundsException(e);    	non-compiled	[CE]  cannot  find  symbol  Helper	127	None	replace
170	[BUG]  [BUGGY]  pos.setIndex(offset,  e);  [CE]  cannot  find  symbol  offset  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(offset,  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(offset,  e);	  pos.setIndex(e);    	non-compiled	[CE]  cannot  find  symbol  offset	99	None	replace
171	[BUG]  [BUGGY]  pos.setIndex(date,  e);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(date,  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(date,  e);	  pos.setIndex(e);    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	99	None	replace
172	[BUG]  [BUGGY]  pos.setIndex(timezoneIndicator,  e);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(timezoneIndicator,  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(timezoneIndicator,  e);	  pos.setIndex(e);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	99	None	replace
173	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
174	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
175	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	64	None	add
176	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	64	1	add
177	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  IndexOutOfBoundsException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	64	1	add
178	[BUG]  [BUGGY]  if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	63	None	replace
179	[BUG]  [BUGGY]  if(e.printStackTrace())  {  e.printStackTrace();  }  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.printStackTrace())  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.printStackTrace())  {  e.printStackTrace();  }	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	63	None	replace
180	[BUG]  [BUGGY]  if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  incompatible  types  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	63	None	replace
181	[BUG]  [BUGGY]  if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [CE]  incompatible  types  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	63	None	replace
182	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Thread.currentThread().getContextClassLoader();    Thread.currentThread().getContextClassLoader();	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
183	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    Thread.currentThread().getContextClassLoader();	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
184	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  thread.currentThread().getContextClassLoader();  [CE]  cannot  find  symbol  thread  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  thread.currentThread().getContextClassLoader();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    thread.currentThread().getContextClassLoader();	  	non-compiled	[CE]  cannot  find  symbol  thread	97	None	add
185	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  pos.setIndex(offset);  [CE]  cannot  find  symbol  offset  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  pos.setIndex(offset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    Thread.currentThread().getContextClassLoader();  pos.setIndex(offset);	  	non-compiled	[CE]  cannot  find  symbol  offset	97	None	add
186	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Thread.currentThread().getContextClassLoader();    Thread.currentThread().getContextClassLoader();  e.printStackTrace();	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
187	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  e.printStackTrace();  [FE]  JsonSyntaxException  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    Thread.currentThread().getContextClassLoader();  e.printStackTrace();	  	compilable	  [FE]  JsonSyntaxException  	97	1	add
188	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    Thread.currentThread().getContextClassLoader();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	97	None	add
189	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  this.timezoneIndicator  =  DateUtils.getTimeZone(timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  this.timezoneIndicator  =  DateUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    Thread.currentThread().getContextClassLoader();  this.timezoneIndicator  =  DateUtils.getTimeZone(timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	97	None	add
190	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  this.timezoneIndicator  =  new  TimeZone(TimeZone.getDefault(),  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  this.timezoneIndicator  =  new  TimeZone(TimeZone.getDefault(),  timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    Thread.currentThread().getContextClassLoader();  this.timezoneIndicator  =  new  TimeZone(TimeZone.getDefault(),  timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	97	None	add
191	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  thread.getCurrentThread().getContextClassLoader();  [CE]  cannot  find  symbol  thread  [FE]                  NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  thread.getCurrentThread().getContextClassLoader();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    thread.getCurrentThread().getContextClassLoader();	  	non-compiled	[CE]  cannot  find  symbol  thread	97	None	add
192	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.toString();  }	  fail    =    e.toString();    	non-compiled	[CE]  incompatible  types	134	None	replace
193	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  fail    =    e.toString();    	non-compiled	[CE]  incompatible  types	134	None	replace
194	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  fail    =    e.toString();    	non-compiled	[CE]  incompatible  types	134	None	replace
195	[BUG]  [BUGGY]  fail  =  e.toString()  + ": ";  [CE]  incompatible  types  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  e.toString()  + ": ";  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail  =  e.toString()  + ": ";	  fail    =    e.toString();    	non-compiled	[CE]  incompatible  types	134	None	replace
196	[BUG]  [BUGGY]  fail  =  e.toString()  + ": "+e.toString();  [CE]  incompatible  types  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  e.toString()  + ": "+e.toString();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail  =  e.toString()  + ": "+e.toString();	  fail    =    e.toString();    	non-compiled	[CE]  incompatible  types	134	None	replace
197	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException(   "   ");  [CE]  unreachable  statement  [FE]    IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException(   "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException(   "   ");	  	non-compiled	[CE]  unreachable  statement	113	None	add
198	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  msg  =  new  IllegalStateException( "   ");  [CE]  unreachable  statement  [FE]      IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  msg  =  new  IllegalStateException( "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalStateException(   "   ");    Throwable  msg  =  new  IllegalStateException( "   ");	  	non-compiled	[CE]  unreachable  statement	113	None	add
199	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  cause  =  new  IllegalStateException( "   ");  [CE]  unreachable  statement  [FE]        IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  cause  =  new  IllegalStateException( "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalStateException(   "   ");    Throwable  cause  =  new  IllegalStateException( "   ");	  	non-compiled	[CE]  unreachable  statement	113	None	add
200	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  cause  =  e.getCause();  [CE]  unreachable  statement  [FE]          IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  cause  =  e.getCause();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalStateException(   "   ");    Throwable  cause  =  e.getCause();	  	non-compiled	[CE]  unreachable  statement	113	None	add
201	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwables.throw  new  IllegalStateException( "   ");  [CE]  <identifier>  expected  [FE]            IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwables.throw  new  IllegalStateException( "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalStateException(   "   ");    Throwables.throw  new  IllegalStateException( "   ");	  	non-compiled	[CE]  <identifier>  expected	113	None	add
202	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  msg  =  e.getMessage();  [CE]  incompatible  types  [FE]              IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  msg  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalStateException(   "   ");    Throwable  msg  =  e.getMessage();	  	non-compiled	[CE]  incompatible  types	113	None	add
203	[BUG]  [BUGGY]  (e.getMessage()!=  null)?  null  :  e.getMessage();  [CE]  not  a  statement  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  (e.getMessage()!=  null)?  null  :  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	(e.getMessage()!=  null)?  null  :  e.getMessage();	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	13	None	replace
204	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
205	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
206	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ",  e);  }  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ",  e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ",  e);  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	13	None	replace
207	[BUG]  [BUGGY]  (e.getMessage()!=  null)?  null  :  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  not  a  statement  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  (e.getMessage()!=  null)?  null  :  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	(e.getMessage()!=  null)?  null  :  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  not  a  statement	13	None	replace
208	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  if(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	67	None	replace
209	[BUG]  [BUGGY]  if(hasT)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	67	None	replace
210	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	102	1	add
211	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	102	1	add
212	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	102	1	add
213	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	102	1	add
214	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	102	1	add
215	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	102	1	add
216	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	102	None	add
217	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	199	1	add
218	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	199	1	add
219	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	199	1	add
220	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	199	1	add
221	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    if(e.getMessage()!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	199	1	add
222	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    if(e.getMessage()!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	199	1	add
223	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()  >=  null)  {  e.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()  >=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e.getMessage()  >=  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	199	None	add
224	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()  >>  null)  {  e.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()  >>  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e.getMessage()  >>  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	199	None	add
225	[BUG]  [BUGGY]  timeout  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  System.exit(0);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  System.exit(0);  }	  	compilable	timeout	199	1	add
226	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  System.exit(0);  }  timeout  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  System.exit(0);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  System.exit(0);  }	  	compilable	timeout	199	1	add
227	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  ||  e.getMessage()!=  null)  {  e.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  ||  e.getMessage()!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    ||  e.getMessage()!=  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  illegal  start  of  expression	199	None	add
228	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }	  e.printStackTrace();    e.printStackTrace();    	compilable	  [FE]  NullPointerException  	61	1	replace
229	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }	  e.printStackTrace();    e.printStackTrace();    	compilable	  [FE]  NullPointerException  	61	1	replace
230	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  e.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  e.printStackTrace();  }	  e.printStackTrace();    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  hasT	61	None	replace
231	[BUG]  [BUGGY]  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }	  e.printStackTrace();    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  hasT	61	None	replace
232	[BUG]  [BUGGY]  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  hasT	61	None	replace
233	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    e.printStackTrace();    	compilable	  [FE]  NullPointerException  	61	1	replace
234	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  NullPointerException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    e.printStackTrace();    	compilable	  [FE]  NullPointerException  	61	1	replace
235	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null)  {  e.printStackTrace();  e.printStackTrace();  }	  e.printStackTrace();    e.printStackTrace();    	compilable	  [FE]  NullPointerException  	61	1	replace
236	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  [FE]  NullPointerException  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  e.printStackTrace();  e.printStackTrace();  }	  e.printStackTrace();    e.printStackTrace();    	compilable	  [FE]  NullPointerException  	61	1	replace
237	[BUG]  [BUGGY]  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]                JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  hasT	61	None	replace
238	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( " ");	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
239	[BUG]  [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [CE]  <null>  cannot  be  dereferenced  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  <null>  cannot  be  dereferenced	138	None	replace
240	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ",  e);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ",  e);	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
241	[BUG]  [BUGGY]  parseException.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [CE]  cannot  find  symbol  parseException  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parseException.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parseException.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  parseException	138	None	replace
242	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( ", ");  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( ", ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( ", ");	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
243	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  e.printStackTrace();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getMessage());    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
244	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getMessage());    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
245	[BUG]  [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  e.printStackTrace();  [CE]  <null>  cannot  be  dereferenced  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getMessage());    e.printStackTrace();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	140	None	replace
246	[BUG]  [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  [CE]  <null>  cannot  be  dereferenced  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getMessage());    e.printStackTrace();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	140	None	replace
247	[BUG]  [BUGGY]  null.printStackTrace();  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  [CE]  <null>  cannot  be  dereferenced  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null.printStackTrace();  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null.printStackTrace();  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getMessage());    e.printStackTrace();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	140	None	replace
248	[BUG]  [BUGGY]  if(isTimeZone)  {  fail  =  e;  }  [CE]  cannot  find  symbol  isTimeZone  [FE]                              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(isTimeZone)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(isTimeZone)  {  fail  =  e;  }	  if(!hasTimeZone)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  isTimeZone	11	None	replace
249	[BUG]  [BUGGY]  if(!hasTimezone)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasTimezone  [FE]                                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimezone)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimezone)  {  fail  =  e;  }	  if(!hasTimeZone)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimezone	11	None	replace
250	[BUG]  [BUGGY]  if(fail)  {  fail  =  e;  }  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail)  {  fail  =  e;  }	  if(hasT)    {    fail    =    e;    }    	non-compiled	[CE]  incompatible  types	130	None	replace
251	[BUG]  [BUGGY]  if(hasMillis)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasMillis  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasMillis)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasMillis)  {  fail  =  e;  }	  if(hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasMillis	130	None	replace
252	[BUG]  [BUGGY]  if(hasFail)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasFail  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasFail)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasFail)  {  fail  =  e;  }	  if(hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasFail	130	None	replace
253	[BUG]  [BUGGY]  if(e)  {  fail  =  e;  }  [CE]  incompatible  types  [FE]                              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e)  {  fail  =  e;  }	  if(hasT)    {    fail    =    e;    }    	non-compiled	[CE]  incompatible  types	130	None	replace
254	[BUG]  [BUGGY]  if(hasT)  {  fail  =  null;  }  [CE]  cannot  find  symbol  hasT  [FE]                                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  fail  =  null;  }	  if(hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasT	130	None	replace
255	[BUG]  [BUGGY]  result  =  new  IndexOutOfBoundsException( ". ");  [CE]  cannot  find  symbol  result  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  result  =  new  IndexOutOfBoundsException( ". ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	result  =  new  IndexOutOfBoundsException( ". ");	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    	non-compiled	[CE]  cannot  find  symbol  result	21	None	replace
256	[BUG]  [BUGGY]  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
257	[BUG]  [BUGGY]  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	instanceof  IndexOutOfBoundsException)  {  fail  =  e;	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
258	[BUG]  [BUGGY]  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
259	[BUG]  [BUGGY]  pos.setIndex(timezoneOffset);  [CE]  cannot  find  symbol  timezoneOffset  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(timezoneOffset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(timezoneOffset);	  pos.setIndex(parseStartOffset);    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	223	None	replace
260	[BUG]  [BUGGY]  if(!hasFailed)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasFailed  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasFailed)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasFailed)  {  fail  =  e;  }	  if(!hasFail)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasFailed	9	None	replace
261	[BUG]  [BUGGY]  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
262	[BUG]  [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }	  ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
263	[BUG]  [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "n ");  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "n ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "n ");  }	  ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
264	[BUG]  [BUGGY]  ||  e.getCause()  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e.getCause()  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e.getCause()  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
265	[BUG]  [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos);  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos);  }	  ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
266	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	118	1	add
267	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	118	1	add
268	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	118	1	add
269	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	118	1	add
270	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    If(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  	118	None	add
271	[BUG]  [BUGGY]  pos.setIndex(ex.getMessage());  [CE]  cannot  find  symbol  ex  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(ex.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(ex.getMessage());	  pos.setIndex(indexOutOfBoundsException);    	non-compiled	[CE]  cannot  find  symbol  ex	145	None	replace
272	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
273	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator,  pos);  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator,  pos);	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
274	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
275	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  timezoneIndicator.getTimezoneIndicator();  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  timezoneIndicator.getTimezoneIndicator();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  timezoneIndicator.getTimezoneIndicator();	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
276	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unexpected  exception: "  +  e.getMessage());  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unexpected  exception: "  +  e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();  System.err.println( "Unexpected  exception: "  +  e.getMessage());	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
277	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(calendar,  timezoneIndicator);  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(calendar,  timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(calendar,  timezoneIndicator);	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
278	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(date,  timezoneIndicator);	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
279	[BUG]  [BUGGY]  pos.setTime(date);  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setTime(date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setTime(date);	          pos.setTime(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
280	[BUG]  [BUGGY]  pos.setTime(timezoneId);  [CE]  cannot  find  symbol  timezoneId  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setTime(timezoneId);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setTime(timezoneId);	          pos.setTime(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneId	4	None	replace
281	[BUG]  [BUGGY]  pos.setTime(timezone);  [CE]  cannot  find  symbol  timezone  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setTime(timezone);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setTime(timezone);	          pos.setTime(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezone	4	None	replace
282	[BUG]  [BUGGY]  pos.setTime(timezoneOffset);  [CE]  cannot  find  symbol  timezoneOffset  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setTime(timezoneOffset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setTime(timezoneOffset);	          pos.setTime(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	4	None	replace
283	[BUG]  [BUGGY]  pos.setTime(offset);  [CE]  cannot  find  symbol  offset  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setTime(offset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setTime(offset);	          pos.setTime(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  offset	4	None	replace
284	[BUG]  [BUGGY]  pos.setTime(false);  [CE]  cannot  find  symbol  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setTime(false);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setTime(false);	          pos.setTime(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
285	[BUG]  [BUGGY]  pos.setIndex(offset,  date);  [CE]  cannot  find  symbol  offset  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(offset,  date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(offset,  date);	  pos.setIndex(date);    	non-compiled	[CE]  cannot  find  symbol  offset	100	None	replace
286	[BUG]  [BUGGY]  pos.setIndex(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(date,  timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(date,  timezoneIndicator);	  pos.setIndex(date);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	100	None	replace
287	[BUG]  [BUGGY]  pos.setIndex(date,  offset);  [CE]  cannot  find  symbol  offset  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(date,  offset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(date,  offset);	  pos.setIndex(date);    	non-compiled	[CE]  cannot  find  symbol  offset	100	None	replace
288	[BUG]  [BUGGY]  pos.setIndex(date  +  1);  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(date  +  1);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(date  +  1);	  pos.setIndex(date);    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	100	None	replace
289	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	195	1	add
290	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	195	1	add
291	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e.getMessage()!=  null)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	195	None	add
292	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	195	1	add
293	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  IndexOutOfBoundsException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	195	1	add
294	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	195	1	add
295	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	195	1	add
296	[BUG]  [BUGGY]  NullPointerException  e  =  new  NullPointerException( " ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointerException  e  =  new  NullPointerException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointerException  e  =  new  NullPointerException( " ");	  NullPointerException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	164	None	replace
297	[BUG]  [BUGGY]  NullPointerException  e  =  new  NullPointerException( "Failed  to  parse  date: "  +  date);  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointerException  e  =  new  NullPointerException( "Failed  to  parse  date: "  +  date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointerException  e  =  new  NullPointerException( "Failed  to  parse  date: "  +  date);	  NullPointerException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	164	None	replace
298	[BUG]  [BUGGY]  IllegalPointerException  e  =  null;  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalPointerException  e  =  null;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalPointerException  e  =  null;	  NullPointerException    e    =    null;    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
299	[BUG]  [BUGGY]  NullPointerException  e  =  new  NullPointerException( "Failed  to  parse  date: "+date.getMessage());  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointerException  e  =  new  NullPointerException( "Failed  to  parse  date: "+date.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointerException  e  =  new  NullPointerException( "Failed  to  parse  date: "+date.getMessage());	  NullPointerException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	164	None	replace
300	[BUG]  [BUGGY]  pos.setIndex(index);  return  Calendar.getInstance();  [CE]  cannot  find  symbol  index  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(index);  return  Calendar.getInstance();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(index);  return  Calendar.getInstance();	          pos.setIndex(offset);    return    Calendar.getInstance();    	non-compiled	[CE]  cannot  find  symbol  index	3	None	replace
301	[BUG]  [BUGGY]  pos.setIndex(input);  return  Calendar.getInstance();  [CE]  cannot  find  symbol  input  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(input);  return  Calendar.getInstance();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(input);  return  Calendar.getInstance();	          pos.setIndex(offset);    return    Calendar.getInstance();    	non-compiled	[CE]  cannot  find  symbol  input	3	None	replace
302	[BUG]  [BUGGY]  pos.setIndex(parseEndOffset);  return  Calendar.getInstance();  [CE]  cannot  find  symbol  parseEndOffset  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(parseEndOffset);  return  Calendar.getInstance();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(parseEndOffset);  return  Calendar.getInstance();	          pos.setIndex(offset);    return    Calendar.getInstance();    	non-compiled	[CE]  cannot  find  symbol  parseEndOffset	3	None	replace
303	[BUG]  [BUGGY]  pos.setIndex(date);  return  Calendar.getInstance();  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(date);  return  Calendar.getInstance();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(date);  return  Calendar.getInstance();	          pos.setIndex(offset);    return    Calendar.getInstance();    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	3	None	replace
304	[BUG]  [BUGGY]  pos.setIndex(i);  return  Calendar.getInstance();  [CE]  cannot  find  symbol  i  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(i);  return  Calendar.getInstance();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(i);  return  Calendar.getInstance();	          pos.setIndex(offset);    return    Calendar.getInstance();    	non-compiled	[CE]  cannot  find  symbol  i	3	None	replace
305	[BUG]  [BUGGY]  pos.setIndex(e);  return  Calendar.getInstance();  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(e);  return  Calendar.getInstance();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(e);  return  Calendar.getInstance();	          pos.setIndex(offset);    return    Calendar.getInstance();    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	3	None	replace
306	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  calendar.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [CE]  cannot  find  symbol  calendar  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  calendar.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  calendar.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    calendar.set(Calendar.MILLISECOND,    milliseconds);    }    	non-compiled	[CE]  cannot  find  symbol  calendar	16	None	replace
307	[BUG]  [BUGGY]  (e.getMessage()!=  null)?  null  :  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [CE]  not  a  statement  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  (e.getMessage()!=  null)?  null  :  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	(e.getMessage()!=  null)?  null  :  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    calendar.set(Calendar.MILLISECOND,    milliseconds);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
308	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  0,  milliseconds);  }  [CE]  incompatible  types  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  0,  milliseconds);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  0,  milliseconds);  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    calendar.set(Calendar.MILLISECOND,    milliseconds);    }    	non-compiled	[CE]  incompatible  types	16	None	replace
309	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]    IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  hasT	114	None	replace
310	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	146	1	add
311	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	146	1	add
312	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [CE]  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	non-compiled	[CE]  	146	None	add
313	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	146	1	add
314	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }  [FE]  JsonSyntaxException  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	146	1	add
315	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	151	1	add
316	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	151	1	add
317	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(. ".   ");  }  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(. ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(. ".   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	151	None	add
318	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	181	1	add
319	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	181	1	add
320	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	181	1	add
321	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalStateException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	181	1	add
322	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  If(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  If(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    If(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  	181	None	add
323	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e  >=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e  >=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(e  >=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  	181	None	add
324	[BUG]  [BUGGY]  result  =  new  IndexOutOfBoundsException( ", ");  [CE]  cannot  find  symbol  result  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  result  =  new  IndexOutOfBoundsException( ", ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	result  =  new  IndexOutOfBoundsException( ", ");	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    	non-compiled	[CE]  cannot  find  symbol  result	23	None	replace
325	[BUG]  [BUGGY]  if(e!=  null)  {  pos.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  pos.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  pos.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    JsonSyntaxException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
326	[BUG]  [BUGGY]  if(e!=  null)  {  calendar.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  calendar  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  calendar.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  calendar.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    JsonSyntaxException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  calendar	125	None	replace
327	[BUG]  [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    JsonSyntaxException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
328	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  throw  new  JsonSyntaxException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  throw  new  JsonSyntaxException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    JsonSyntaxException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
329	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  UnsupportedOperationException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  UnsupportedOperationException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  UnsupportedOperationException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    UnsupportedOperationException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	144	None	replace
330	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  null;  }  [CE]  inconvertible  types  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  null;  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    UnsupportedOperationException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	144	None	replace
331	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  JsonNull.createJsonNull();  }  [CE]  inconvertible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  JsonNull.createJsonNull();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  JsonNull.createJsonNull();  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    UnsupportedOperationException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	144	None	replace
332	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  e.getMessage();  }  [CE]  inconvertible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  e.getMessage();  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    UnsupportedOperationException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	144	None	replace
333	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  e.toString();  }  [CE]  inconvertible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  UnsupportedOperationException)  {  fail  =  e.toString();  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    UnsupportedOperationException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	144	None	replace
334	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException( ". ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	throw  new  IndexOutOfBoundsException( ". ");	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".   ");    }    	compilable	  [FE]  IndexOutOfBoundsException  	152	1	replace
335	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( ". ");  [FE]  IndexOutOfBoundsException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException( ". ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IndexOutOfBoundsException( ". ");	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".   ");    }    	compilable	  [FE]  IndexOutOfBoundsException  	152	1	replace
336	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }	  if(fail    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	155	1	replace
337	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }	  if(fail    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	155	1	replace
338	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  new  NullPointerException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail  ==  null)  {  fail  =  new  NullPointerException( " ");  }	  if(fail    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	155	1	replace
339	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  new  NullPointerException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  new  NullPointerException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null)  {  fail  =  new  NullPointerException( " ");  }	  if(fail    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	155	1	replace
340	[BUG]  [BUGGY]  Throwable  msg  =  e.getMessage();  [CE]  incompatible  types  [FE]                IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	34	None	replace
341	[BUG]  [BUGGY]  msg  =  e.getMessage();  [CE]  cannot  find  symbol  msg  [FE]                  IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  msg  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	msg  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    e.getMessage();    	non-compiled	[CE]  cannot  find  symbol  msg	34	None	replace
342	[BUG]  [BUGGY]  IllegalArgumentException  msg  =  e.getMessage();  [CE]  incompatible  types  [FE]                    IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  msg  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  msg  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	34	None	replace
343	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  String  msg  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	String  msg  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    e.getMessage();    	compilable	  [FE]  NullPointerException  	34	1	replace
344	[BUG]  [BUGGY]  String  msg  =  e.getMessage();  [FE]  NullPointerException  [FE]                      IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  String  msg  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	String  msg  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    e.getMessage();    	compilable	  [FE]  NullPointerException  	34	1	replace
345	[BUG]  [BUGGY]  char  msg  =  e.getMessage();  [CE]  incompatible  types  [FE]                        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  char  msg  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	char  msg  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	34	None	replace
346	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  ||!e.getMessage().equals( "   "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null  ||!e.getMessage().equals( "   "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
347	[BUG]  [BUGGY]  if(e!=  null  ||!e.getMessage().equals( "   "))  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  ||!e.getMessage().equals( "   "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  ||!e.getMessage().equals( "   "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
348	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	218	1	replace
349	[BUG]  [BUGGY]  if(e  ==  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	218	1	replace
350	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
351	[BUG]  [BUGGY]  if(e.getMessage()!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
352	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "null "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null  &&!e.getMessage().equals( "null "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
353	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "null "))  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "null "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&!e.getMessage().equals( "null "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
354	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "))  {  fail  =  e;  }  [CE]  unclosed  string  literal  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&!e.getMessage().equals( "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	non-compiled	[CE]  unclosed  string  literal	218	None	replace
355	[BUG]  [BUGGY]  if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.printStackTrace())  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	62	None	replace
356	[BUG]  [BUGGY]  if(e.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	62	None	replace
357	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail    ==    null)    {    fail    =    e;    }    if(fail  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
358	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail    ==    null)    {    fail    =    e;    }    if(fail  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
359	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail    ==    null)    {    fail    =    e;    }    if(fail!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
360	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail    ==    null)    {    fail    =    e;    }    if(fail!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	154	1	add
361	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  If(fail  ==  null)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  If(fail  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail    ==    null)    {    fail    =    e;    }    If(fail  ==  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ';'  expected	154	None	add
362	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail  >=  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail  >=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail    ==    null)    {    fail    =    e;    }    if(fail  >=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	154	None	add
363	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail  ==  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail  ==  null)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail    ==    null)    {    fail    =    e;    }    if(fail  ==  null)  {  failure  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	154	None	add
364	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail  [BUGGY]  null)  {  fail  =  e;  }  [CE]  ')'  expected  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail  [BUGGY]  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail    ==    null)    {    fail    =    e;    }    if(fail  [BUGGY]  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ')'  expected	154	None	add
365	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  TimeZone(DateTimeZone.UTC,  timezoneIndicator));  [CE]  cannot  find  symbol  DateTimeZone  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  TimeZone(DateTimeZone.UTC,  timezoneIndicator));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(new  TimeZone(DateTimeZone.UTC,  timezoneIndicator));	  if(e    ==    null)    {    fail    =    e;    }    if(e    {    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeZone	161	None	replace
366	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  TimeZone(timezoneIndicator,  timezoneIndicator));  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  TimeZone(timezoneIndicator,  timezoneIndicator));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(new  TimeZone(timezoneIndicator,  timezoneIndicator));	  if(e    ==    null)    {    fail    =    e;    }    if(e    {    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	161	None	replace
367	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
368	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
369	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
370	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
371	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
372	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
373	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
374	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
375	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
376	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
377	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
378	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
379	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
380	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
381	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
382	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
383	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e  ==  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    if(e  ==  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
384	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e  ==  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e  ==  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    if(e  ==  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
385	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e  >=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e  >=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    if(e  >=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  	217	None	add
386	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e!=  null  &&!e.getMessage().equals( ".   "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    if(e!=  null  &&!e.getMessage().equals( ".   "))  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
387	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e!=  null  &&!e.getMessage().equals( ".   "))  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e!=  null  &&!e.getMessage().equals( ".   "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    if(e!=  null  &&!e.getMessage().equals( ".   "))  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	217	1	add
388	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e!=  null  &&!e.getMessage().equals( "))  {  fail  =  e;  }  [CE]  unclosed  string  literal  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e!=  null  &&!e.getMessage().equals( "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    if(e!=  null  &&!e.getMessage().equals( "))  {  fail  =  e;  }	  	non-compiled	[CE]  unclosed  string  literal	217	None	add
389	[BUG]  [BUGGY]  EventQueue.getInstance(timezoneIndicator).throwException( " ");  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  EventQueue.getInstance(timezoneIndicator).throwException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	EventQueue.getInstance(timezoneIndicator).throwException( " ");	  if(e    ==    null)    {    fail    =    e;    }    If(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	84	None	replace
390	[BUG]  [BUGGY]  EventQueue.getInstance(timezoneIndicator).throwInternal();  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  EventQueue.getInstance(timezoneIndicator).throwInternal();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	EventQueue.getInstance(timezoneIndicator).throwInternal();	  if(e    ==    null)    {    fail    =    e;    }    If(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	84	None	replace
391	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
392	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
393	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
394	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
395	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
396	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
397	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }	  	compilable	  [FE]  JsonSyntaxException  	46	1	add
398	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	197	1	add
399	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	197	1	add
400	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e.getMessage()!=  null)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	197	None	add
401	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	197	1	add
402	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	197	1	add
403	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	197	None	add
404	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	197	1	add
405	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	197	1	add
406	[BUG]  [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException  ||  tz  instanceof  IllegalArgumentException)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException  ||  tz  instanceof  IllegalArgumentException)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e  instanceof  IndexOutOfBoundsException  ||  tz  instanceof  IllegalArgumentException)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	185	None	replace
407	[BUG]  [BUGGY]  Throwable  e  =  e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  e  =  e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  e  =  e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	185	None	replace
408	[BUG]  [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	185	None	replace
409	[BUG]  [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)tz).getMessage();  [CE]  :  expected  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)tz).getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)tz).getMessage();	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  :  expected	185	None	replace
410	[BUG]  [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)e).getMessage()  : " ";  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)e).getMessage()  : " ";  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)e).getMessage()  : " ";	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	185	None	replace
411	[BUG]  [BUGGY]  Throwable  e  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)e).getMessage();  [CE]  :  expected  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  e  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)e).getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  e  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)e).getMessage();	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  :  expected	185	None	replace
412	[BUG]  [BUGGY]  Throwable  tz  =  e.getMessage();  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e.getMessage();	  Throwable    tz    =    e.getCause();    	non-compiled	[CE]  incompatible  types	96	None	replace
413	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause(e);  [CE]  method  getCause  in  class  Throwable  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e.getCause(e);	  Throwable    tz    =    e.getCause();    	non-compiled	[CE]  method  getCause  in  class  Throwable  cannot  be  applied  to  given  types;	96	None	replace
414	[BUG]  [BUGGY]  Throwable  tz  =  this.timezoneIndicator.getCause();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  this.timezoneIndicator.getCause();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  this.timezoneIndicator.getCause();	  Throwable    tz    =    e.getCause();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	96	None	replace
415	[BUG]  [BUGGY]  Throwable  tz  =  e.toString();  [CE]  incompatible  types  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.toString();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e.toString();	  Throwable    tz    =    e.getCause();    	non-compiled	[CE]  incompatible  types	96	None	replace
416	[BUG]  [BUGGY]  Throwable  tz  =  e.getTarget();  [CE]  cannot  find  symbol  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getTarget();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e.getTarget();	  Throwable    tz    =    e.getCause();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
417	[BUG]  [BUGGY]  Throwable  tz  =  e.getMillis();  [CE]  cannot  find  symbol  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getMillis();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e.getMillis();	  Throwable    tz    =    e.getCause();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
418	[BUG]  [BUGGY]  e  =  timezoneIndicator.getMessage();  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e  =  timezoneIndicator.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e  =  timezoneIndicator.getMessage();	  e    =    e.getMessage();    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	215	None	replace
419	[BUG]  [BUGGY]  e  =  e.toString();  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e  =  e.toString();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e  =  e.toString();	  e    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	215	None	replace
420	[BUG]  [BUGGY]  e  =  this.timezoneIndicator.getMessage();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e  =  this.timezoneIndicator.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e  =  this.timezoneIndicator.getMessage();	  e    =    e.getMessage();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	215	None	replace
421	[BUG]  [BUGGY]  e  =  date.getMessage();  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e  =  date.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e  =  date.getMessage();	  e    =    e.getMessage();    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
422	[BUG]  [BUGGY]  e  =  e.getMessage()  + "n ";  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e  =  e.getMessage()  + "n ";  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e  =  e.getMessage()  + "n ";	  e    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	215	None	replace
423	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
424	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
425	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
426	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
427	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
428	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
429	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
430	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
431	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
432	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
433	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
434	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
435	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
436	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	53	1	add
437	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	53	None	add
438	[BUG]  [BUGGY]  ParsePosition  pos  =  calendar.getParsePosition();  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ParsePosition  pos  =  calendar.getParsePosition();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ParsePosition  pos  =  calendar.getParsePosition();	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	103	None	replace
439	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aughtExceptionHandler.throwInternal();	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	103	None	replace
440	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  getMessage());  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " "  +  getMessage());	  throw    new    IllegalArgumentException(   "   ".equals(getMessage()));    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
441	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(getMessage()));  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(getMessage()));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(getMessage()));	  throw    new    IllegalArgumentException(   "   ".equals(getMessage()));    	non-compiled	[CE]  <identifier>  expected	224	None	replace
442	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(getMessage());  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " ").equals(getMessage());	  throw    new    IllegalArgumentException(   "   ".equals(getMessage()));    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
443	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(getMessage()));  [CE]  <identifier>  expected  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(getMessage()));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(getMessage()));	  throw    new    IllegalArgumentException(   "   ".equals(getMessage()));    	non-compiled	[CE]  <identifier>  expected	224	None	replace
444	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  null;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	fail  =  null;	  if(fail!=    null)    {    fail    =    null;    }    	compilable	  [FE]  NullPointerException  	43	1	replace
445	[BUG]  [BUGGY]  fail  =  null;  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  null;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail  =  null;	  if(fail!=    null)    {    fail    =    null;    }    	compilable	  [FE]  NullPointerException  	43	1	replace
446	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    fail    =    new    NullPointerException(   "   ");    }    if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	158	1	add
447	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    new    NullPointerException(   "   ");    }    if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	158	1	add
448	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  if(e  ==  null)  {  fail  =  new  NullPointerException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    fail    =    new    NullPointerException(   "   ");    }    if(e  ==  null)  {  fail  =  new  NullPointerException(   "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	158	1	add
449	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  if(e  ==  null)  {  fail  =  new  NullPointerException(   "   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  if(e  ==  null)  {  fail  =  new  NullPointerException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    new    NullPointerException(   "   ");    }    if(e  ==  null)  {  fail  =  new  NullPointerException(   "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	158	1	add
450	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  if(e  >=  null)  {  fail  =  new  NullPointerException(   "   ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  if(e  >=  null)  {  fail  =  new  NullPointerException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    new    NullPointerException(   "   ");    }    if(e  >=  null)  {  fail  =  new  NullPointerException(   "   ");  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  	158	None	add
451	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	207	1	add
452	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	207	1	add
453	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	207	1	add
454	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  ==  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	207	1	add
455	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  >=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]        IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  >=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  >=  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  	207	None	add
456	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  >>  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]          IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  >>  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  >>  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  	207	None	add
457	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Throwable  msg  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    new    IllegalArgumentException(   "       ");    	compilable	  [FE]  NullPointerException  	31	1	replace
458	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( " ");  [FE]  NullPointerException  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    new    IllegalArgumentException(   "       ");    	compilable	  [FE]  NullPointerException  	31	1	replace
459	[BUG]  [BUGGY]  msg  =  new  IllegalArgumentException( " ");  [CE]  cannot  find  symbol  msg  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  msg  =  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	msg  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  msg	31	None	replace
460	[BUG]  [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  msg  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(msg  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(msg  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  msg	31	None	replace
461	[BUG]  [BUGGY]  msg  =  new  IllegalStatementException( " ");  [CE]  cannot  find  symbol  msg  [FE]                IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  msg  =  new  IllegalStatementException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	msg  =  new  IllegalStatementException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  msg	31	None	replace
462	[BUG]  [BUGGY]  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".   ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".   ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".       ");    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
463	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	148	1	add
464	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	148	1	add
465	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ", ", ");  }  [CE]  unclosed  string  literal  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ", ", ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ", ", ");  }	  	non-compiled	[CE]  unclosed  string  literal	148	None	add
466	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  [CE]  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }	  	non-compiled	[CE]  	148	None	add
467	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	49	1	add
468	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	49	1	add
469	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	49	None	add
470	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	49	1	add
471	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	49	1	add
472	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  'catch'  without  'try'	200	None	replace
473	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  'catch'  without  'try'	200	None	replace
474	[BUG]  [BUGGY]  ||  e  ==  null)  {  fail  =  null;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  ==  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  ==  null)  {  fail  =  null;  }	  if(e    ==    null)    {    fail    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
475	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	14	None	replace
476	[BUG]  [BUGGY]  (e.getMessage()!=  null)?  null  :  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  not  a  statement  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  (e.getMessage()!=  null)?  null  :  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	(e.getMessage()!=  null)?  null  :  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  not  a  statement	14	None	replace
477	[BUG]  [BUGGY]  MutableStaxUtils.throwIndexOutOfBoundsException( " ");  [CE]  cannot  find  symbol  MutableStaxUtils  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableStaxUtils.throwIndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableStaxUtils.throwIndexOutOfBoundsException( " ");	  StaxUtil.throwIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  MutableStaxUtils	126	None	replace
478	[BUG]  [BUGGY]  ParseUtil.throwIndexOutOfBoundsException( " ");  [CE]  cannot  find  symbol  ParseUtil  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ParseUtil.throwIndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ParseUtil.throwIndexOutOfBoundsException( " ");	  StaxUtil.throwIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  ParseUtil	126	None	replace
479	[BUG]  [BUGGY]  MutableStaxUtil.throwIndexOutOfBoundsException( " ");  [CE]  cannot  find  symbol  MutableStaxUtil  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableStaxUtil.throwIndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableStaxUtil.throwIndexOutOfBoundsException( " ");	  StaxUtil.throwIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  MutableStaxUtil	126	None	replace
480	[BUG]  [BUGGY]  ServiceUtil.throwIndexOutOfBoundsException( " ");  [CE]  cannot  find  symbol  ServiceUtil  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ServiceUtil.throwIndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ServiceUtil.throwIndexOutOfBoundsException( " ");	  StaxUtil.throwIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  ServiceUtil	126	None	replace
481	[BUG]  [BUGGY]  Helper.throwIndexOutOfBoundsException( " ");  [CE]  cannot  find  symbol  Helper  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Helper.throwIndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Helper.throwIndexOutOfBoundsException( " ");	  StaxUtil.throwIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Helper	126	None	replace
482	[BUG]  [BUGGY]  StaxUtil.throwIndexOutOfBoundsException( " ",  e);  [CE]  cannot  find  symbol  StaxUtil  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  StaxUtil.throwIndexOutOfBoundsException( " ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	StaxUtil.throwIndexOutOfBoundsException( " ",  e);	  StaxUtil.throwIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	126	None	replace
483	[BUG]  [BUGGY]  if(e  instanceof  NumberFormatException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  NumberFormatException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  NumberFormatException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }	  if(e    instanceof    NumberFormatException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	90	None	replace
484	[BUG]  [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  UTC_ID;  }  [CE]  inconvertible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  UTC_ID;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  NumberFormatException)  {  fail  =  UTC_ID;  }	  if(e    instanceof    NumberFormatException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	90	None	replace
485	[BUG]  [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  new  NumberFormatException( " ");  }  [CE]  inconvertible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  new  NumberFormatException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  NumberFormatException)  {  fail  =  new  NumberFormatException( " ");  }	  if(e    instanceof    NumberFormatException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	90	None	replace
486	[BUG]  [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  null;  }  [CE]  inconvertible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  NumberFormatException)  {  fail  =  null;  }	  if(e    instanceof    NumberFormatException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	90	None	replace
487	[BUG]  [BUGGY]  if(e  instanceof  NumberFormatException  ||  e  instanceof  IllegalStateException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  NumberFormatException  ||  e  instanceof  IllegalStateException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  NumberFormatException  ||  e  instanceof  IllegalStateException)  {  fail  =  e;  }	  if(e    instanceof    NumberFormatException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	90	None	replace
488	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	24	1	add
489	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	24	1	add
490	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(  [CE]  ')'  expected  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(	  	non-compiled	[CE]  ')'  expected	24	None	add
491	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  [CE]  ')'  expected  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof	  	non-compiled	[CE]  ')'  expected	24	None	add
492	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instance  [CE]  ')'  expected  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instance  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instance	  	non-compiled	[CE]  ')'  expected	24	None	add
493	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =	  	non-compiled	[CE]  'catch'  without  'try'	24	None	add
494	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {	  	non-compiled	[CE]  'catch'  without  'try'	24	None	add
495	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if  [CE]  '('  expected  [FE]                JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if	  	non-compiled	[CE]  '('  expected	24	None	add
496	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failed    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	171	1	replace
497	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failed    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	171	1	replace
498	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failed    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	171	1	replace
499	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failed    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	171	1	replace
500	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }  [CE]  cannot  find  symbol  failed  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failed    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  failed	171	None	replace
501	[BUG]  [BUGGY]  reason(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  reason(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	reason(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failed    =    e;    }    	non-compiled	[CE]  ';'  expected	171	None	replace
502	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  null;  }  [CE]  cannot  find  symbol  failed  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  null;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failed    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  failed	171	None	replace
503	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e  ==  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    ==    null)    {    fail    =    null;    }    if(e  ==  null)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	37	1	add
504	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e  ==  null)  {  fail  =  null;  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e  ==  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    null;    }    if(e  ==  null)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	37	1	add
505	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e!=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    ==    null)    {    fail    =    null;    }    if(e!=  null)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	37	1	add
506	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e!=  null)  {  fail  =  null;  }  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e!=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    null;    }    if(e!=  null)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	37	1	add
507	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e  >=  null)  {  fail  =  null;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e  >=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    null;    }    if(e  >=  null)  {  fail  =  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	37	None	add
508	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  If(e  ==  null)  {  fail  =  null;  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  If(e  ==  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    null;    }    If(e  ==  null)  {  fail  =  null;  }	  	non-compiled	[CE]  ';'  expected	37	None	add
509	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e  ==  null)  {  failure  =  null;  }  [CE]  cannot  find  symbol  failure  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e  ==  null)  {  failure  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    null;    }    if(e  ==  null)  {  failure  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	37	None	add
510	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e  >>  null)  {  fail  =  null;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e  >>  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    null;    }    if(e  >>  null)  {  fail  =  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	37	None	add
511	[BUG]  [BUGGY]  if(e  ==  null  ||!hasMillis)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasMillis  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  ||!hasMillis)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  ||!hasMillis)  {  fail  =  e;  }	  if(e    ==    null    ||!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasMillis	206	None	replace
512	[BUG]  [BUGGY]  if(e  ==  null  ||!timezoneIndicator)  {  fail  =  e;  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  ||!timezoneIndicator)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  ||!timezoneIndicator)  {  fail  =  e;  }	  if(e    ==    null    ||!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	206	None	replace
513	[BUG]  [BUGGY]  if(e  ==  null  ||!hasTimeZone(timezoneIndicator))  {  fail  =  e;  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  ||!hasTimeZone(timezoneIndicator))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  ||!hasTimeZone(timezoneIndicator))  {  fail  =  e;  }	  if(e    ==    null    ||!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	206	None	replace
514	[BUG]  [BUGGY]  if(e  ==  null  ||!hasNull)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasNull  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  ||!hasNull)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  ||!hasNull)  {  fail  =  e;  }	  if(e    ==    null    ||!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasNull	206	None	replace
515	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	29	1	replace
516	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	29	1	replace
517	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	29	1	replace
518	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	29	1	replace
519	[BUG]  [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
520	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	122	1	add
521	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	122	1	add
522	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	122	1	add
523	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  IndexOutOfBoundsException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	122	1	add
524	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  If(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [CE]  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  If(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    If(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	non-compiled	[CE]  	122	None	add
525	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  NullPointerException  	196	1	replace
526	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  NullPointerException  	196	1	replace
527	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  if(e.getMessage()  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	196	None	replace
528	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  cause  =  e.getCause();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Throwable  cause  =  e.getCause();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	compilable	  [FE]  NullPointerException  	33	1	replace
529	[BUG]  [BUGGY]  Throwable  cause  =  e.getCause();  [FE]  NullPointerException  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  cause  =  e.getCause();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  cause  =  e.getCause();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	compilable	  [FE]  NullPointerException  	33	1	replace
530	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	compilable	  [FE]  NullPointerException  	33	1	replace
531	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  NullPointerException  [FE]                IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	compilable	  [FE]  NullPointerException  	33	1	replace
532	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getCause()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getCause()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	compilable	  [FE]  IllegalArgumentException  	33	1	replace
533	[BUG]  [BUGGY]  if(e.getCause()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                  IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getCause()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getCause()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	compilable	  [FE]  IllegalArgumentException  	33	1	replace
534	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                    IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	compilable	  [FE]  IllegalArgumentException  	33	1	replace
535	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                    IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	compilable	  [FE]  IllegalArgumentException  	33	1	replace
536	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]                      IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	compilable	  [FE]  IndexOutOfBoundsException  	33	1	replace
537	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  IndexOutOfBoundsException  [FE]                      IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	compilable	  [FE]  IndexOutOfBoundsException  	33	1	replace
538	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  Throwable  cause  =  e.getCause();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  Throwable  cause  =  e.getCause();  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	compilable	  [FE]  NullPointerException  	33	1	replace
539	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  Throwable  cause  =  e.getCause();  }  [FE]  NullPointerException  [FE]                        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  Throwable  cause  =  e.getCause();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  else  {  Throwable  cause  =  e.getCause();  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	compilable	  [FE]  NullPointerException  	33	1	replace
540	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  fail  =  new  IndexOutOfBoundsException(   "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	fail    =    new    IndexOutOfBoundsException(   "   ");    fail  =  new  IndexOutOfBoundsException(   "   ");	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
541	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  fail  =  new  IndexOutOfBoundsException(   "   ");  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  fail  =  new  IndexOutOfBoundsException(   "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail    =    new    IndexOutOfBoundsException(   "   ");    fail  =  new  IndexOutOfBoundsException(   "   ");	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
542	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  pos.setIndex(offset);  [CE]  cannot  find  symbol  offset  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  pos.setIndex(offset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail    =    new    IndexOutOfBoundsException(   "   ");    pos.setIndex(offset);	  	non-compiled	[CE]  cannot  find  symbol  offset	168	None	add
543	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  result  =  new  IndexOutOfBoundsException(   "   ");  [CE]  cannot  find  symbol  result  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  result  =  new  IndexOutOfBoundsException(   "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail    =    new    IndexOutOfBoundsException(   "   ");    result  =  new  IndexOutOfBoundsException(   "   ");	  	non-compiled	[CE]  cannot  find  symbol  result	168	None	add
544	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  pos.setIndex(   "   ");  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  pos.setIndex(   "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail    =    new    IndexOutOfBoundsException(   "   ");    pos.setIndex(   "   ");	  	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	168	None	add
545	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException( "   ");  [CE]  unreachable  statement  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException( "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail    =    new    IndexOutOfBoundsException(   "   ");    throw  new  IndexOutOfBoundsException( "   ");	  	non-compiled	[CE]  unreachable  statement	168	None	add
546	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=    null)    {    fail    =    e;    }    if(fail!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	156	1	add
547	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    e;    }    if(fail!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	156	1	add
548	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=    null)    {    fail    =    e;    }    if(fail  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	156	1	add
549	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    e;    }    if(fail  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	156	1	add
550	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail  >=  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail  >=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    e;    }    if(fail  >=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	156	None	add
551	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail  >>  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail  >>  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    e;    }    if(fail  >>  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	156	None	add
552	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  If(fail!=  null)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  If(fail!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    e;    }    If(fail!=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ';'  expected	156	None	add
553	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail  [BUGGY]  null)  {  fail  =  e;  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail  [BUGGY]  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    e;    }    if(fail  [BUGGY]  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ')'  expected	156	None	add
554	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail  [Delete]  null)  {  fail  =  e;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail  [Delete]  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    e;    }    if(fail  [Delete]  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ')'  expected	156	None	add
555	[BUG]  [BUGGY]  pos.setIndex(offset  +  1);  [CE]  cannot  find  symbol  offset  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(offset  +  1);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(offset  +  1);	  pos.setIndex(i);    	non-compiled	[CE]  cannot  find  symbol  offset	101	None	replace
556	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
557	[BUG]  [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();  [CE]  <null>  cannot  be  dereferenced  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    e.printStackTrace();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	137	None	replace
558	[BUG]  [BUGGY]  parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();  [CE]  cannot  find  symbol  parse  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  parse	137	None	replace
559	[BUG]  [BUGGY]  Throwable  tz  =  new  JsonSyntaxException( " ");  tz.printStackTrace();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  new  JsonSyntaxException( " ");  tz.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  new  JsonSyntaxException( " ");  tz.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
560	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }	  if(e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	193	None	replace
561	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  null;  }  [CE]  inconvertible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  fail  =  null;  }	  if(e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	193	None	replace
562	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException  ||  e  instanceof  UnknownException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException  ||  e  instanceof  UnknownException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException  ||  e  instanceof  UnknownException)  {  fail  =  e;  }	  if(e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	193	None	replace
563	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  e.getMessage();  }  [CE]  inconvertible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  fail  =  e.getMessage();  }	  if(e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	193	None	replace
564	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  NUMBER_OF_DAY;  }  [CE]  inconvertible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  NUMBER_OF_DAY;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  fail  =  NUMBER_OF_DAY;  }	  if(e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	193	None	replace
565	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    if(e!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	120	1	add
566	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    if(e!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	120	1	add
567	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e  ==  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    if(e  ==  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	120	1	add
568	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e  ==  null)  {  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e  ==  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    if(e  ==  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	120	1	add
569	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e  >=  null)  {  e.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e  >=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    if(e  >=  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	120	None	add
570	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  If(e!=  null)  {  e.printStackTrace();  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  If(e!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    If(e!=  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  ';'  expected	120	None	add
571	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e  >>  null)  {  e.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e  >>  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    if(e  >>  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	120	None	add
572	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e  [BUGGY]  null)  {  e.printStackTrace();  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e  [BUGGY]  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    if(e  [BUGGY]  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  ')'  expected	120	None	add
573	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e  [Delete]  null)  {  e.printStackTrace();  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  if(e  [Delete]  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    if(e  [Delete]  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  ')'  expected	120	None	add
574	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  throw  new  NullPointerException( "   ");  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  NullPointerException(   "   ");  throw  new  NullPointerException( "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    NullPointerException(   "   ");    throw  new  NullPointerException( "   ");	  	non-compiled	[CE]  unreachable  statement	165	None	add
575	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  Throwable  cause  =  new  NullPointerException( "   ");  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  NullPointerException(   "   ");  Throwable  cause  =  new  NullPointerException( "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    NullPointerException(   "   ");    Throwable  cause  =  new  NullPointerException( "   ");	  	non-compiled	[CE]  unreachable  statement	165	None	add
576	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  Throwable  msg  =  new  NullPointerException( "   ");  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  NullPointerException(   "   ");  Throwable  msg  =  new  NullPointerException( "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    NullPointerException(   "   ");    Throwable  msg  =  new  NullPointerException( "   ");	  	non-compiled	[CE]  unreachable  statement	165	None	add
577	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  Throwables.throw  new  NullPointerException( "   ");  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  NullPointerException(   "   ");  Throwables.throw  new  NullPointerException( "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    NullPointerException(   "   ");    Throwables.throw  new  NullPointerException( "   ");	  	non-compiled	[CE]  <identifier>  expected	165	None	add
578	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  Throw  new  NullPointerException( "   ");  [CE]  not  a  statement  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  NullPointerException(   "   ");  Throw  new  NullPointerException( "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    NullPointerException(   "   ");    Throw  new  NullPointerException( "   ");	  	non-compiled	[CE]  not  a  statement	165	None	add
579	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  e.printStackTrace();  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getClass().getName());    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
580	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getClass().getName());    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
581	[BUG]  [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  e.printStackTrace();  [CE]  <null>  cannot  be  dereferenced  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getClass().getName());    e.printStackTrace();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	139	None	replace
582	[BUG]  [BUGGY]  Throwable  tz  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  tz.printStackTrace();  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  tz.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  tz.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getClass().getName());    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
583	[BUG]  [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [CE]  <null>  cannot  be  dereferenced  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getClass().getName());    e.printStackTrace();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	139	None	replace
584	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	compilable	  [FE]  IllegalArgumentException  	178	1	replace
585	[BUG]  [BUGGY]  if(fail  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	compilable	  [FE]  IllegalArgumentException  	178	1	replace
586	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	compilable	  [FE]  NullPointerException  	178	1	replace
587	[BUG]  [BUGGY]  if(fail!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  NullPointerException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	compilable	  [FE]  NullPointerException  	178	1	replace
588	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ").getMessage();  }  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ").getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ").getMessage();  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  incompatible  types	178	None	replace
589	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ").getMessage();  }  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ").getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ").getMessage();  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  incompatible  types	178	None	replace
590	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	compilable	  [FE]  NullPointerException  	178	1	replace
591	[BUG]  [BUGGY]  if(e  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  NullPointerException  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	compilable	  [FE]  NullPointerException  	178	1	replace
592	[BUG]  [BUGGY]  if(e.printStackTrace())  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  incompatible  types  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.printStackTrace())  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.printStackTrace())  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	69	None	replace
593	[BUG]  [BUGGY]  if(e.getMessage())  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  incompatible  types  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage())  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage())  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	69	None	replace
594	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().printStackTrace();  [CE]  cannot  find  symbol  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().printStackTrace();	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
595	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
596	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
597	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(  [CE]  ')'  expected  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(	  	non-compiled	[CE]  ')'  expected	20	None	add
598	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [CE]  inconvertible  types  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  inconvertible  types	167	None	replace
599	[BUG]  [BUGGY]  ((  IndexOutOfBoundsException)e).fail  =  new  IndexOutOfBoundsException( " ");  [CE]  cannot  find  symbol  fail  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ((  IndexOutOfBoundsException)e).fail  =  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	((  IndexOutOfBoundsException)e).fail  =  new  IndexOutOfBoundsException( " ");	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  fail	167	None	replace
600	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  inconvertible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ",  e);  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  inconvertible  types	167	None	replace
601	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }  [CE]  inconvertible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  inconvertible  types	167	None	replace
602	[BUG]  [BUGGY]  ||  e.getMessage()  ==  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e.getMessage()  ==  null)  {  fail  =  e;  }	  ||    e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
603	[BUG]  [BUGGY]  ||  e.getMessage()!=  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e.getMessage()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e.getMessage()!=  null)  {  fail  =  e;  }	  ||    e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
604	[BUG]  [BUGGY]  ||  e  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }	  ||    e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
605	[BUG]  [BUGGY]  ||  e  ==  null)  {  fail  =  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  ==  null)  {  fail  =  new  NullPointerException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  ==  null)  {  fail  =  new  NullPointerException( " ");  }	  ||    e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
606	[BUG]  [BUGGY]  &&  e  ==  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  &&  e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	&&  e  ==  null)  {  fail  =  e;  }	  ||    e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
607	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    If(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  IndexOutOfBoundsException  	57	1	replace
608	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  IndexOutOfBoundsException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    If(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  IndexOutOfBoundsException  	57	1	replace
609	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    If(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	57	1	replace
610	[BUG]  [BUGGY]  if(e  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  NullPointerException  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    If(e!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	57	1	replace
611	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	22	1	add
612	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	22	1	add
613	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	22	1	add
614	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	22	1	add
615	[BUG]  [BUGGY]  if(isNullOrEmpty())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(isNullOrEmpty())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(isNullOrEmpty())  {  fail  =  e;  }	  if(!hasNull)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
616	[BUG]  [BUGGY]  if(!isNullOrEmpty())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!isNullOrEmpty())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!isNullOrEmpty())  {  fail  =  e;  }	  if(!hasNull)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
617	[BUG]  [BUGGY]  if(!hasNonNull)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasNonNull  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasNonNull)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasNonNull)  {  fail  =  e;  }	  if(!hasNull)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasNonNull	8	None	replace
618	[BUG]  [BUGGY]  if(!isNull())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]                              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!isNull())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!isNull())  {  fail  =  e;  }	  if(!hasNull)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
619	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  calendar.getMessage();  }  else  {  return  calendar.getTime();  }  [CE]  cannot  find  symbol  calendar  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  calendar.getMessage();  }  else  {  return  calendar.getTime();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  calendar.getMessage();  }  else  {  return  calendar.getTime();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    return    calendar.getTime();    }    	non-compiled	[CE]  cannot  find  symbol  calendar	216	None	replace
620	[BUG]  [BUGGY]  (e.getMessage()!=  null)?  e.getMessage()  :  e.getMessage();  [CE]  not  a  statement  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  (e.getMessage()!=  null)?  e.getMessage()  :  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	(e.getMessage()!=  null)?  e.getMessage()  :  e.getMessage();	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    return    calendar.getTime();    }    	non-compiled	[CE]  not  a  statement	216	None	replace
621	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace(System.err);    e.printStackTrace(System.err);	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
622	[BUG]  [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    e.printStackTrace(System.err);	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
623	[BUG]  [BUGGY]  e.printStackTrace(System.err);  ||  e.getMessage()!=  null)  {  e.printStackTrace(System.err);  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  ||  e.getMessage()!=  null)  {  e.printStackTrace(System.err);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    ||  e.getMessage()!=  null)  {  e.printStackTrace(System.err);	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
624	[BUG]  [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  }  catch  (IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  }  catch  (IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    e.printStackTrace(System.err);  }  catch  (IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	116	None	add
625	[BUG]  [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    e.printStackTrace(System.err);  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	116	None	add
626	[BUG]  [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  TimeZone.getTimeZone(timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  TimeZone.getTimeZone(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    e.printStackTrace(System.err);  this.timezoneIndicator  =  TimeZone.getTimeZone(timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	116	None	add
627	[BUG]  [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  }  catch  (IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  [CE]  unreachable  statement  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  }  catch  (IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    e.printStackTrace(System.err);  }  catch  (IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  unreachable  statement	116	None	add
628	[BUG]  [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    e.printStackTrace(System.err);  this.timezoneIndicator  =  DateTimeUtils.getTimeZone(timezoneIndicator,  pos);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	116	None	add
629	[BUG]  [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  DateUtils.getTimeZone(timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  DateUtils.getTimeZone(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    e.printStackTrace(System.err);  this.timezoneIndicator  =  DateUtils.getTimeZone(timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	116	None	add
630	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  ||  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null  ||  e.getMessage()  ==  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	220	1	replace
631	[BUG]  [BUGGY]  if(e!=  null  ||  e.getMessage()  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  ||  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  ||  e.getMessage()  ==  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	220	1	replace
632	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  ||  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null  ||  e.getMessage()  ==  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	220	1	replace
633	[BUG]  [BUGGY]  if(e  ==  null  ||  e.getMessage()  ==  null)  {  fail  =  e;  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  ||  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  ||  e.getMessage()  ==  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	220	1	replace
634	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	220	1	replace
635	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	220	1	replace
636	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	220	1	replace
637	[BUG]  [BUGGY]  if(e  ==  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	220	1	replace
638	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()  ==  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	220	1	replace
639	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e;  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	220	1	replace
640	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	220	1	replace
641	[BUG]  [BUGGY]  if(e  ==  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [FE]  NullPointerException  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	220	1	replace
642	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  IndexOutOfBoundsException  	65	1	replace
643	[BUG]  [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  IndexOutOfBoundsException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  IndexOutOfBoundsException  	65	1	replace
644	[BUG]  [BUGGY]  if(hasT)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	65	None	replace
645	[BUG]  [BUGGY]  if(hasT)  {  e.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  e.printStackTrace();  }	  e.printStackTrace();    if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	65	None	replace
646	[BUG]  [BUGGY]  pos.setIndex(timezoneId);  [CE]  cannot  find  symbol  timezoneId  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(timezoneId);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(timezoneId);	  pos.setIndex(ex);    	non-compiled	[CE]  cannot  find  symbol  timezoneId	77	None	replace
647	[BUG]  [BUGGY]  pos.setIndex(output);  [CE]  cannot  find  symbol  output  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(output);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(output);	  pos.setIndex(ex);    	non-compiled	[CE]  cannot  find  symbol  output	77	None	replace
648	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this,  pos);	  Thread.currentThread().setContextClassLoader(this,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	73	None	replace
649	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  pos);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  pos);	  Thread.currentThread().setContextClassLoader(this,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	73	None	replace
650	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  calendar);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  calendar);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this,  calendar);	  Thread.currentThread().setContextClassLoader(this,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	73	None	replace
651	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  calendar,  timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  calendar,  timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this,  calendar,  timezoneIndicator);	  Thread.currentThread().setContextClassLoader(this,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	73	None	replace
652	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  tz);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  tz);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this,  tz);	  Thread.currentThread().setContextClassLoader(this,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	73	None	replace
653	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(calendar,  timezoneIndicator);  [CE]  cannot  find  symbol  calendar  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(calendar,  timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(calendar,  timezoneIndicator);	  Thread.currentThread().setContextClassLoader(this,    timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  calendar	73	None	replace
654	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  c);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  c);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this,  c);	  Thread.currentThread().setContextClassLoader(this,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	73	None	replace
655	[BUG]  [BUGGY]  if(!hasT)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  fail    =    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  hasT	169	None	replace
656	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  fail    =    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
657	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  fail    =    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
658	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException( " ",  e);  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,IndexOutOfBoundsException)  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException( " ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail  =  new  IndexOutOfBoundsException( " ",  e);	  fail    =    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,IndexOutOfBoundsException)	169	None	replace
659	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Thread.currentThread().setContextClassLoader(null);	  Thread.currentThread().getContextClassLoader();    	compilable	  [FE]  NullPointerException  	98	1	replace
660	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(null);	  Thread.currentThread().getContextClassLoader();    	compilable	  [FE]  NullPointerException  	98	1	replace
661	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(false);  [CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(false);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(false);	  Thread.currentThread().getContextClassLoader();    	non-compiled	[CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;	98	None	replace
662	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ContextClassLoader());  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ContextClassLoader());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(new  ContextClassLoader());	  Thread.currentThread().getContextClassLoader();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
663	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  JsonSyntaxExceptionHandler());  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  JsonSyntaxExceptionHandler());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(new  JsonSyntaxExceptionHandler());	  Thread.currentThread().getContextClassLoader();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
664	[BUG]  [BUGGY]  (IndexOutOfBoundsException)fail  =  e.getMessage();  [CE]  unexpected  type  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  (IndexOutOfBoundsException)fail  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	(IndexOutOfBoundsException)fail  =  e.getMessage();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  unexpected  type	192	None	replace
665	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  e.getMessage();  }  [CE]  inconvertible  types  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  e.getMessage();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  inconvertible  types	192	None	replace
666	[BUG]  [BUGGY]  (IndexOutOfBoundsException)fail  =  e.getMessage();  }  [CE]  illegal  start  of  type  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  (IndexOutOfBoundsException)fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	(IndexOutOfBoundsException)fail  =  e.getMessage();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
667	[BUG]  [BUGGY]  if(!hasMillis)  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  hasMillis  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasMillis)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasMillis)  {  fail  =  e.getMessage();  }	  if(!hasT)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  cannot  find  symbol  hasMillis	128	None	replace
668	[BUG]  [BUGGY]  if(!fail)  {  fail  =  e.getMessage();  }  [CE]  bad  operand  type  Exception  for  unary  operator  '!'  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!fail)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!fail)  {  fail  =  e.getMessage();  }	  if(!hasT)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  bad  operand  type  Exception  for  unary  operator  '!'	128	None	replace
669	[BUG]  [BUGGY]  if(!fail.hasMessage())  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!fail.hasMessage())  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!fail.hasMessage())  {  fail  =  e.getMessage();  }	  if(!hasT)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
670	[BUG]  [BUGGY]  if(!hasMilliseconds)  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  hasMilliseconds  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasMilliseconds)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasMilliseconds)  {  fail  =  e.getMessage();  }	  if(!hasT)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  cannot  find  symbol  hasMilliseconds	128	None	replace
671	[BUG]  [BUGGY]  if(!hasFail)  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  hasFail  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasFail)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasFail)  {  fail  =  e.getMessage();  }	  if(!hasT)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  cannot  find  symbol  hasFail	128	None	replace
672	[BUG]  [BUGGY]  if(!hasNull)  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  hasNull  [FE]                              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasNull)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasNull)  {  fail  =  e.getMessage();  }	  if(!hasT)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  cannot  find  symbol  hasNull	128	None	replace
673	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	201	1	add
674	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	201	1	add
675	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(e.getMessage()!=  null)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	201	None	add
676	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	201	1	add
677	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  IllegalStateException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    e.printStackTrace();  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  IllegalStateException  	201	1	add
678	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	201	None	add
679	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	201	1	add
680	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "... ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	201	1	add
681	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	throw  new  IllegalArgumentException( " "  +  e.getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	compilable	  [FE]  IllegalArgumentException  	115	1	replace
682	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  e.getMessage());  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " "  +  e.getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	compilable	  [FE]  IllegalArgumentException  	115	1	replace
683	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  pos.getMessage());  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  pos.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " "  +  pos.getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
684	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ",  pos.getMessage());  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " ",  pos.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " ",  pos.getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
685	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").getMessage();  [CE]  incompatible  types  [FE]                    IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " ").getMessage();	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  incompatible  types	115	None	replace
686	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( " ".getMessage());  [CE]  cannot  find  symbol  [FE]    IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException( " ".getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IndexOutOfBoundsException( " ".getMessage());	  throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
687	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException( " "  +  e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	throw  new  IndexOutOfBoundsException( " "  +  e.getMessage());	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  IndexOutOfBoundsException  	94	1	replace
688	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( " "  +  e.getMessage());  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException( " "  +  e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IndexOutOfBoundsException( " "  +  e.getMessage());	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  IndexOutOfBoundsException  	94	1	replace
689	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	12	None	replace
690	[BUG]  [BUGGY]  if(e.getMessage()!=  null  ||  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  ||  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  ||  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	12	None	replace
691	[BUG]  [BUGGY]  if(e.getMessage()!=  null  ||  e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  ||  e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  ||  e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	12	None	replace
692	[BUG]  [BUGGY]  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  [CE]  not  a  statement  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.getMessage()!=  null)  {  fail  =  e.getMessage();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  not  a  statement	12	None	replace
693	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(calendar);  [CE]  cannot  find  symbol  calendar  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().process(calendar);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().process(calendar);	  Thread.currentThread().getContextClassLoader().process(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  calendar	211	None	replace
694	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(timezoneId);  [CE]  cannot  find  symbol  timezoneId  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().process(timezoneId);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().process(timezoneId);	  Thread.currentThread().getContextClassLoader().process(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneId	211	None	replace
695	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(date);  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().process(date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().process(date);	  Thread.currentThread().getContextClassLoader().process(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol	211	None	replace
696	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(timezone);  [CE]  cannot  find  symbol  timezone  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().process(timezone);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().process(timezone);	  Thread.currentThread().getContextClassLoader().process(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezone	211	None	replace
697	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(c);  [CE]  cannot  find  symbol  c  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().process(c);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().process(c);	  Thread.currentThread().getContextClassLoader().process(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  c	211	None	replace
698	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(timezoneIndicator,  pos);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().process(timezoneIndicator,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().process(timezoneIndicator,  pos);	  Thread.currentThread().getContextClassLoader().process(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	211	None	replace
699	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:    [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException( ", ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	throw  new  IndexOutOfBoundsException( ", ");	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:    	149	1	replace
700	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( ", ");  [FE]  java.lang.IndexOutOfBoundsException:    [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException( ", ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IndexOutOfBoundsException( ", ");	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:    	149	1	replace
701	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	87	1	add
702	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	87	1	add
703	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }	  	non-compiled	[CE]  ';'  expected	87	None	add
704	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  null;  }  [CE]  cannot  find  symbol  failure  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	87	None	add
705	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  if(e  instancesof  IndexOutOfBoundsException)  {  fail  =  null;  }  [CE]  ')'  expected  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  if(e  instancesof  IndexOutOfBoundsException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    if(e  instancesof  IndexOutOfBoundsException)  {  fail  =  null;  }	  	non-compiled	[CE]  ')'  expected	87	None	add
706	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  when(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  when(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    when(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }	  	non-compiled	[CE]  ';'  expected	87	None	add
707	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
708	[BUG]  [BUGGY]  e(Exception.class,  e.getMessage(),  e);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e(Exception.class,  e.getMessage(),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e(Exception.class,  e.getMessage(),  e);	  aught(Exception.class,    e.getMessage(),    e);    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
709	[BUG]  [BUGGY]  Exception.class,  e.getMessage(),  e);  [CE]  not  a  statement  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Exception.class,  e.getMessage(),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Exception.class,  e.getMessage(),  e);	  aught(Exception.class,    e.getMessage(),    e);    	non-compiled	[CE]  not  a  statement	210	None	replace
710	[BUG]  [BUGGY]  aught(Exception.class,  date.getMessage(),  e);  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(Exception.class,  date.getMessage(),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(Exception.class,  date.getMessage(),  e);	  aught(Exception.class,    e.getMessage(),    e);    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
711	[BUG]  [BUGGY]  aught(Exception.class,  e.getMessage(),  date);  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(Exception.class,  e.getMessage(),  date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(Exception.class,  e.getMessage(),  date);	  aught(Exception.class,    e.getMessage(),    e);    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
712	[BUG]  [BUGGY]  e.getMessage(),  Exception.class);  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.getMessage(),  Exception.class);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.getMessage(),  Exception.class);	  aught(Exception.class,    e.getMessage(),    e);    	non-compiled	[CE]  ';'  expected	210	None	replace
713	[BUG]  [BUGGY]  pos.setIndex(insert);  [CE]  cannot  find  symbol  insert  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(insert);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(insert);	  pos.setIndex(input);    	non-compiled	[CE]  cannot  find  symbol  insert	75	None	replace
714	[BUG]  [BUGGY]  pos.setIndex(update);  [CE]  cannot  find  symbol  update  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(update);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(update);	  pos.setIndex(input);    	non-compiled	[CE]  cannot  find  symbol  update	75	None	replace
715	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e!=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    fail    =    null;    }    if(e!=  null)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	35	1	add
716	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e!=  null)  {  fail  =  null;  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e!=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    null;    }    if(e!=  null)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	35	1	add
717	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e  ==  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    fail    =    null;    }    if(e  ==  null)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	35	1	add
718	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e  ==  null)  {  fail  =  null;  }  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e  ==  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    null;    }    if(e  ==  null)  {  fail  =  null;  }	  	compilable	  [FE]  JsonSyntaxException  	35	1	add
719	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e  >=  null)  {  fail  =  null;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e  >=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    null;    }    if(e  >=  null)  {  fail  =  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	35	None	add
720	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e  >>  null)  {  fail  =  null;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e  >>  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    null;    }    if(e  >>  null)  {  fail  =  null;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	35	None	add
721	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  null;  }  If(e!=  null)  {  fail  =  null;  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  null;  }  If(e!=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    null;    }    If(e!=  null)  {  fail  =  null;  }	  	non-compiled	[CE]  ';'  expected	35	None	add
722	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e  [BUGGY]  null)  {  fail  =  null;  }  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e  [BUGGY]  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    null;    }    if(e  [BUGGY]  null)  {  fail  =  null;  }	  	non-compiled	[CE]  ')'  expected	35	None	add
723	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e  [Delete]  null)  {  fail  =  null;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e  [Delete]  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    null;    }    if(e  [Delete]  null)  {  fail  =  null;  }	  	non-compiled	[CE]  ')'  expected	35	None	add
724	[BUG]  [BUGGY]  Pattern.compile(e,  pos.getStartOffset(),  pos.getEndOffset());  [CE]  cannot  find  symbol  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Pattern.compile(e,  pos.getStartOffset(),  pos.getEndOffset());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Pattern.compile(e,  pos.getStartOffset(),  pos.getEndOffset());	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
725	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().getName();  [CE]  cannot  find  symbol  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClass().getName();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClass().getName();	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
726	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().thenReturn(e);  [CE]  cannot  find  symbol  [FE]                          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().thenReturn(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().thenReturn(e);	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
727	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  if(fail  ==  null)  {  fail  =  e;  }  [CE]  'catch'  without  'try'  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  if(fail  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  if(fail  ==  null)  {  fail  =  e;  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    ==    null)    {    failure    =    e;    }    	non-compiled	[CE]  'catch'  without  'try'	162	None	replace
728	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  if(e  ==  null)  {  fail  =  e;  }  [CE]  'catch'  without  'try'  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  if(e  ==  null)  {  fail  =  e;  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    ==    null)    {    failure    =    e;    }    	non-compiled	[CE]  'catch'  without  'try'	162	None	replace
729	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    ==    null)    {    failure    =    e;    }    	compilable	  [FE]  NullPointerException  	162	1	replace
730	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    ==    null)    {    failure    =    e;    }    	compilable	  [FE]  NullPointerException  	162	1	replace
731	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  if(fail!=  null)  {  fail  =  e;  }  [CE]  'catch'  without  'try'  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  if(fail!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  if(fail!=  null)  {  fail  =  e;  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    ==    null)    {    failure    =    e;    }    	non-compiled	[CE]  'catch'  without  'try'	162	None	replace
732	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
733	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
734	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
735	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
736	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
737	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
738	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
739	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
740	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
741	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
742	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
743	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
744	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
745	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	51	1	add
746	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	51	None	add
747	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  null;  }  [CE]  inconvertible  types  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  null;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    	non-compiled	[CE]  inconvertible  types	88	None	replace
748	[BUG]  [BUGGY]  pos.setIndex(index);  return  calendar.getTime();  [CE]  cannot  find  symbol  index  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(index);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(index);  return  calendar.getTime();	          pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  index	1	None	replace
749	[BUG]  [BUGGY]  pos.setIndex(date);  return  calendar.getTime();  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(date);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(date);  return  calendar.getTime();	          pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	1	None	replace
750	[BUG]  [BUGGY]  pos.setIndex(input);  return  calendar.getTime();  [CE]  cannot  find  symbol  input  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(input);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(input);  return  calendar.getTime();	          pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  input	1	None	replace
751	[BUG]  [BUGGY]  pos.setIndex(parseEndOffset);  return  calendar.getTime();  [CE]  cannot  find  symbol  parseEndOffset  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(parseEndOffset);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(parseEndOffset);  return  calendar.getTime();	          pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  parseEndOffset	1	None	replace
752	[BUG]  [BUGGY]  pos.setIndex(i);  return  calendar.getTime();  [CE]  cannot  find  symbol  i  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(i);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(i);  return  calendar.getTime();	          pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  i	1	None	replace
753	[BUG]  [BUGGY]  pos.setIndex(-1);  return  calendar.getTime();  [CE]  cannot  find  symbol  calendar  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(-1);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(-1);  return  calendar.getTime();	          pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  calendar	1	None	replace
754	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
755	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
756	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e  ==  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    if(e  ==  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
757	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e  ==  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e  ==  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    if(e  ==  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	219	1	add
758	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e  >=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e  >=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    if(e  >=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	219	None	add
759	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  If(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  If(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    If(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ';'  expected	219	None	add
760	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e  >>  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e  >>  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    if(e  >>  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	219	None	add
761	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e!=  null  &&  e.getMessage()  >=  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e!=  null  &&  e.getMessage()  >=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    if(e!=  null  &&  e.getMessage()  >=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	219	None	add
762	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e  [Delete]  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [CE]  ')'  expected  [FE]                NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e  [Delete]  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    if(e  [Delete]  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ')'  expected	219	None	add
763	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	173	1	add
764	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	173	1	add
765	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	173	1	add
766	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	173	1	add
767	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  [FE]        IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  If(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    If(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  	173	None	add
768	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
769	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
770	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	107	1	add
771	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	107	1	add
772	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }	  	non-compiled	[CE]  unclosed  string  literal	107	None	add
773	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
774	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
775	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos);  }  [CE]  inconvertible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  inconvertible  types	170	None	replace
776	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos,  hasT);  }  [CE]  cannot  find  symbol  hasT  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos,  hasT);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos,  hasT);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  cannot  find  symbol  hasT	170	None	replace
777	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    timezone    indicator:   "+timezoneIndicator);    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
778	[BUG]  [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();  [CE]  <null>  cannot  be  dereferenced  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    timezone    indicator:   "+timezoneIndicator);    e.printStackTrace();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	141	None	replace
779	[BUG]  [BUGGY]  parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();  [CE]  cannot  find  symbol  parse  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    timezone    indicator:   "+timezoneIndicator);    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  parse	141	None	replace
780	[BUG]  [BUGGY]  parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  [CE]  cannot  find  symbol  parse  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    timezone    indicator:   "+timezoneIndicator);    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  parse	141	None	replace
781	[BUG]  [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  [CE]  <null>  cannot  be  dereferenced  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    timezone    indicator:   "+timezoneIndicator);    e.printStackTrace();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	141	None	replace
782	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  [CE]  cannot  find  symbol  [FE]                          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    timezone    indicator:   "+timezoneIndicator);    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
783	[BUG]  [BUGGY]  ||  e!=  null)  {  e.printStackTrace();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e!=  null)  {  e.printStackTrace();  }	  if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
784	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	203	1	add
785	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	203	1	add
786	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	203	1	add
787	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	203	1	add
788	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    if(e!=  null)  {  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  'catch'  without  'try'	203	None	add
789	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	203	1	add
790	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	203	1	add
791	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e  >=  null)  {  e.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e  >=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e  >=  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	203	None	add
792	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e  >>  null)  {  e.printStackTrace();  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e  >>  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e  >>  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	203	None	add
793	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(c);  [CE]  cannot  find  symbol  c  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(c);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(c);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  cannot  find  symbol  c	40	None	replace
794	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(e);  [CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(e);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;	40	None	replace
795	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	68	None	replace
796	[BUG]  [BUGGY]  if(e.getMessage())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage())  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	68	None	replace
797	[BUG]  [BUGGY]  null.printStackTrace();  [CE]  <null>  cannot  be  dereferenced  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null.printStackTrace();	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <null>  cannot  be  dereferenced	68	None	replace
798	[BUG]  [BUGGY]  ||  e!=  null)  {  fail  =  new  NullPointerException( " ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e!=  null)  {  fail  =  new  NullPointerException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e!=  null)  {  fail  =  new  NullPointerException( " ");  }	  if(e!=    null)    {    fail    =    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
799	[BUG]  [BUGGY]  reason(e)  {  fail  =  new  NullPointerException( " ");  }  [CE]  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  reason(e)  {  fail  =  new  NullPointerException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	reason(e)  {  fail  =  new  NullPointerException( " ");  }	  if(e!=    null)    {    fail    =    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  	159	None	replace
800	[BUG]  [BUGGY]  if(!hasTimeZone())  {  fail  =  null;  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone())  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone())  {  fail  =  null;  }	  if(!hasTimeZone())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
801	[BUG]  [BUGGY]  if(!hasTimeZone())  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone())  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone())  {  fail  =  e.getMessage();  }	  if(!hasTimeZone())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
802	[BUG]  [BUGGY]  if(!hasTimeZone())  {  fail  =  NUMBER_OF_DAY;  }  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone())  {  fail  =  NUMBER_OF_DAY;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone())  {  fail  =  NUMBER_OF_DAY;  }	  if(!hasTimeZone())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
803	[BUG]  [BUGGY]  if(e.hasChronology())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.hasChronology())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.hasChronology())  {  fail  =  e;  }	  if(!hasTimeZone())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
804	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null)  {  fail  =  e.getMessage();  }	  if(e!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	131	None	replace
805	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null)  {  fail  =  e.getMessage();  }	  if(e!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	131	None	replace
806	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  e.getMessage();  }	  if(e!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	131	None	replace
807	[BUG]  [BUGGY]  (e!=  null)?  null  :  e.getMessage();  [CE]  not  a  statement  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  (e!=  null)?  null  :  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	(e!=  null)?  null  :  e.getMessage();	  if(e!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  not  a  statement	131	None	replace
808	[BUG]  [BUGGY]  if(!hasT)  {  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    when(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  'catch'  without  'try'	28	None	replace
809	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    when(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	28	None	replace
810	[BUG]  [BUGGY]  if(!hasT)  {  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  when(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  when(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  when(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    when(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
811	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Throwable  cause  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    new    IllegalArgumentException(   "       ");    	compilable	  [FE]  NullPointerException  	32	1	replace
812	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  [FE]  NullPointerException  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    new    IllegalArgumentException(   "       ");    	compilable	  [FE]  NullPointerException  	32	1	replace
813	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".getMessage());  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ".getMessage());	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
814	[BUG]  [BUGGY]  String  cause  =  new  IllegalArgumentException( " ");  [CE]  incompatible  types  [FE]                IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  String  cause  =  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	String  cause  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  incompatible  types	32	None	replace
815	[BUG]  [BUGGY]  Throwable  cause  =  e.getMessage();  [CE]  incompatible  types  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  cause  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  cause  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	190	None	replace
816	[BUG]  [BUGGY]  IllegalArgumentException  iae  =  new  IllegalArgumentException( " ");  cause  =  iae.getMessage();  [CE]  cannot  find  symbol  cause  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  iae  =  new  IllegalArgumentException( " ");  cause  =  iae.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  iae  =  new  IllegalArgumentException( " ");  cause  =  iae.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getMessage();    	non-compiled	[CE]  cannot  find  symbol  cause	190	None	replace
817	[BUG]  [BUGGY]  IllegalArgumentException  iae  =  new  IllegalArgumentException( " ");  Throwable  cause  =  iae.getMessage();  [CE]  incompatible  types  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  iae  =  new  IllegalArgumentException( " ");  Throwable  cause  =  iae.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  iae  =  new  IllegalArgumentException( " ");  Throwable  cause  =  iae.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	190	None	replace
818	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( " ");  cause  =  e.getMessage();  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( " ");  cause  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  IllegalArgumentException( " ");  cause  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getMessage();    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	190	None	replace
819	[BUG]  [BUGGY]  pos.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.throwAsUnquotedException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
820	[BUG]  [BUGGY]  parseExceptionHandler.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  parseExceptionHandler  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parseExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parseExceptionHandler.throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  parseExceptionHandler	177	None	replace
821	[BUG]  [BUGGY]  msg.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  msg  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  msg.throwAsUnquotedException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	msg.throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  msg	177	None	replace
822	[BUG]  [BUGGY]  tz.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  tz  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  tz.throwAsUnquotedException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	tz.throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  tz	177	None	replace
823	[BUG]  [BUGGY]  assistExceptionHandler.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  assistExceptionHandler  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  assistExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	assistExceptionHandler.throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  assistExceptionHandler	177	None	replace
824	[BUG]  [BUGGY]  e.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.throwAsUnquotedException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
825	[BUG]  [BUGGY]  ||!hasMilliseconds)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||!hasMilliseconds)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||!hasMilliseconds)  {  fail  =  e;  }	  if(!hasMilliseconds)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
826	[BUG]  [BUGGY]  if(!hasMilliseconds)  {  fail  =  null;  }  [CE]  cannot  find  symbol  hasMilliseconds  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasMilliseconds)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasMilliseconds)  {  fail  =  null;  }	  if(!hasMilliseconds)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasMilliseconds	7	None	replace
827	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
828	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
829	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  'catch'  without  'try'	66	None	add
830	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	66	1	add
831	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	66	1	add
832	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
833	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
834	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "));  [CE]  unclosed  string  literal  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( "));	  Thread.currentThread().setContext(new    JsonSyntaxException(   "   "));    	non-compiled	[CE]  unclosed  string  literal	72	None	replace
835	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse  date ",  e));  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse  date ",  e));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse  date ",  e));	  Thread.currentThread().setContext(new    JsonSyntaxException(   "   "));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
836	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "Unexpected  exception: "));  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "Unexpected  exception: "));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( "Unexpected  exception: "));	  Thread.currentThread().setContext(new    JsonSyntaxException(   "   "));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
837	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse  date: "  +  date));  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse  date: "  +  date));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse  date: "  +  date));	  Thread.currentThread().setContext(new    JsonSyntaxException(   "   "));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
838	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failure    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  failure	27	None	replace
839	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    System.err.println(   "Unexpected    error:   "    +    e.getMessage());    }    	non-compiled	[CE]  incompatible  types	15	None	replace
840	[BUG]  [BUGGY]  parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  [CE]  cannot  find  symbol  parse  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getMessage());    	non-compiled	[CE]  cannot  find  symbol  parse	143	None	replace
841	[BUG]  [BUGGY]  parseException.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  [CE]  cannot  find  symbol  parseException  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parseException.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parseException.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getMessage());    	non-compiled	[CE]  cannot  find  symbol  parseException	143	None	replace
842	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date,  pos.getMessage());  [CE]  cannot  find  symbol  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date,  pos.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date,  pos.getMessage());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getMessage());    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
843	[BUG]  [BUGGY]  if(!hasT)  {  throw  new  NullPointerException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  throw  new  NullPointerException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  throw  new  NullPointerException( " ");  }	  throw    new    NullPointerException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  hasT	166	None	replace
844	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e.toString();  }  [CE]  inconvertible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e.toString();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.toString();    }    	non-compiled	[CE]  inconvertible  types	194	None	replace
845	[BUG]  [BUGGY]  (IndexOutOfBoundsException)fail  =  e.toString();  [CE]  unexpected  type  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  (IndexOutOfBoundsException)fail  =  e.toString();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	(IndexOutOfBoundsException)fail  =  e.toString();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.toString();    }    	non-compiled	[CE]  unexpected  type	194	None	replace
846	[BUG]  [BUGGY]  String  fail  =  e.toString();  [CE]  variable  fail  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  String  fail  =  e.toString();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	String  fail  =  e.toString();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.toString();    }    	non-compiled	[CE]  variable  fail  is  already  defined  in  method  parse(String,ParsePosition)	194	None	replace
847	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  e.toString();  }  [CE]  inconvertible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  e.toString();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.toString();    }    	non-compiled	[CE]  inconvertible  types	194	None	replace
848	[BUG]  [BUGGY]  if(!hasTimeZoneIndicator)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasTimeZoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZoneIndicator)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZoneIndicator)  {  fail  =  e;  }	  if(!hasTimezoneIndicator)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZoneIndicator	213	None	replace
849	[BUG]  [BUGGY]  if(!hasTimezoneIndicator)  {  fail  =  null;  }  [CE]  cannot  find  symbol  hasTimezoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimezoneIndicator)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimezoneIndicator)  {  fail  =  null;  }	  if(!hasTimezoneIndicator)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimezoneIndicator	213	None	replace
850	[BUG]  [BUGGY]  if(hasTimezoneIndicator)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasTimezoneIndicator  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasTimezoneIndicator)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasTimezoneIndicator)  {  fail  =  e;  }	  if(!hasTimezoneIndicator)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimezoneIndicator	213	None	replace
851	[BUG]  [BUGGY]  if(isTimezoneIndicator)  {  fail  =  e;  }  [CE]  cannot  find  symbol  isTimezoneIndicator  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(isTimezoneIndicator)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(isTimezoneIndicator)  {  fail  =  e;  }	  if(!hasTimezoneIndicator)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  isTimezoneIndicator	213	None	replace
852	[BUG]  [BUGGY]  result  =  new  IndexOutOfBoundsException( " ",  e);  [CE]  cannot  find  symbol  result  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  result  =  new  IndexOutOfBoundsException( " ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	result  =  new  IndexOutOfBoundsException( " ",  e);	  result    =    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  result	110	None	replace
853	[BUG]  [BUGGY]  pos  =  new  IndexOutOfBoundsException( " ");  [CE]  incompatible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos  =  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos  =  new  IndexOutOfBoundsException( " ");	  result    =    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  incompatible  types	110	None	replace
854	[BUG]  [BUGGY]  result  =  new  IndexOutOfBoundsException( " ",  pos);  [CE]  cannot  find  symbol  result  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  result  =  new  IndexOutOfBoundsException( " ",  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	result  =  new  IndexOutOfBoundsException( " ",  pos);	  result    =    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  result	110	None	replace
855	[BUG]  [BUGGY]  result  =  new  IndexOutOfBoundsException( " "));  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  result  =  new  IndexOutOfBoundsException( " "));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	result  =  new  IndexOutOfBoundsException( " "));	  result    =    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  	110	None	replace
856	[BUG]  [BUGGY]  result  =  new  IndexOutOfBoundsException( " "  +  e);  [CE]  cannot  find  symbol  result  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  result  =  new  IndexOutOfBoundsException( " "  +  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	result  =  new  IndexOutOfBoundsException( " "  +  e);	  result    =    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  result	110	None	replace
857	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  fail  =  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    if(e!=    null)    {    failure    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	135	1	replace
858	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    if(e!=    null)    {    failure    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	135	1	replace
859	[BUG]  [BUGGY]  reason:  for(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  not  a  statement  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  reason:  for(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	reason:  for(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    for(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  not  a  statement	172	None	replace
860	[BUG]  [BUGGY]  if(!hasMillis)  {  fail  =  null;  }  [CE]  cannot  find  symbol  hasMillis  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasMillis)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasMillis)  {  fail  =  null;  }	  if(!hasMillis)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasMillis	6	None	replace
861	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Can    not    parse    date:   "+date.getClass().getName());    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
862	[BUG]  [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());  [CE]  <null>  cannot  be  dereferenced  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Can    not    parse    date:   "+date.getClass().getName());    	non-compiled	[CE]  <null>  cannot  be  dereferenced	205	None	replace
863	[BUG]  [BUGGY]  null,  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());  [CE]  not  a  statement  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null,  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null,  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Can    not    parse    date:   "+date.getClass().getName());    	non-compiled	[CE]  not  a  statement	205	None	replace
864	[BUG]  [BUGGY]  null  :  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());  [CE]  not  a  statement  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null  :  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null  :  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+date.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Can    not    parse    date:   "+date.getClass().getName());    	non-compiled	[CE]  not  a  statement	205	None	replace
865	[BUG]  [BUGGY]  pos.throwAsIOException( " ");  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.throwAsIOException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
866	[BUG]  [BUGGY]  parseExceptionHandler.throwAsIOException( " ");  [CE]  cannot  find  symbol  parseExceptionHandler  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parseExceptionHandler.throwAsIOException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parseExceptionHandler.throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  parseExceptionHandler	71	None	replace
867	[BUG]  [BUGGY]  assistExceptionHandler.throwAsIOException( " ");  [CE]  cannot  find  symbol  assistExceptionHandler  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  assistExceptionHandler.throwAsIOException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	assistExceptionHandler.throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  assistExceptionHandler	71	None	replace
868	[BUG]  [BUGGY]  tz.throwAsIOException( " ");  [CE]  cannot  find  symbol  tz  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  tz.throwAsIOException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	tz.throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  tz	71	None	replace
869	[BUG]  [BUGGY]  msg.throwAsIOException( " ");  [CE]  cannot  find  symbol  msg  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  msg.throwAsIOException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	msg.throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  msg	71	None	replace
870	[BUG]  [BUGGY]  e.throwAsIOException( " ");  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.throwAsIOException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
871	[BUG]  [BUGGY]  null,  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [CE]  not  a  statement  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null,  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null,  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getClass().getName());    	non-compiled	[CE]  not  a  statement	142	None	replace
872	[BUG]  [BUGGY]  parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [CE]  cannot  find  symbol  parse  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getClass().getName());    	non-compiled	[CE]  cannot  find  symbol  parse	142	None	replace
873	[BUG]  [BUGGY]  null  :  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [CE]  not  a  statement  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null  :  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null  :  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getClass().getName());    	non-compiled	[CE]  not  a  statement	142	None	replace
874	[BUG]  [BUGGY]  While(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  While(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	While(e!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	208	None	replace
875	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	81	1	add
876	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	81	1	add
877	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	81	1	add
878	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	81	1	add
879	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	81	1	add
880	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	81	1	add
881	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =;  }  if(e!=  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =;  }  if(e!=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
882	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
883	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	81	1	add
884	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	81	1	add
885	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  else  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  else  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	81	1	add
886	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  else  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  else  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  else  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	81	1	add
887	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throw  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  not  a  statement	189	None	replace
888	[BUG]  [BUGGY]  ||  e!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
889	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(timezoneId);  [CE]  cannot  find  symbol  timezoneId  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(timezoneId);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(timezoneId);	  Thread.currentThread().setContextClassLoader(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneId	41	None	replace
890	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(timezoneOffset);  [CE]  cannot  find  symbol  timezoneOffset  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(timezoneOffset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(timezoneOffset);	  Thread.currentThread().setContextClassLoader(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	41	None	replace
891	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(timezone);  [CE]  cannot  find  symbol  timezone  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(timezone);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(timezone);	  Thread.currentThread().setContextClassLoader(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezone	41	None	replace
892	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this.timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this.timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this.timezoneIndicator);	  Thread.currentThread().setContextClassLoader(timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	41	None	replace
893	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(date);  [CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(date);	  Thread.currentThread().setContextClassLoader(timezoneIndicator);    	non-compiled	[CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;	41	None	replace
894	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this.timezoneId);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this.timezoneId);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this.timezoneId);	  Thread.currentThread().setContextClassLoader(timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	41	None	replace
895	[BUG]  [BUGGY]  e.printStackTrace(calendar,  pos);  [CE]  cannot  find  symbol  calendar  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(calendar,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(calendar,  pos);	  e.printStackTrace(pos);    	non-compiled	[CE]  cannot  find  symbol  calendar	180	None	replace
896	[BUG]  [BUGGY]  e.printStackTrace(timezoneIndicator,  pos);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(timezoneIndicator,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(timezoneIndicator,  pos);	  e.printStackTrace(pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	180	None	replace
897	[BUG]  [BUGGY]  e.printStackTrace(calendar);  [CE]  cannot  find  symbol  calendar  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(calendar);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(calendar);	  e.printStackTrace(pos);    	non-compiled	[CE]  cannot  find  symbol  calendar	180	None	replace
898	[BUG]  [BUGGY]  e.printStackTrace(date,  pos);  [CE]  no  suitable  method  found  for  printStackTrace(String,ParsePosition)  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(date,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(date,  pos);	  e.printStackTrace(pos);    	non-compiled	[CE]  no  suitable  method  found  for  printStackTrace(String,ParsePosition)	180	None	replace
899	[BUG]  [BUGGY]  e.printStackTrace(date);  [CE]  no  suitable  method  found  for  printStackTrace(String)  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(date);	  e.printStackTrace(pos);    	non-compiled	[CE]  no  suitable  method  found  for  printStackTrace(String)	180	None	replace
900	[BUG]  [BUGGY]  e.printStackTrace(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(timezoneIndicator);	  e.printStackTrace(pos);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	180	None	replace
901	[BUG]  [BUGGY]  e.printStackTrace(currToken,  pos);  [CE]  cannot  find  symbol  currToken  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(currToken,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(currToken,  pos);	  e.printStackTrace(pos);    	non-compiled	[CE]  cannot  find  symbol  currToken	180	None	replace
902	[BUG]  [BUGGY]  ||  e!=  null)  {  fail  =  JsonNull.createJsonNull();  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e!=  null)  {  fail  =  JsonNull.createJsonNull();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e!=  null)  {  fail  =  JsonNull.createJsonNull();  }	  ||    e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
903	[BUG]  [BUGGY]  &&  e!=  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  &&  e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	&&  e!=  null)  {  fail  =  e;  }	  ||    e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
904	[BUG]  [BUGGY]  ||  e!=  null)  {  fail  =  NUMBER_EXPR_RESULT;  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e!=  null)  {  fail  =  NUMBER_EXPR_RESULT;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e!=  null)  {  fail  =  NUMBER_EXPR_RESULT;  }	  ||    e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
905	[BUG]  [BUGGY]  ||  e!=  null)  {  fail  =  JsonSyntaxException.create( " ");  }  [CE]  illegal  start  of  expression  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e!=  null)  {  fail  =  JsonSyntaxException.create( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e!=  null)  {  fail  =  JsonSyntaxException.create( " ");  }	  ||    e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
906	[BUG]  [BUGGY]  if(!hasMillis)  {  fail  =  e.toString();  }  [CE]  cannot  find  symbol  hasMillis  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasMillis)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasMillis)  {  fail  =  e.toString();  }	  if(!hasT)    {    fail    =    e.toString();    }    	non-compiled	[CE]  cannot  find  symbol  hasMillis	129	None	replace
907	[BUG]  [BUGGY]  if(!fail)  {  fail  =  e.toString();  }  [CE]  bad  operand  type  Exception  for  unary  operator  '!'  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!fail)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!fail)  {  fail  =  e.toString();  }	  if(!hasT)    {    fail    =    e.toString();    }    	non-compiled	[CE]  bad  operand  type  Exception  for  unary  operator  '!'	129	None	replace
908	[BUG]  [BUGGY]  if(!hasMilliseconds)  {  fail  =  e.toString();  }  [CE]  cannot  find  symbol  hasMilliseconds  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasMilliseconds)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasMilliseconds)  {  fail  =  e.toString();  }	  if(!hasT)    {    fail    =    e.toString();    }    	non-compiled	[CE]  cannot  find  symbol  hasMilliseconds	129	None	replace
909	[BUG]  [BUGGY]  if(!hasNull)  {  fail  =  e.toString();  }  [CE]  cannot  find  symbol  hasNull  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasNull)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasNull)  {  fail  =  e.toString();  }	  if(!hasT)    {    fail    =    e.toString();    }    	non-compiled	[CE]  cannot  find  symbol  hasNull	129	None	replace
910	[BUG]  [BUGGY]  if(!hasFail)  {  fail  =  e.toString();  }  [CE]  cannot  find  symbol  hasFail  [FE]                              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasFail)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasFail)  {  fail  =  e.toString();  }	  if(!hasT)    {    fail    =    e.toString();    }    	non-compiled	[CE]  cannot  find  symbol  hasFail	129	None	replace
911	[BUG]  [BUGGY]  if(!hasTimeZone)  {  fail  =  e.toString();  }  [CE]  cannot  find  symbol  hasTimeZone  [FE]                                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone)  {  fail  =  e.toString();  }	  if(!hasT)    {    fail    =    e.toString();    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	129	None	replace
912	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  IllegalStateException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  IllegalStateException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  IllegalStateException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalStateException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	91	None	replace
913	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  UTC_ID;  }  [CE]  inconvertible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  UTC_ID;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  UTC_ID;  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalStateException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	91	None	replace
914	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  JsonSyntaxException.create(timezoneIndicator);  }  [CE]  inconvertible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  JsonSyntaxException.create(timezoneIndicator);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalStateException)  {  fail  =  JsonSyntaxException.create(timezoneIndicator);  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalStateException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	91	None	replace
915	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  e.printStackTrace();  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        e.printStackTrace();    e.printStackTrace();  e.printStackTrace();	  	compilable	  [FE]  JsonSyntaxException  	60	1	add
916	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  e.printStackTrace();  e.printStackTrace();  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  e.printStackTrace();  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    e.printStackTrace();  e.printStackTrace();	  	compilable	  [FE]  JsonSyntaxException  	60	1	add
917	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	60	None	add
918	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(!hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(!hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    if(!hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	60	None	add
919	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(!hasT)  {  e.printStackTrace();  e.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(!hasT)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    if(!hasT)  {  e.printStackTrace();  e.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	60	None	add
920	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	60	1	add
921	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	60	1	add
922	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	60	None	add
923	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]                JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	60	None	add
924	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	60	1	add
925	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]                  JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	60	1	add
926	[BUG]  [BUGGY]  if(e!=  null  ||!e.isEmpty())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  ||!e.isEmpty())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  ||!e.isEmpty())  {  fail  =  e;  }	  if(e!=    null    &&!e.isEmpty())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
927	[BUG]  [BUGGY]  if(fail!=  null  &&!e.isEmpty())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null  &&!e.isEmpty())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null  &&!e.isEmpty())  {  fail  =  e;  }	  if(e!=    null    &&!e.isEmpty())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
928	[BUG]  [BUGGY]  if(e  ==  null  &&!e.isEmpty())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  &&!e.isEmpty())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  &&!e.isEmpty())  {  fail  =  e;  }	  if(e!=    null    &&!e.isEmpty())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
929	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  UTC_ID;  }  [CE]  inconvertible  types  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  UTC_ID;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  fail  =  UTC_ID;  }	  if(e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	193	None	replace
930	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundException)  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundException)  {  fail  =  e;  }	  if(e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	193	None	replace
931	[BUG]  [BUGGY]  if(e.hasChronology())  {  fail  =  e.toString();  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.hasChronology())  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.hasChronology())  {  fail  =  e.toString();  }	  if(!hasT)    {    fail    =    e.toString();    }    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
932	[BUG]  [BUGGY]  if(hasT)  {  fail  =  e.toString();  }  [CE]  cannot  find  symbol  hasT  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  fail  =  e.toString();  }	  if(!hasT)    {    fail    =    e.toString();    }    	non-compiled	[CE]  cannot  find  symbol  hasT	129	None	replace
933	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {	  	non-compiled	[CE]  'catch'  without  'try'	81	None	add
934	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =	  	non-compiled	[CE]  'catch'  without  'try'	81	None	add
935	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	81	None	add
936	[BUG]  [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  Throwable  cause  =  e.getCause();  }  [CE]  unreachable  statement  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  Throwable  cause  =  e.getCause();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  Throwable  cause  =  e.getCause();  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	non-compiled	[CE]  unreachable  statement	33	None	replace
937	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException( " ");  Throwable  cause  =  e.getCause();  }  [CE]  unreachable  statement  [FE]                IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException( " ");  Throwable  cause  =  e.getCause();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  throw  new  IllegalArgumentException( " ");  Throwable  cause  =  e.getCause();  }	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getCause();    	non-compiled	[CE]  unreachable  statement	33	None	replace
938	[BUG]  [BUGGY]  e.printLocal(DateTimeUtils.currentTimeMillis());  [CE]  cannot  find  symbol  DateTimeUtils  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printLocal(DateTimeUtils.currentTimeMillis());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printLocal(DateTimeUtils.currentTimeMillis());	  e.printStackTrace();    if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	204	None	replace
939	[BUG]  [BUGGY]  e.printLocal(TimeZone.getDefault());  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printLocal(TimeZone.getDefault());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printLocal(TimeZone.getDefault());	  e.printStackTrace();    if(e!=    null)    {    e.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	204	None	replace
940	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }  [CE]  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }  If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".   ");    }    If(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".   ");  }	  	non-compiled	[CE]  	151	None	add
941	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  e);  [CE]  <identifier>  expected  [FE]        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  e);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
942	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "* "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null  &&!e.getMessage().equals( "* "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
943	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "* "))  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "* "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&!e.getMessage().equals( "* "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
944	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	218	1	replace
945	[BUG]  [BUGGY]  if(fail!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null  &&!e.getMessage().equals( " "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	218	1	replace
946	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  new  MutableFormatException  [CE]  unclosed  string  literal  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  new  MutableFormatException  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  new  MutableFormatException	  if(e    ==    null)    {    fail    =    e;    }    if(e    {    null)    {    fail    =    e;    }    	non-compiled	[CE]  unclosed  string  literal	161	None	replace
947	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  e();  [CE]  unclosed  string  literal  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  e();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  e();	  if(e    ==    null)    {    fail    =    e;    }    if(e    {    null)    {    fail    =    e;    }    	non-compiled	[CE]  unclosed  string  literal	161	None	replace
948	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatorita  [CE]  unclosed  string  literal  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatorita  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatoritaDatorita	  if(e    ==    null)    {    fail    =    e;    }    if(e    {    null)    {    fail    =    e;    }    	non-compiled	[CE]  unclosed  string  literal	161	None	replace
949	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  true;  [CE]  unclosed  string  literal  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  true;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  true;	  if(e    ==    null)    {    fail    =    e;    }    if(e    {    null)    {    fail    =    e;    }    	non-compiled	[CE]  unclosed  string  literal	161	None	replace
950	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  e(e;  [CE]  unclosed  string  literal  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  e(e;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  e(e;	  if(e    ==    null)    {    fail    =    e;    }    if(e    {    null)    {    fail    =    e;    }    	non-compiled	[CE]  unclosed  string  literal	161	None	replace
951	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  false;  [CE]  unclosed  string  literal  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  false;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  false;	  if(e    ==    null)    {    fail    =    e;    }    if(e    {    null)    {    fail    =    e;    }    	non-compiled	[CE]  unclosed  string  literal	161	None	replace
952	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  nullFormatException(  [CE]  unclosed  string  literal  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  nullFormatException(  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  nullFormatException(	  if(e    ==    null)    {    fail    =    e;    }    if(e    {    null)    {    fail    =    e;    }    	non-compiled	[CE]  unclosed  string  literal	161	None	replace
953	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  if(e!=  null)  {  fail  =  e;  }  [CE]  'catch'  without  'try'  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  if(e!=  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    if(e    [Delete]    null)    {    fail    =    e;    }    	non-compiled	[CE]  'catch'  without  'try'	59	None	replace
954	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundException)  {  if(e!=  null)  {  fail  =  e;  }  [CE]  'catch'  without  'try'  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundException)  {  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundException)  {  if(e!=  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    if(e    [Delete]    null)    {    fail    =    e;    }    	non-compiled	[CE]  'catch'  without  'try'	59	None	replace
955	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    if(e    [Delete]    null)    {    fail    =    e;    }    	non-compiled	[CE]  'catch'  without  'try'	59	None	replace
956	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundException)  {  if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundException)  {  if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundException)  {  if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    if(e    [Delete]    null)    {    fail    =    e;    }    	non-compiled	[CE]  'catch'  without  'try'	59	None	replace
957	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  if(e  ==  null)  {  fail  =  e;  }  [CE]  'catch'  without  'try'  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  if(e  ==  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    if(e    [Delete]    null)    {    fail    =    e;    }    	non-compiled	[CE]  'catch'  without  'try'	59	None	replace
958	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  if(e!=  null)  {  fail  =  UTC_ID;  }  [CE]  'catch'  without  'try'  [FE]                              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  if(e!=  null)  {  fail  =  UTC_ID;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  if(e!=  null)  {  fail  =  UTC_ID;  }	  if(e!=    null)    {    fail    =    e;    }    if(e    [Delete]    null)    {    fail    =    e;    }    	non-compiled	[CE]  'catch'  without  'try'	59	None	replace
959	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException();  }  [CE]  'catch'  without  'try'  [FE]                                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  if(e!=  null)  {  fail  =  new  IndexOutOfBoundsException();  }	  if(e!=    null)    {    fail    =    e;    }    if(e    [Delete]    null)    {    fail    =    e;    }    	non-compiled	[CE]  'catch'  without  'try'	59	None	replace
960	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  new  NullPointerException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null)  {  fail  =  new  NullPointerException( " ");  }	  if(e!=    null)    {    fail    =    new    NullPointerException(   "   ");    }    	compilable	  [FE]  NullPointerException  	159	1	replace
961	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  new  NullPointerException( " ");  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  new  NullPointerException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  new  NullPointerException( " ");  }	  if(e!=    null)    {    fail    =    new    NullPointerException(   "   ");    }    	compilable	  [FE]  NullPointerException  	159	1	replace
962	[BUG]  [BUGGY]  Parchet.IllegalArgumentException  e  =  getStandardException( " ");  [CE]  package  Parchet  does  not  exist  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Parchet.IllegalArgumentException  e  =  getStandardException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Parchet.IllegalArgumentException  e  =  getStandardException( " ");	  if(e!=    null)    {    fail    =    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  package  Parchet  does  not  exist	159	None	replace
963	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	24	1	add
964	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	24	1	add
965	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e	  	non-compiled	[CE]  ';'  expected	24	None	add
966	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e  {  null)  {  fail  =  null;  }  [CE]  ')'  expected  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  null;  }  if(e  {  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    null;    }    if(e  {  null)  {  fail  =  null;  }	  	non-compiled	[CE]  ')'  expected	37	None	add
967	[BUG]  [BUGGY]  if(hasT)  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  hasT  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  fail  =  e.getMessage();  }	  if(!hasT)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  cannot  find  symbol  hasT	128	None	replace
968	[BUG]  [BUGGY]  if(e.hasChronology())  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.hasChronology())  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.hasChronology())  {  fail  =  e.getMessage();  }	  if(!hasT)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
969	[BUG]  [BUGGY]  if(e.hasMessage())  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.hasMessage())  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.hasMessage())  {  fail  =  e.getMessage();  }	  if(!hasT)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
970	[BUG]  [BUGGY]  if(!hasTimeZone)  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  hasTimeZone  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone)  {  fail  =  e.getMessage();  }	  if(!hasT)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	128	None	replace
971	[BUG]  [BUGGY]  Parchet.IllegalArgumentException  e  =  null;  [CE]  package  Parchet  does  not  exist  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Parchet.IllegalArgumentException  e  =  null;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Parchet.IllegalArgumentException  e  =  null;	  if(e!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  package  Parchet  does  not  exist	132	None	replace
972	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportCodeChange();  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportCodeChange();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().reportCodeChange();	  if(e!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
973	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(  [CE]  ')'  expected  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(	  	non-compiled	[CE]  ')'  expected	22	None	add
974	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	22	1	add
975	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	22	1	add
976	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(  [CE]  ')'  expected  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(	  	non-compiled	[CE]  ')'  expected	22	None	add
977	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "  [CE]  unclosed  string  literal  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "	  	non-compiled	[CE]  unclosed  string  literal	22	None	add
978	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if  [CE]  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ",     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if	  	non-compiled	[CE]  	22	None	add
979	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&!e.isEmpty())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&!e.isEmpty())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&!e.isEmpty())  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
980	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(tz);  [CE]  cannot  find  symbol  tz  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().process(tz);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().process(tz);	  Thread.currentThread().getContextClassLoader().process(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  tz	211	None	replace
981	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(this.timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().process(this.timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().process(this.timezoneIndicator);	  Thread.currentThread().getContextClassLoader().process(timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	211	None	replace
982	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " ");  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( " ");	  if(e    ==    null)    {    fail    =    e;    }    If(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
983	[BUG]  [BUGGY]  EventQueue.isTrue(false);  [CE]  cannot  find  symbol  EventQueue  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  EventQueue.isTrue(false);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	EventQueue.isTrue(false);	  if(e    ==    null)    {    fail    =    e;    }    If(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  EventQueue	84	None	replace
984	[BUG]  [BUGGY]  if(e  ==  null)  {  fail;  }  [CE]  not  a  statement  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail;  }	  if(e    ==    null)    {    fail    =    e;    }    If(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  not  a  statement	84	None	replace
985	[BUG]  [BUGGY]  if(!hasNumberFormatException)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasNumberFormatException  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasNumberFormatException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasNumberFormatException)  {  fail  =  e;  }	  if(!hasMilliseconds)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasNumberFormatException	7	None	replace
986	[BUG]  [BUGGY]  if(!hasThrows)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasThrows  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasThrows)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasThrows)  {  fail  =  e;  }	  if(!hasMilliseconds)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasThrows	7	None	replace
987	[BUG]  [BUGGY]  if(hasTimeZoneIndicator)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasTimeZoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasTimeZoneIndicator)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasTimeZoneIndicator)  {  fail  =  e;  }	  if(!hasTimezoneIndicator)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZoneIndicator	213	None	replace
988	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ((  IndexOutOfBoundsException)e).getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	((  IndexOutOfBoundsException)e).getMessage();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.getMessage();    }    	compilable	  [FE]  NullPointerException  	192	1	replace
989	[BUG]  [BUGGY]  ((  IndexOutOfBoundsException)e).getMessage();  [FE]  NullPointerException  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ((  IndexOutOfBoundsException)e).getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	((  IndexOutOfBoundsException)e).getMessage();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.getMessage();    }    	compilable	  [FE]  NullPointerException  	192	1	replace
990	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	192	None	replace
991	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&  e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	192	None	replace
992	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e.getClass()!=  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e.getClass()!=  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&  e.getClass()!=  null)  {  fail  =  e.getMessage();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	192	None	replace
993	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =	  	non-compiled	[CE]  'catch'  without  'try'	51	None	add
994	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {	  	non-compiled	[CE]  'catch'  without  'try'	51	None	add
995	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e	  	non-compiled	[CE]  ';'  expected	51	None	add
996	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail	  	non-compiled	[CE]  'catch'  without  'try'	51	None	add
997	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( "timezoneIndicator  is  null. ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( "timezoneIndicator  is  null. ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  IllegalArgumentException( "timezoneIndicator  is  null. ");	  if(e!=    null)    {    fail    =    e;    }    If(e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	57	None	replace
998	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	181	1	add
999	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( ".   ");  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	181	1	add
1000	[BUG]  [BUGGY]  if(e  ==  null  ||!hasTimeZone)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasTimeZone  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  ||!hasTimeZone)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  ||!hasTimeZone)  {  fail  =  e;  }	  if(e    ==    null    ||!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	206	None	replace
1001	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  if(e  instanceof  IndexOutOfBoundsException)  ==  fail  =  null;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  if(e  instanceof  IndexOutOfBoundsException)  ==  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    if(e  instanceof  IndexOutOfBoundsException)  ==  fail  =  null;  }	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
1002	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  for(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [CE]  not  a  statement  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  for(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    for(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }	  	non-compiled	[CE]  not  a  statement	87	None	add
1003	[BUG]  [BUGGY]  StaxUtil.throwIndexOutOfBoundsException( " ");  e.printStackTrace();  [CE]  cannot  find  symbol  StaxUtil  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  StaxUtil.throwIndexOutOfBoundsException( " ");  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	StaxUtil.throwIndexOutOfBoundsException( " ");  e.printStackTrace();	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	70	None	replace
1004	[BUG]  [BUGGY]  StaxUtil.throwIndexOutOfBoundsException(e);  e.printStackTrace();  [CE]  cannot  find  symbol  StaxUtil  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  StaxUtil.throwIndexOutOfBoundsException(e);  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	StaxUtil.throwIndexOutOfBoundsException(e);  e.printStackTrace();	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	70	None	replace
1005	[BUG]  [BUGGY]  StaxUtil.throwIndexOutOfBoundsException(e, " ");  [CE]  cannot  find  symbol  StaxUtil  [FE]                          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  StaxUtil.throwIndexOutOfBoundsException(e, " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	StaxUtil.throwIndexOutOfBoundsException(e, " ");	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol  StaxUtil	70	None	replace
1006	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	196	None	replace
1007	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [CE]  non-static  method  getClass()  cannot  be  referenced  from  a  static  context  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(getClass().getClassLoader());	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    	non-compiled	[CE]  non-static  method  getClass()  cannot  be  referenced  from  a  static  context	21	None	replace
1008	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  Calendar.MILLISECOND);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  Calendar.MILLISECOND);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this,  Calendar.MILLISECOND);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	21	None	replace
1009	[BUG]  [BUGGY]  if(!hasTimeZone)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasTimeZone  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	124	None	replace
1010	[BUG]  [BUGGY]  if(!hasT)  {  pos.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  pos.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  pos.printStackTrace();  }	  if(!hasT)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	124	None	replace
1011	[BUG]  [BUGGY]  if(!hasT)  {  calendar.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  calendar.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  calendar.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	124	None	replace
1012	[BUG]  [BUGGY]  Thread.currentThread().setContextClass(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClass(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClass(timezoneIndicator);	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	123	None	replace
1013	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&!timezoneIndicator.isEmpty())  {  fail  =  null;  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&!timezoneIndicator.isEmpty())  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&!timezoneIndicator.isEmpty())  {  fail  =  null;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	88	None	replace
1014	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  UTC_ID;  }  [CE]  incompatible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  UTC_ID;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  UTC_ID;  }	  if(e!=    null)    {    fail    =    e;    }    if(e    >=    null)    {    fail    =    e;    }    	non-compiled	[CE]  incompatible  types	55	None	replace
1015	[BUG]  [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(timezoneIndicator);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointer  e  =  new  UnsupportedOperation(timezoneIndicator);	  if(e!=    null)    {    fail    =    e;    }    if(e    >=    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
1016	[BUG]  [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  tz;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }  [CE]  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  tz;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  tz;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  	149	None	replace
1017	[BUG]  [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  tz;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  tz);  }  [CE]  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  tz;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  tz);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)  {  fail  =  tz;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  tz);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  	149	None	replace
1018	[BUG]  [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)  {  if(tz!=  null)  {  fail  =  tz;  }  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)  {  if(tz!=  null)  {  fail  =  tz;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)  {  if(tz!=  null)  {  fail  =  tz;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  ';'  expected	149	None	replace
1019	[BUG]  [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)  {  if(tz  ==  null)  {  fail  =  tz;  }  [CE]  ';'  expected  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)  {  if(tz  ==  null)  {  fail  =  tz;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)  {  if(tz  ==  null)  {  fail  =  tz;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  ';'  expected	149	None	replace
1020	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IndexOutOfBoundsException  	68	1	replace
1021	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  IndexOutOfBoundsException  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IndexOutOfBoundsException  	68	1	replace
1022	[BUG]  [BUGGY]  pos.setIndex(outOfficialTimeZone);  [CE]  cannot  find  symbol  outOfficialTimeZone  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(outOfficialTimeZone);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(outOfficialTimeZone);	  pos.setIndex(parseEndOffset);    	non-compiled	[CE]  cannot  find  symbol  outOfficialTimeZone	222	None	replace
1023	[BUG]  [BUGGY]  pos.setTime(timezoneID);  [CE]  cannot  find  symbol  timezoneID  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setTime(timezoneID);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setTime(timezoneID);	          pos.setTime(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezoneID	4	None	replace
1024	[BUG]  [BUGGY]  pos.setTime(timeZone);  [CE]  cannot  find  symbol  timeZone  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setTime(timeZone);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setTime(timeZone);	          pos.setTime(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timeZone	4	None	replace
1025	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
1026	[BUG]  [BUGGY]  timeout  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  while(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  while(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    when(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	compilable	timeout	28	1	replace
1027	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  while(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  timeout  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  while(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  while(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    when(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	compilable	timeout	28	1	replace
1028	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    when(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	28	1	replace
1029	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [FE]  NullPointerException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    when(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	28	1	replace
1030	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  while(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  while(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  while(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    when(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	28	None	replace
1031	[BUG]  [BUGGY]  parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [CE]  cannot  find  symbol  parse  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parse.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  parse	138	None	replace
1032	[BUG]  [BUGGY]  null  :  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null  :  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null  :  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  not  a  statement	138	None	replace
1033	[BUG]  [BUGGY]  NUMBER_OF_DAY.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  e.printStackTrace();  [CE]  cannot  find  symbol  NUMBER_OF_DAY  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NUMBER_OF_DAY.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NUMBER_OF_DAY.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getClass().getName());    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_DAY	139	None	replace
1034	[BUG]  [BUGGY]  aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ").getMessage();  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ").getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ").getMessage();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
1035	[BUG]  [BUGGY]  aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ", ".getMessage());  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ", ".getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ", ".getMessage());  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
1036	[BUG]  [BUGGY]  aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " "  +  e.getMessage());  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " "  +  e.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " "  +  e.getMessage());  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
1037	[BUG]  [BUGGY]  aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  pos.getMessage());  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  pos.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  pos)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  pos.getMessage());  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
1038	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "  [CE]  unclosed  string  literal  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "	  	non-compiled	[CE]  unclosed  string  literal	17	None	add
1039	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  ParsePosition  pos  =  new  ParsePosition(timezoneIndicator);  Thread.currentThread().getContextClassLoader();  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  ParsePosition  pos  =  new  ParsePosition(timezoneIndicator);  Thread.currentThread().getContextClassLoader();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    ParsePosition  pos  =  new  ParsePosition(timezoneIndicator);  Thread.currentThread().getContextClassLoader();	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	97	None	add
1040	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  ParsePosition  pos  =  new  ParsePosition(this,  DateTimeConstants.MILLIS_PER_DAY);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  ParsePosition  pos  =  new  ParsePosition(this,  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    ParsePosition  pos  =  new  ParsePosition(this,  DateTimeConstants.MILLIS_PER_DAY);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	97	None	add
1041	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  ParsePosition  pos  =  new  ParsePosition(this,  DateTimeConstants.SECONDS_PER_MINUTE);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  ParsePosition  pos  =  new  ParsePosition(this,  DateTimeConstants.SECONDS_PER_MINUTE);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    ParsePosition  pos  =  new  ParsePosition(this,  DateTimeConstants.SECONDS_PER_MINUTE);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	97	None	add
1042	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  pos.setTime(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  pos.setTime(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    Thread.currentThread().getContextClassLoader();  pos.setTime(timezoneIndicator);	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	97	None	add
1043	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  ParsePosition  pos  =  new  ParsePosition(this,  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  ParsePosition  pos  =  new  ParsePosition(this,  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    ParsePosition  pos  =  new  ParsePosition(this,  DateTimeConstants.MILLIS_PER_MINUTE);	  	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	97	None	add
1044	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	compilable	  [FE]  JsonSyntaxException  	178	1	replace
1045	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	compilable	  [FE]  JsonSyntaxException  	178	1	replace
1046	[BUG]  [BUGGY]  While(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  While(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	While(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  	178	None	replace
1047	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(getMessage()));  [CE]  [FE]        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(getMessage()));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " ").equals(getMessage()));	  throw    new    IllegalArgumentException(   "   ".equals(getMessage()));    	non-compiled	[CE]  	224	None	replace
1048	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  getMessage()));  [CE]  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  getMessage()));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " "  +  getMessage()));	  throw    new    IllegalArgumentException(   "   ".equals(getMessage()));    	non-compiled	[CE]  	224	None	replace
1049	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ClassKey( "timezoneIndicator "));  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ClassKey( "timezoneIndicator "));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(new  ClassKey( "timezoneIndicator "));	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    If(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
1050	[BUG]  [BUGGY]  NullPointerException  e  =  new  IllegalStateException( " ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointerException  e  =  new  IllegalStateException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointerException  e  =  new  IllegalStateException( " ");	  NullPointerException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	164	None	replace
1051	[BUG]  [BUGGY]  NullPointerException  e  =  new  IllegalArgumentException( " ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointerException  e  =  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointerException  e  =  new  IllegalArgumentException( " ");	  NullPointerException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	164	None	replace
1052	[BUG]  [BUGGY]  NullPointerException  e  =  new  NullPointerException();  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointerException  e  =  new  NullPointerException();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointerException  e  =  new  NullPointerException();	  NullPointerException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	164	None	replace
1053	[BUG]  [BUGGY]  NullPointerException  e  =  calendar.getNullPointerException();  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointerException  e  =  calendar.getNullPointerException();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointerException  e  =  calendar.getNullPointerException();	  NullPointerException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	164	None	replace
1054	[BUG]  [BUGGY]  pos.setIndex(new  String(date));  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(new  String(date));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(new  String(date));	  pos.setIndex(input);    	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	75	None	replace
1055	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  return  calendar.getTime();  }  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  return  calendar.getTime();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  return  calendar.getTime();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    return    calendar.getTime();    }    	non-compiled	[CE]  incompatible  types	216	None	replace
1056	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  return  calendar.getTime();  }  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  return  calendar.getTime();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  return  calendar.getTime();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    return    calendar.getTime();    }    	non-compiled	[CE]  incompatible  types	216	None	replace
1057	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  calendar.getMessage();  }  else  {  return  calendar.getTime();  }  [CE]  cannot  find  symbol  calendar  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  calendar.getMessage();  }  else  {  return  calendar.getTime();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  fail  =  calendar.getMessage();  }  else  {  return  calendar.getTime();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    return    calendar.getTime();    }    	non-compiled	[CE]  cannot  find  symbol  calendar	216	None	replace
1058	[BUG]  [BUGGY]  if(!hasTimeZone)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasTimeZone  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	112	None	replace
1059	[BUG]  [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	112	None	replace
1060	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  e.printStackTrace();  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	60	1	add
1061	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  e.printStackTrace();  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  e.printStackTrace();  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	60	1	add
1062	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  e.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    if(hasT)  {  e.printStackTrace();  e.printStackTrace();  e.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	60	None	add
1063	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  e.printStackTrace();  e.printStackTrace();  }  [CE]  cannot  find  symbol  hasT  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    if(hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  e.printStackTrace();  e.printStackTrace();  }	  	non-compiled	[CE]  cannot  find  symbol  hasT	60	None	add
1064	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	60	1	add
1065	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	60	1	add
1066	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  System.err.println( "Unable  to  parse  date: "+date);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  System.err.println( "Unable  to  parse  date: "+date);  }	  	compilable	  [FE]  JsonSyntaxException  	60	1	add
1067	[BUG]  [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  System.err.println( "Unable  to  parse  date: "+date);  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  System.err.println( "Unable  to  parse  date: "+date);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  System.err.println( "Unable  to  parse  date: "+date);  }	  	compilable	  [FE]  JsonSyntaxException  	60	1	add
1068	[BUG]  [BUGGY]  NUMBER_OF_DAY.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  e.printStackTrace();  [CE]  cannot  find  symbol  NUMBER_OF_DAY  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NUMBER_OF_DAY.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NUMBER_OF_DAY.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getMessage());  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getMessage());    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_DAY	140	None	replace
1069	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  fail  =  e;  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(timezoneIndicator!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(timezoneIndicator!=  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    if(e!=    null)    {    failure    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	135	None	replace
1070	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  if(e!=  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  if(e!=  null)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  e;  }  else  if(e!=  null)  {  failure  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    if(e!=    null)    {    failure    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  failure	135	None	replace
1071	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  date);  }  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,String)  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  date);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  date);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,String)	170	None	replace
1072	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos,  e);  }  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,ParsePosition,IndexOutOfBoundsException)  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos,  e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos,  e);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,ParsePosition,IndexOutOfBoundsException)	170	None	replace
1073	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " "  +  pos);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " "  +  pos);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ",    pos);    }    	compilable	  [FE]  JsonSyntaxException  	170	1	replace
1074	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " "  +  pos);  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " "  +  pos);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " "  +  pos);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ",    pos);    }    	compilable	  [FE]  JsonSyntaxException  	170	1	replace
1075	[BUG]  [BUGGY]  Thread.currentThread().getContextClass().getName())  {  fail  =  new  IndexOutOfBoundsException( " ",  pos);  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClass().getName())  {  fail  =  new  IndexOutOfBoundsException( " ",  pos);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClass().getName())  {  fail  =  new  IndexOutOfBoundsException( " ",  pos);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  	170	None	replace
1076	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( " ".   ");  [CE]  unclosed  string  literal  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException( " ".   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IndexOutOfBoundsException( " ".   ");	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".   ");    }    	non-compiled	[CE]  unclosed  string  literal	152	None	replace
1077	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass());  [CE]  non-static  method  getClass()  cannot  be  referenced  from  a  static  context  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getClass());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(getClass());	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    	non-compiled	[CE]  non-static  method  getClass()  cannot  be  referenced  from  a  static  context	47	None	replace
1078	[BUG]  [BUGGY]  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1079	[BUG]  [BUGGY]  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }  [CE]  illegal  start  of  expression  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
1080	[BUG]  [BUGGY]  NUMBER_OF_DAY.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();  [CE]  cannot  find  symbol  NUMBER_OF_DAY  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NUMBER_OF_DAY.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NUMBER_OF_DAY.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_DAY	137	None	replace
1081	[BUG]  [BUGGY]  ((  IndexOutOfBoundsException)e).fail  =  e.toString();  [CE]  cannot  find  symbol  fail  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ((  IndexOutOfBoundsException)e).fail  =  e.toString();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	((  IndexOutOfBoundsException)e).fail  =  e.toString();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.toString();    }    	non-compiled	[CE]  cannot  find  symbol  fail	194	None	replace
1082	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  String  msg  =  e.toString();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	String  msg  =  e.toString();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.toString();    }    	compilable	  [FE]  NullPointerException  	194	1	replace
1083	[BUG]  [BUGGY]  String  msg  =  e.toString();  [FE]  NullPointerException  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  String  msg  =  e.toString();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	String  msg  =  e.toString();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.toString();    }    	compilable	  [FE]  NullPointerException  	194	1	replace
1084	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  UTC_ID.toString();  }  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  UTC_ID.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  UTC_ID.toString();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.toString();    }    	non-compiled	[CE]  incompatible  types	194	None	replace
1085	[BUG]  [BUGGY]  pos.setIndex(Offset.valueOf(timezoneIndicator));  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(Offset.valueOf(timezoneIndicator));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(Offset.valueOf(timezoneIndicator));	  pos.setIndex(i);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	101	None	replace
1086	[BUG]  [BUGGY]  pos.setIndex(Offset.valueOf(offset));  [CE]  cannot  find  symbol  offset  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(Offset.valueOf(offset));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(Offset.valueOf(offset));	  pos.setIndex(i);    	non-compiled	[CE]  cannot  find  symbol  offset	101	None	replace
1087	[BUG]  [BUGGY]  pos.setIndex(OffsetUtils.currentTimeMillis());  [CE]  cannot  find  symbol  OffsetUtils  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(OffsetUtils.currentTimeMillis());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(OffsetUtils.currentTimeMillis());	  pos.setIndex(i);    	non-compiled	[CE]  cannot  find  symbol  OffsetUtils	101	None	replace
1088	[BUG]  [BUGGY]  this.result  =  new  IndexOutOfBoundsException( " ");  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  this.result  =  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	this.result  =  new  IndexOutOfBoundsException( " ");	  result    =    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	110	None	replace
1089	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().report(e,  timezoneIndicator);	  Thread.currentThread().getContextClassLoader().report(e);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	187	None	replace
1090	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  null);  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(e,  null);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().report(e,  null);	  Thread.currentThread().getContextClassLoader().report(e);    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
1091	[BUG]  [BUGGY]  ParsePosition  pos  =  calendar.getPosition();  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ParsePosition  pos  =  calendar.getPosition();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ParsePosition  pos  =  calendar.getPosition();	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	108	None	replace
1092	[BUG]  [BUGGY]  ParsePosition  pos  =  Calendar.getInstance(timezoneIndicator);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ParsePosition  pos  =  Calendar.getInstance(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ParsePosition  pos  =  Calendar.getInstance(timezoneIndicator);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	108	None	replace
1093	[BUG]  [BUGGY]  Status.checkState(timezoneIndicator  ==  null);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Status.checkState(timezoneIndicator  ==  null);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Status.checkState(timezoneIndicator  ==  null);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	108	None	replace
1094	[BUG]  [BUGGY]  ParsePosition  pos  =  new  ParsePosition(timezoneIndicator);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ParsePosition  pos  =  new  ParsePosition(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ParsePosition  pos  =  new  ParsePosition(timezoneIndicator);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	108	None	replace
1095	[BUG]  [BUGGY]  Status.checkState(timezoneIndicator!=  null);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Status.checkState(timezoneIndicator!=  null);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Status.checkState(timezoneIndicator!=  null);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	108	None	replace
1096	[BUG]  [BUGGY]  ParsePosition  pos  =  new  ParsePosition(date);  [CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ParsePosition  pos  =  new  ParsePosition(date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ParsePosition  pos  =  new  ParsePosition(date);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  variable  pos  is  already  defined  in  method  parse(String,ParsePosition)	108	None	replace
1097	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(TimeZone.class);  [CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(TimeZone.class);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(TimeZone.class);	  Thread.currentThread().setContextClassLoader(timezoneIndicator);    	non-compiled	[CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;	41	None	replace
1098	[BUG]  [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.SECONDS_PER_MINUTE);  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.SECONDS_PER_MINUTE);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.SECONDS_PER_MINUTE);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1099	[BUG]  [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.MILLIS_PER_SECOND);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1100	[BUG]  [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.DEFAULT_TIME_ZONE);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.DEFAULT_TIME_ZONE);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.DEFAULT_TIME_ZONE);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1101	[BUG]  [BUGGY]  DescimalParser  parser  =  new  DescimalParser(timezoneIndicator);  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  DescimalParser  parser  =  new  DescimalParser(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	DescimalParser  parser  =  new  DescimalParser(timezoneIndicator);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1102	[BUG]  [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.MILLIS_PER_MINUTE);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1103	[BUG]  [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.MILLIS_PER_DAY);  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointer  e  =  new  UnsupportedOperation(this,  DateTimeConstants.MILLIS_PER_DAY);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
1104	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =!hasTimeZone();  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =!hasTimeZone();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =!hasTimeZone();  }	  if(!hasTimeZone())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1105	[BUG]  [BUGGY]  if(!hasTimeZone())  {  fail  =  e.toString();  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone())  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone())  {  fail  =  e.toString();  }	  if(!hasTimeZone())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1106	[BUG]  [BUGGY]  if(!hasTimeZone())  {  fail  =  UTC_ID;  }  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone())  {  fail  =  UTC_ID;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone())  {  fail  =  UTC_ID;  }	  if(!hasTimeZone())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1107	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " "));  }  [CE]  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " "));  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " "));  }	  	non-compiled	[CE]  	201	None	add
1108	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  inconvertible  types  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  inconvertible  types	184	None	replace
1109	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,IndexOutOfBoundsException)  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,IndexOutOfBoundsException)	184	None	replace
1110	[BUG]  [BUGGY]  IllegalArgumentException  ex  =  e.getMessage();  [CE]  incompatible  types  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  ex  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  ex  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    ex    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	191	None	replace
1111	[BUG]  [BUGGY]  NullPointer  ex  =  e.getMessage();  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointer  ex  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointer  ex  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    ex    =    e.getMessage();    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
1112	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	146	1	add
1113	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	146	1	add
1114	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  }  [CE]  cannot  find  symbol  milliseconds  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    for(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  milliseconds	172	None	replace
1115	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  tz  =  new  IllegalStateException( "   ");  [CE]  unreachable  statement  [FE]    IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  tz  =  new  IllegalStateException( "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalStateException(   "   ");    Throwable  tz  =  new  IllegalStateException( "   ");	  	non-compiled	[CE]  unreachable  statement	113	None	add
1116	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
1117	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
1118	[BUG]  [BUGGY]  e.printAsIOException( " ");  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printAsIOException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1119	[BUG]  [BUGGY]  parseAsIOException( " ");  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parseAsIOException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parseAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1120	[BUG]  [BUGGY]  assistExceptionHandler( " ");  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  assistExceptionHandler( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	assistExceptionHandler( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1121	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    e.printStackTrace();    	compilable	  [FE]  NullPointerException  	61	1	replace
1122	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    e.printStackTrace();    	compilable	  [FE]  NullPointerException  	61	1	replace
1123	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null)  {  e.printStackTrace();  e.printStackTrace();  }	  e.printStackTrace();    e.printStackTrace();    	compilable	  [FE]  NullPointerException  	61	1	replace
1124	[BUG]  [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  e.printStackTrace();  }  [FE]  NullPointerException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  e.printStackTrace();  e.printStackTrace();  }	  e.printStackTrace();    e.printStackTrace();    	compilable	  [FE]  NullPointerException  	61	1	replace
1125	[BUG]  [BUGGY]  &&  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  &&  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	&&  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1126	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  UTC_ID;  }  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  UTC_ID;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  UTC_ID;  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    >=    null)    {    fail    =    e;    }    	non-compiled	[CE]  incompatible  types	83	None	replace
1127	[BUG]  [BUGGY]  Thread.currentThread().interrupt(this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt(this);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt(this);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	45	None	replace
1128	[BUG]  [BUGGY]  Thread.currentThread().interrupt(e,  TimeZone.getDefault());  [CE]  method  interrupt  in  class  Thread  cannot  be  applied  to  given  types;  [FE]          [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt(e,  TimeZone.getDefault());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt(e,  TimeZone.getDefault());	  Thread.currentThread().interrupt();    	non-compiled	[CE]  method  interrupt  in  class  Thread  cannot  be  applied  to  given  types;	45	None	replace
1129	[BUG]  [BUGGY]  Thread.currentThread().interrupt(throw);  [CE]  illegal  start  of  expression  [FE]            [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt(throw);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt(throw);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1130	[BUG]  [BUGGY]  Thread.currentThread().interrupt(result);  [CE]  cannot  find  symbol  result  [FE]              [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt(result);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt(result);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  cannot  find  symbol  result	45	None	replace
1131	[BUG]  [BUGGY]  Thread.currentThread().interrupt(e,  TimeZone.UTC);  [CE]  cannot  find  symbol  UTC  [FE]                [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt(e,  TimeZone.UTC);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt(e,  TimeZone.UTC);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  cannot  find  symbol  UTC	45	None	replace
1132	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()  >=  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()  >=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&  e.getMessage()  >=  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	220	None	replace
1133	[BUG]  [BUGGY]  pos.setIndex(Offset.fromLocal(timezoneIndicator));  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(Offset.fromLocal(timezoneIndicator));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(Offset.fromLocal(timezoneIndicator));	  pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	76	None	replace
1134	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e!=  null  &&  e.getMessage()  ==  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e!=  null  &&  e.getMessage()  ==  null)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    if(e!=  null  &&  e.getMessage()  ==  null)  {  failure  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	219	None	add
1135	[BUG]  [BUGGY]  (e.getMessage()!=  null))  {  fail  =  e.getMessage();  }  [CE]  not  a  statement  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  (e.getMessage()!=  null))  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	(e.getMessage()!=  null))  {  fail  =  e.getMessage();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  not  a  statement	12	None	replace
1136	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null)  {  fail  =  e;  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
1137	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e;  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    	compilable	  [FE]  JsonSyntaxException  	12	1	replace
1138	[BUG]  [BUGGY]  ||  e  ==  null)  {  fail  =  e.getMessage();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  ==  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  ==  null)  {  fail  =  e.getMessage();  }	  ||    e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1139	[BUG]  [BUGGY]  ||  e  ==  null)  {  fail(e;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  ==  null)  {  fail(e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  ==  null)  {  fail(e;  }	  ||    e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1140	[BUG]  [BUGGY]  ||  e  ==  null)  {  fail  =  e.toString();  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  ==  null)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  ==  null)  {  fail  =  e.toString();  }	  ||    e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1141	[BUG]  [BUGGY]  ||  e  ==  null)  {  fail(e);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  ==  null)  {  fail(e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  ==  null)  {  fail(e);  }	  ||    e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1142	[BUG]  [BUGGY]  if(fail)  {  fail  =  null;  }  [CE]  incompatible  types  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail)  {  fail  =  null;  }	  if(!fail)    {    fail    =    e;    }    	non-compiled	[CE]  incompatible  types	10	None	replace
1143	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e.toString();  }  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  e.toString();  }	  if(e!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	131	None	replace
1144	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    fail    =    e.getMessage();    }    	compilable	  [FE]  NullPointerException  	131	1	replace
1145	[BUG]  [BUGGY]  if(fail!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  NullPointerException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    fail    =    e.getMessage();    }    	compilable	  [FE]  NullPointerException  	131	1	replace
1146	[BUG]  [BUGGY]  escapedExceptionHandler.throwAsIAE( " ");  [CE]  cannot  find  symbol  escapedExceptionHandler  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  escapedExceptionHandler.throwAsIAE( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	escapedExceptionHandler.throwAsIAE( " ");	  aughtExceptionHandler.throwAsIAE(   "   ");    	non-compiled	[CE]  cannot  find  symbol  escapedExceptionHandler	209	None	replace
1147	[BUG]  [BUGGY]  if(hasT)  {  aughtExceptionHandler.throwAsIAE( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  aughtExceptionHandler.throwAsIAE( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  aughtExceptionHandler.throwAsIAE( " ");  }	  aughtExceptionHandler.throwAsIAE(   "   ");    	non-compiled	[CE]  cannot  find  symbol  hasT	209	None	replace
1148	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }  [CE]  cannot  find  symbol  failed  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failed    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  failed	171	None	replace
1149	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }  [CE]  cannot  find  symbol  failed  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failed    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  failed	171	None	replace
1150	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	102	1	add
1151	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	102	1	add
1152	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	102	1	add
1153	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	102	1	add
1154	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	102	None	add
1155	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =	  	non-compiled	[CE]  'catch'  without  'try'	53	None	add
1156	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {	  	non-compiled	[CE]  'catch'  without  'try'	53	None	add
1157	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e	  	non-compiled	[CE]  ';'  expected	53	None	add
1158	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail	  	non-compiled	[CE]  'catch'  without  'try'	53	None	add
1159	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	53	None	add
1160	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e  [BUGGY]  null)  {  e.printStackTrace();  }  [CE]  ')'  expected  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  if(e  [BUGGY]  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  if(e  [BUGGY]  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  ')'  expected	203	None	add
1161	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(timezoneIndicator);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	147	None	replace
1162	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( "TimezoneIndicator.parseOutOfBoundsException ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( "TimezoneIndicator.parseOutOfBoundsException ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  IllegalArgumentException( "TimezoneIndicator.parseOutOfBoundsException ");	  if(e!=    null)    {    fail    =    e;    }    if(e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	52	None	replace
1163	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( "timezoneIndicator  not  null. ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( "timezoneIndicator  not  null. ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  IllegalArgumentException( "timezoneIndicator  not  null. ");	  if(e!=    null)    {    fail    =    e;    }    if(e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	52	None	replace
1164	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e!=  null)  {  failure  =  null;  }  [CE]  cannot  find  symbol  failure  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  null;  }  if(e!=  null)  {  failure  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    null;    }    if(e!=  null)  {  failure  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	35	None	add
1165	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failure    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  failure	27	None	replace
1166	[BUG]  [BUGGY]  pos.setStartIndex(start);  return  calendar.getTime();  [CE]  cannot  find  symbol  start  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(start);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(start);  return  calendar.getTime();	          pos.setStartIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  start	5	None	replace
1167	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	198	None	replace
1168	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "Failed  to  parse  date: "  +  date);  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "Failed  to  parse  date: "  +  date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "Failed  to  parse  date: "  +  date);	  if(e    ==    null)    {    fail    =    e;    }    if(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1169	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&!e.hasChildren())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&!e.hasChildren())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&!e.hasChildren())  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    UnsupportedOperationException)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1170	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	118	1	add
1171	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	118	1	add
1172	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  >=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  >=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  >=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  	118	None	add
1173	[BUG]  [BUGGY]  IllegalArgumentException  tz  =  new  IllegalArgumentException( " ");  Throwable  cause  =  tz.getMessage();  [CE]  incompatible  types  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  tz  =  new  IllegalArgumentException( " ");  Throwable  cause  =  tz.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  tz  =  new  IllegalArgumentException( " ");  Throwable  cause  =  tz.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	190	None	replace
1174	[BUG]  [BUGGY]  IllegalArgumentException  tz  =  new  IllegalArgumentException( " ");  cause  =  tz.getMessage();  [CE]  cannot  find  symbol  cause  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  tz  =  new  IllegalArgumentException( " ");  cause  =  tz.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  tz  =  new  IllegalArgumentException( " ");  cause  =  tz.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getMessage();    	non-compiled	[CE]  cannot  find  symbol  cause	190	None	replace
1175	[BUG]  [BUGGY]  IllegalArgumentException  tz  =  new  IllegalArgumentException( " ");  Throwable  cause  =  ez.getMessage();  [CE]  cannot  find  symbol  ez  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  tz  =  new  IllegalArgumentException( " ");  Throwable  cause  =  ez.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  tz  =  new  IllegalArgumentException( " ");  Throwable  cause  =  ez.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getMessage();    	non-compiled	[CE]  cannot  find  symbol  ez	190	None	replace
1176	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	122	1	add
1177	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	122	1	add
1178	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	122	1	add
1179	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( ",   ");  }	  	compilable	  [FE]  JsonSyntaxException  	122	1	add
1180	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  DateFormatException(e  [CE]  unclosed  string  literal  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  DateFormatException(e  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  DateFormatException(e	  if(e    ==    null)    {    fail    =    e;    }    if(e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
1181	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  getInstance();  [CE]  unclosed  string  literal  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  getInstance();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "msg.datoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatoritadatorita  =  getInstance();	  if(e    ==    null)    {    fail    =    e;    }    if(e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
1182	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'catch'  without  'try'	202	None	replace
1183	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {	  	non-compiled	[CE]  'catch'  without  'try'	79	None	add
1184	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =	  	non-compiled	[CE]  'catch'  without  'try'	79	None	add
1185	[BUG]  [BUGGY]  e.printStackTrace(currToUpdate);  [CE]  cannot  find  symbol  currToUpdate  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(currToUpdate);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(currToUpdate);	  e.printStackTrace(pos);    	non-compiled	[CE]  cannot  find  symbol  currToUpdate	180	None	replace
1186	[BUG]  [BUGGY]  pos.setIndex(outer);  [CE]  cannot  find  symbol  outer  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(outer);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(outer);	  pos.setIndex(e);    	non-compiled	[CE]  cannot  find  symbol  outer	99	None	replace
1187	[BUG]  [BUGGY]  if(e!=  null  &&!e.isEmpty())  {  fail  =  UTC_ID;  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.isEmpty())  {  fail  =  UTC_ID;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&!e.isEmpty())  {  fail  =  UTC_ID;  }	  if(e!=    null    &&!e.isEmpty())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
1188	[BUG]  [BUGGY]  if(e!=  null  &&!e.isEmpty())  {  fail  =  E;  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.isEmpty())  {  fail  =  E;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&!e.isEmpty())  {  fail  =  E;  }	  if(e!=    null    &&!e.isEmpty())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
1189	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  tz);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  tz);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  tz);	  Thread.currentThread().setContextClassLoader(this,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	73	None	replace
1190	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  this);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  this);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  this);	  Thread.currentThread().setContextClassLoader(this,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	73	None	replace
1191	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  e);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  e);	  Thread.currentThread().setContextClassLoader(this,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	73	None	replace
1192	[BUG]  [BUGGY]  pos.setStartIndex(startOffset);  [CE]  cannot  find  symbol  startOffset  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(startOffset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(startOffset);	          pos.setStartIndex(offset);    	non-compiled	[CE]  cannot  find  symbol  startOffset	2	None	replace
1193	[BUG]  [BUGGY]  pos.setStartIndex(endOffset);  [CE]  cannot  find  symbol  endOffset  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(endOffset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(endOffset);	          pos.setStartIndex(offset);    	non-compiled	[CE]  cannot  find  symbol  endOffset	2	None	replace
1194	[BUG]  [BUGGY]  pos.setStartIndex(start);  [CE]  cannot  find  symbol  start  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(start);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(start);	          pos.setStartIndex(offset);    	non-compiled	[CE]  cannot  find  symbol  start	2	None	replace
1195	[BUG]  [BUGGY]  pos.setStartIndex(-1);  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(-1);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(-1);	          pos.setStartIndex(offset);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
1196	[BUG]  [BUGGY]  pos.setStartIndex(timezoneOffset);  [CE]  cannot  find  symbol  timezoneOffset  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(timezoneOffset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(timezoneOffset);	          pos.setStartIndex(offset);    	non-compiled	[CE]  cannot  find  symbol  timezoneOffset	2	None	replace
1197	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  If(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  [CE]  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  If(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    If(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }	  	non-compiled	[CE]  	217	None	add
1198	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e!=  null  &&! "e.getMessage().equals(   "   "))  {  fail  =  e;  }  [CE]  unclosed  string  literal  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals(   "   "))  {  fail  =  e;  }  if(e!=  null  &&! "e.getMessage().equals(   "   "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    if(e!=  null  &&! "e.getMessage().equals(   "   "))  {  fail  =  e;  }	  	non-compiled	[CE]  unclosed  string  literal	217	None	add
1199	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	63	None	replace
1200	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }  [CE]  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }	  	non-compiled	[CE]  	195	None	add
1201	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	195	1	add
1202	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  IndexOutOfBoundsException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	195	1	add
1203	[BUG]  [BUGGY]  ||  e!=  null)  {  fail  =  JsonSyntaxException.create(timezoneIndicator);  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e!=  null)  {  fail  =  JsonSyntaxException.create(timezoneIndicator);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e!=  null)  {  fail  =  JsonSyntaxException.create(timezoneIndicator);  }	  ||    e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1204	[BUG]  [BUGGY]  ||  e!=  null)  {  fail(e;  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e!=  null)  {  fail(e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e!=  null)  {  fail(e;  }	  ||    e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1205	[BUG]  [BUGGY]  ||  e!=  null)  {  fail  =  JsonSyntaxException.create(timezoneIndicator,  pos);  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e!=  null)  {  fail  =  JsonSyntaxException.create(timezoneIndicator,  pos);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e!=  null)  {  fail  =  JsonSyntaxException.create(timezoneIndicator,  pos);  }	  ||    e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1206	[BUG]  [BUGGY]  fail  =  e.toString()  + "n ";  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  e.toString()  + "n ";  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail  =  e.toString()  + "n ";	  fail    =    e.toString();    	non-compiled	[CE]  incompatible  types	134	None	replace
1207	[BUG]  [BUGGY]  fail  =  UTC_ID.toString();  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  UTC_ID.toString();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail  =  UTC_ID.toString();	  fail    =    e.toString();    	non-compiled	[CE]  incompatible  types	134	None	replace
1208	[BUG]  [BUGGY]  fail  =  date.toString();  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  date.toString();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail  =  date.toString();	  fail    =    e.toString();    	non-compiled	[CE]  incompatible  types	134	None	replace
1209	[BUG]  [BUGGY]  Thread  thread  =  Thread.currentThread().getCurrentThread().getContext(new  JsonSyntaxException( " "));  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread  thread  =  Thread.currentThread().getCurrentThread().getContext(new  JsonSyntaxException( " "));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread  thread  =  Thread.currentThread().getCurrentThread().getContext(new  JsonSyntaxException( " "));	  Thread.currentThread().setContext(new    JsonSyntaxException(   "   "));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1210	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( " "),  e);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( " "),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( " "),  e);	  Thread.currentThread().setContext(new    JsonSyntaxException(   "   "));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1211	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( " "),  pos);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( " "),  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( " "),  pos);	  Thread.currentThread().setContext(new    JsonSyntaxException(   "   "));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1212	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( " ",  e));  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( " ",  e));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( " ",  e));	  Thread.currentThread().setContext(new    JsonSyntaxException(   "   "));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1213	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( ", "));  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( ", "));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( ", "));	  Thread.currentThread().setContext(new    JsonSyntaxException(   "   "));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1214	[BUG]  [BUGGY]  pos.setIndex(offsetOutOfBoundsException);  [CE]  cannot  find  symbol  offsetOutOfBoundsException  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(offsetOutOfBoundsException);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(offsetOutOfBoundsException);	  pos.setIndex(indexOutOfBoundsException);    	non-compiled	[CE]  cannot  find  symbol  offsetOutOfBoundsException	145	None	replace
1215	[BUG]  [BUGGY]  pos.setIndex(timezoneOutOfBoundsException);  [CE]  cannot  find  symbol  timezoneOutOfBoundsException  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(timezoneOutOfBoundsException);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(timezoneOutOfBoundsException);	  pos.setIndex(indexOutOfBoundsException);    	non-compiled	[CE]  cannot  find  symbol  timezoneOutOfBoundsException	145	None	replace
1216	[BUG]  [BUGGY]  if(!hasTimeZone)  {  fail  =  null;  }  [CE]  cannot  find  symbol  hasTimeZone  [FE]                              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone)  {  fail  =  null;  }	  if(!hasTimeZone)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	11	None	replace
1217	[BUG]  [BUGGY]  if(!hasDayOfMonth)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasDayOfMonth  [FE]                                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasDayOfMonth)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasDayOfMonth)  {  fail  =  e;  }	  if(!hasTimeZone)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasDayOfMonth	11	None	replace
1218	[BUG]  [BUGGY]  if(!hasTimeZone)  {  fail  =  tz;  }  [CE]  cannot  find  symbol  hasTimeZone  [FE]                                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone)  {  fail  =  tz;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone)  {  fail  =  tz;  }	  if(!hasTimeZone)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	11	None	replace
1219	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    if(e.getMessage()!=  null)  {  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  'catch'  without  'try'	199	None	add
1220	[BUG]  [BUGGY]  Parchet.getInstance(timezoneIndicator).throwException( " ");  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Parchet.getInstance(timezoneIndicator).throwException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Parchet.getInstance(timezoneIndicator).throwException( " ");	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	153	None	replace
1221	[BUG]  [BUGGY]  Negatives.checkState(timezoneIndicator  ==  null);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Negatives.checkState(timezoneIndicator  ==  null);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Negatives.checkState(timezoneIndicator  ==  null);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	153	None	replace
1222	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "TimeZone.parseTimeZone( "+date+ "): "+timezoneIndicator);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "TimeZone.parseTimeZone( "+date+ "): "+timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "TimeZone.parseTimeZone( "+date+ "): "+timezoneIndicator);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
1223	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "TimeZone.parseTimeZone( "+timezoneIndicator+ ") ");  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "TimeZone.parseTimeZone( "+timezoneIndicator+ ") ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "TimeZone.parseTimeZone( "+timezoneIndicator+ ") ");	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
1224	[BUG]  [BUGGY]  Parchet.getInstance(timezoneIndicator).throwInternal();  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Parchet.getInstance(timezoneIndicator).throwInternal();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Parchet.getInstance(timezoneIndicator).throwInternal();	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	153	None	replace
1225	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "TimeZone.parseTimeZone( "+date+ ") ");  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "TimeZone.parseTimeZone( "+date+ ") ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "TimeZone.parseTimeZone( "+date+ ") ");	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
1226	[BUG]  [BUGGY]  pos.setIndex(timezoneIndicator);  return  Calendar.getInstance();  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(timezoneIndicator);  return  Calendar.getInstance();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(timezoneIndicator);  return  Calendar.getInstance();	          pos.setIndex(offset);    return    Calendar.getInstance();    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	3	None	replace
1227	[BUG]  [BUGGY]  pos.setIndex(-1);  return  Calendar.getInstance();  [CE]  incompatible  types  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(-1);  return  Calendar.getInstance();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(-1);  return  Calendar.getInstance();	          pos.setIndex(offset);    return    Calendar.getInstance();    	non-compiled	[CE]  incompatible  types	3	None	replace
1228	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  msg  =  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	IllegalArgumentException  msg  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    new    IllegalArgumentException(   "       ");    	compilable	  [FE]  NullPointerException  	31	1	replace
1229	[BUG]  [BUGGY]  IllegalArgumentException  msg  =  new  IllegalArgumentException( " ");  [FE]  NullPointerException  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  msg  =  new  IllegalArgumentException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  msg  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    new    IllegalArgumentException(   "       ");    	compilable	  [FE]  NullPointerException  	31	1	replace
1230	[BUG]  [BUGGY]  if(!hasT)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasT	69	None	replace
1231	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  NullPointerException  	69	1	replace
1232	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  NullPointerException  	69	1	replace
1233	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  IndexOutOfBoundsException  	69	1	replace
1234	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  IndexOutOfBoundsException  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  IndexOutOfBoundsException  	69	1	replace
1235	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()  ==  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  NullPointerException  	69	1	replace
1236	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  NullPointerException  [FE]                          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  e.printStackTrace();  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	compilable	  [FE]  NullPointerException  	69	1	replace
1237	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [Delete]  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [Delete]  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [Delete]	  if(e!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	133	None	replace
1238	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori()  {	  if(e!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	133	None	replace
1239	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(e)  {  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(e)  {  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger().add(e)  {	  if(e!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	133	None	replace
1240	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(e  =  e  =UneoriUneoriUneoriUneoriUneori  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(e  =  e  =UneoriUneoriUneoriUneoriUneori  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.log(e  =  e  =UneoriUneoriUneoriUneoriUneori	  if(e!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	133	None	replace
1241	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.getDefault();  [CE]  cannot  find  symbol  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.getDefault();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.getDefault();	  if(e!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger	133	None	replace
1242	[BUG]  [BUGGY]  pos.setIndex(date,  index);  [CE]  cannot  find  symbol  index  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(date,  index);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(date,  index);	  pos.setIndex(date);    	non-compiled	[CE]  cannot  find  symbol  index	100	None	replace
1243	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  IndexOutOfBoundsException( " ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  IndexOutOfBoundsException( " ");	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	167	None	replace
1244	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&!e.isEmpty())  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&!e.isEmpty())  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&!e.isEmpty())  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1245	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail!=  null)  {  failure  =  null;  }  [CE]  cannot  find  symbol  failure  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail!=  null)  {  failure  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    null;    }    if(fail!=  null)  {  failure  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	42	None	add
1246	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail  [Delete]  null)  {  fail  =  null;  }  [CE]  ')'  expected  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  null;  }  if(fail  [Delete]  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    null;    }    if(fail  [Delete]  null)  {  fail  =  null;  }	  	non-compiled	[CE]  ')'  expected	42	None	add
1247	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportError(e,  timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().reportError(e,  timezoneIndicator);	  Thread.currentThread().getContextClassLoader().reportError(e);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	188	None	replace
1248	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().throwInternal();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().throwInternal();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().throwInternal();	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
1249	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    calendar.set(Calendar.MILLISECOND,    milliseconds);    }    	non-compiled	[CE]  incompatible  types	16	None	replace
1250	[BUG]  [BUGGY]  if(e.getMessage()!=  null  ||  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [CE]  incompatible  types  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  ||  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  ||  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    calendar.set(Calendar.MILLISECOND,    milliseconds);    }    	non-compiled	[CE]  incompatible  types	16	None	replace
1251	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [CE]  incompatible  types  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    calendar.set(Calendar.MILLISECOND,    milliseconds);    }    	non-compiled	[CE]  incompatible  types	16	None	replace
1252	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
1253	[BUG]  [BUGGY]  if(!hasDays)  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  hasDays  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasDays)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasDays)  {  fail  =  e.getMessage();  }	  if(!hasDays)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasDays	214	None	replace
1254	[BUG]  [BUGGY]  if(!hasDays)  {  fail  =  e.toString();  }  [CE]  cannot  find  symbol  hasDays  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasDays)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasDays)  {  fail  =  e.toString();  }	  if(!hasDays)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasDays	214	None	replace
1255	[BUG]  [BUGGY]  Throwable  tz  =  e.getTargetException();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getTargetException();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e.getTargetException();	  Throwable    tz    =    e.getCause();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
1256	[BUG]  [BUGGY]  Throwable  tz  =  e.getStandardException();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getStandardException();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e.getStandardException();	  Throwable    tz    =    e.getCause();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
1257	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  System.err.println( "Unable  to  parse  date: "+e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	System.err.println( "Unable  to  parse  date: "+e.getMessage());	  e.printStackTrace(System.err);    	compilable	  [FE]  NullPointerException  	117	1	replace
1258	[BUG]  [BUGGY]  System.err.println( "Unable  to  parse  date: "+e.getMessage());  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  System.err.println( "Unable  to  parse  date: "+e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	System.err.println( "Unable  to  parse  date: "+e.getMessage());	  e.printStackTrace(System.err);    	compilable	  [FE]  NullPointerException  	117	1	replace
1259	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  System.err.println( "Unexpected  indexOutOfBoundsException ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	System.err.println( "Unexpected  indexOutOfBoundsException ");	  e.printStackTrace(System.err);    	compilable	  [FE]  NullPointerException  	117	1	replace
1260	[BUG]  [BUGGY]  System.err.println( "Unexpected  indexOutOfBoundsException ");  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  System.err.println( "Unexpected  indexOutOfBoundsException ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	System.err.println( "Unexpected  indexOutOfBoundsException ");	  e.printStackTrace(System.err);    	compilable	  [FE]  NullPointerException  	117	1	replace
1261	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  inconvertible  types  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  inconvertible  types	183	None	replace
1262	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&!e.isEmpty())  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&!e.isEmpty())  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&!e.isEmpty())  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
1263	[BUG]  [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  inconvertible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  NumberFormatException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  inconvertible  types	183	None	replace
1264	[BUG]  [BUGGY]  e  =  tz.getMessage();  [CE]  cannot  find  symbol  tz  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e  =  tz.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e  =  tz.getMessage();	  e    =    e.getMessage();    	non-compiled	[CE]  cannot  find  symbol  tz	215	None	replace
1265	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "The  timezone  is  null. ");  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "The  timezone  is  null. ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "The  timezone  is  null. ");	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
1266	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "TimeZone.parseTimeZone(' "+date+ ") ");  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "TimeZone.parseTimeZone(' "+date+ ") ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "TimeZone.parseTimeZone(' "+date+ ") ");	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
1267	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	62	1	replace
1268	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	62	1	replace
1269	[BUG]  [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  If(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  If(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    If(e!=  null)  {  throw  new  IllegalArgumentException(   "   ");  }	  	non-compiled	[CE]  	207	None	add
1270	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " "));  }	  	non-compiled	[CE]  	66	None	add
1271	[BUG]  [BUGGY]  if(hasNull)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasNull  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasNull)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasNull)  {  fail  =  e;  }	  if(!hasNull)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasNull	8	None	replace
1272	[BUG]  [BUGGY]  if(!hasNull)  {  fail  =  null;  }  [CE]  cannot  find  symbol  hasNull  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasNull)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasNull)  {  fail  =  null;  }	  if(!hasNull)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasNull	8	None	replace
1273	[BUG]  [BUGGY]  if(!hasNull)  {  fail  =  UTC_ID;  }  [CE]  cannot  find  symbol  hasNull  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasNull)  {  fail  =  UTC_ID;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasNull)  {  fail  =  UTC_ID;  }	  if(!hasNull)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasNull	8	None	replace
1274	[BUG]  [BUGGY]  if(failed!=  null)  {  fail  =  null;  }  [CE]  cannot  find  symbol  failed  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(failed!=  null)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(failed!=  null)  {  fail  =  null;  }	  if(fail!=    null)    {    fail    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  failed	43	None	replace
1275	[BUG]  [BUGGY]  ServiceUtil.throwIndexOutOfBoundsException(e);  [CE]  cannot  find  symbol  ServiceUtil  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ServiceUtil.throwIndexOutOfBoundsException(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ServiceUtil.throwIndexOutOfBoundsException(e);	  StaxUtil.throwIndexOutOfBoundsException(e);    	non-compiled	[CE]  cannot  find  symbol  ServiceUtil	127	None	replace
1276	[BUG]  [BUGGY]  PsiUtil.throwIndexOutOfBoundsException(e);  [CE]  cannot  find  symbol  PsiUtil  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  PsiUtil.throwIndexOutOfBoundsException(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	PsiUtil.throwIndexOutOfBoundsException(e);	  StaxUtil.throwIndexOutOfBoundsException(e);    	non-compiled	[CE]  cannot  find  symbol  PsiUtil	127	None	replace
1277	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail  ==  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  fail    =    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
1278	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  fail    =    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
1279	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException( " "  +  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	fail  =  new  IndexOutOfBoundsException( " "  +  e);	  fail    =    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
1280	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException( " "  +  e);  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException( " "  +  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail  =  new  IndexOutOfBoundsException( " "  +  e);	  fail    =    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  JsonSyntaxException  	169	1	replace
1281	[BUG]  [BUGGY]  aught(IndexOutOfBoundsException.class,  e);  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(IndexOutOfBoundsException.class,  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(IndexOutOfBoundsException.class,  e);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  cannot  find  symbol	186	None	replace
1282	[BUG]  [BUGGY]  aught(IndexOutOfBoundsException.class)  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(IndexOutOfBoundsException.class)  {  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(IndexOutOfBoundsException.class)  {	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  ';'  expected	186	None	replace
1283	[BUG]  [BUGGY]  aught(IndexOutOfBoundsException.class),  e);  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(IndexOutOfBoundsException.class),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(IndexOutOfBoundsException.class),  e);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  ';'  expected	186	None	replace
1284	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  pos.setIndex( "   ");  [CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  NullPointerException(   "   ");  pos.setIndex( "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    NullPointerException(   "   ");    pos.setIndex( "   ");	  	non-compiled	[CE]  method  setIndex  in  class  ParsePosition  cannot  be  applied  to  given  types;	165	None	add
1285	[BUG]  [BUGGY]  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(timezoneIndicator);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(timezoneIndicator);  return  calendar.getTime();	          pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	1	None	replace
1286	[BUG]  [BUGGY]  While(e!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  While(e!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	While(e!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	208	None	replace
1287	[BUG]  [BUGGY]  While(e!=  null  &&  e.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  While(e!=  null  &&  e.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	While(e!=  null  &&  e.getMessage()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	208	None	replace
1288	[BUG]  [BUGGY]  While(e!=  null  &&  e.getMessage()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]        IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  While(e!=  null  &&  e.getMessage()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	While(e!=  null  &&  e.getMessage()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	208	None	replace
1289	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(TimeZone.getDefault());  [CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(TimeZone.getDefault());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(TimeZone.getDefault());	  Thread.currentThread().getContextClassLoader();    	non-compiled	[CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;	98	None	replace
1290	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(true);  [CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(true);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(true);	  Thread.currentThread().getContextClassLoader();    	non-compiled	[CE]  method  setContextClassLoader  in  class  Thread  cannot  be  applied  to  given  types;	98	None	replace
1291	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  JsonSyntaxException.class);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  JsonSyntaxException.class);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(new  JsonSyntaxException.class);	  Thread.currentThread().getContextClassLoader();    	non-compiled	[CE]  <identifier>  expected	98	None	replace
1292	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  JsonSyntaxException.ClassLoader());  [CE]  package  JsonSyntaxException  does  not  exist  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  JsonSyntaxException.ClassLoader());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(new  JsonSyntaxException.ClassLoader());	  Thread.currentThread().getContextClassLoader();    	non-compiled	[CE]  package  JsonSyntaxException  does  not  exist	98	None	replace
1293	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " "));  }	  	non-compiled	[CE]  	197	None	add
1294	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(context);  [CE]  cannot  find  symbol  context  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(context);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(context);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  cannot  find  symbol  context	40	None	replace
1295	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
1296	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
1297	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(  [CE]  ')'  expected  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(	  	non-compiled	[CE]  ')'  expected	20	None	add
1298	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
1299	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(   "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	20	1	add
1300	[BUG]  [BUGGY]  pos.setIndex(outOfFile);  [CE]  cannot  find  symbol  outOfFile  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(outOfFile);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(outOfFile);	  pos.setIndex(outset);    	non-compiled	[CE]  cannot  find  symbol  outOfFile	163	None	replace
1301	[BUG]  [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(TimeZone.getDefault());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointer  e  =  new  UnsupportedOperation(TimeZone.getDefault());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointer  e  =  new  UnsupportedOperation(TimeZone.getDefault());	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    >=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
1302	[BUG]  [BUGGY]  NullPointer  e  =(NumberPointer)null;  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointer  e  =(NumberPointer)null;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointer  e  =(NumberPointer)null;	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    >=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
1303	[BUG]  [BUGGY]  pos.setIndex(offsetOutOfBounds);  [CE]  cannot  find  symbol  offsetOutOfBounds  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(offsetOutOfBounds);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(offsetOutOfBounds);	  pos.setIndex(indexOutOfBounds);    	non-compiled	[CE]  cannot  find  symbol  offsetOutOfBounds	179	None	replace
1304	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( ". ");  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	14	None	replace
1305	[BUG]  [BUGGY]  aught(Exception.class,  e,  calendar.getMessage(),  e);  [CE]  cannot  find  symbol  calendar  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(Exception.class,  e,  calendar.getMessage(),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(Exception.class,  e,  calendar.getMessage(),  e);	  aught(Exception.class,    e.getMessage(),    e);    	non-compiled	[CE]  cannot  find  symbol  calendar	210	None	replace
1306	[BUG]  [BUGGY]  aught(Exception.class,  e.getMessage(),  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(Exception.class,  e.getMessage(),  timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(Exception.class,  e.getMessage(),  timezoneIndicator);	  aught(Exception.class,    e.getMessage(),    e);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	210	None	replace
1307	[BUG]  [BUGGY]  aught(Exception.class,  e,  date.getMessage(),  e);  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(Exception.class,  e,  date.getMessage(),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(Exception.class,  e,  date.getMessage(),  e);	  aught(Exception.class,    e.getMessage(),    e);    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
1308	[BUG]  [BUGGY]  Catch(Exception.class,  e.getMessage(),  e);  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Catch(Exception.class,  e.getMessage(),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Catch(Exception.class,  e.getMessage(),  e);	  aught(Exception.class,    e.getMessage(),    e);    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
1309	[BUG]  [BUGGY]  assist(Exception.class,  e.getMessage(),  e);  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  assist(Exception.class,  e.getMessage(),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	assist(Exception.class,  e.getMessage(),  e);	  aught(Exception.class,    e.getMessage(),    e);    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
1310	[BUG]  [BUGGY]  pos.setIndex(timezone);  [CE]  cannot  find  symbol  timezone  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(timezone);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(timezone);	  pos.setIndex(timezoneIndicator);    	non-compiled	[CE]  cannot  find  symbol  timezone	74	None	replace
1311	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null)  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    System.err.println(   "Unexpected    error:   "    +    e.getMessage());    }    	compilable	  [FE]  NullPointerException  	15	1	replace
1312	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [FE]  NullPointerException  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    System.err.println(   "Unexpected    error:   "    +    e.getMessage());    }    	compilable	  [FE]  NullPointerException  	15	1	replace
1313	[BUG]  [BUGGY]  if(hasT)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [CE]  cannot  find  symbol  hasT  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  aughtExceptionHandler.throwAsUnquotedException( " ");  }	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  hasT	177	None	replace
1314	[BUG]  [BUGGY]  IllegalArgumentException  e  =  JsonNull.createJsonNull();  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  JsonNull.createJsonNull();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  JsonNull.createJsonNull();	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
1315	[BUG]  [BUGGY]  IllegalArgumentException  e  =  NUMBER_EXPR_RESULT;  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  NUMBER_EXPR_RESULT;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  NUMBER_EXPR_RESULT;	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
1316	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  TimeZone(timezoneIndicator);  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  TimeZone(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  TimeZone(timezoneIndicator);	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
1317	[BUG]  [BUGGY]  IllegalArgumentException  e  =  NUMBER_OF_BOCUS;  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  NUMBER_OF_BOCUS;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  NUMBER_OF_BOCUS;	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
1318	[BUG]  [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  DateTimeUtils.getTimeInstantiator(timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  DateTimeUtils.getTimeInstantiator(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    e.printStackTrace(System.err);  this.timezoneIndicator  =  DateTimeUtils.getTimeInstantiator(timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	116	None	add
1319	[BUG]  [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    e.printStackTrace(System.err);  this.timezoneIndicator  =  DateTimeUtils.currentTimeMillis();	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	116	None	add
1320	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  System.err.println( "Unable  to  parse  date: "  +  e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace(System.err);    e.printStackTrace(System.err);  System.err.println( "Unable  to  parse  date: "  +  e.getMessage());	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1321	[BUG]  [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  System.err.println( "Unable  to  parse  date: "  +  e.getMessage());  [FE]  JsonSyntaxException  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  System.err.println( "Unable  to  parse  date: "  +  e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    e.printStackTrace(System.err);  System.err.println( "Unable  to  parse  date: "  +  e.getMessage());	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1322	[BUG]  [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err).printStackTrace(System.err);  [CE]  void  cannot  be  dereferenced  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err).printStackTrace(System.err);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    e.printStackTrace(System.err).printStackTrace(System.err);	  	non-compiled	[CE]  void  cannot  be  dereferenced	116	None	add
1323	[BUG]  [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  TimeZone.getDefault();  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  e.printStackTrace(System.err);  this.timezoneIndicator  =  TimeZone.getDefault();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    e.printStackTrace(System.err);  this.timezoneIndicator  =  TimeZone.getDefault();	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	116	None	add
1324	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  pos.setTimeZone(timezoneIndicator);  Thread.currentThread().interrupt();  [CE]  cannot  find  symbol  timezoneIndicator  [FE]        [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  pos.setTimeZone(timezoneIndicator);  Thread.currentThread().interrupt();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    pos.setTimeZone(timezoneIndicator);  Thread.currentThread().interrupt();	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	44	None	add
1325	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [CE]  cannot  find  symbol  [FE]          [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    JsonSyntaxException  e  =  new  JsonSyntaxException( " ");	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
1326	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  pos.setTime(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]            [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  pos.setTime(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();  pos.setTime(timezoneIndicator);	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	44	None	add
1327	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  pos.setTimeZone(timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  pos.setTimeZone(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    pos.setTimeZone(timezoneIndicator);	  	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	44	None	add
1328	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  [CE]  cannot  find  symbol  [FE]                [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    JsonSyntaxException  ex  =  new  JsonSyntaxException( " ");	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
1329	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  fail  =  e;  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(timezoneIndicator  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(timezoneIndicator  ==  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    if(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	54	None	replace
1330	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  If(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  [CE]  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  If(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    fail    =    new    NullPointerException(   "   ");    }    If(e!=  null)  {  fail  =  new  NullPointerException(   "   ");  }	  	non-compiled	[CE]  	158	None	add
1331	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  IllegalArgumentException  	104	1	add
1332	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  IllegalArgumentException  	104	1	add
1333	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	104	None	add
1334	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1335	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1336	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1337	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1338	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+fail.getClass().getName());  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+fail.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+fail.getClass().getName());	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
1339	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+e.getClass().getName());  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+e.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+e.getClass().getName());	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
1340	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+fail.getClass().getName()  + ", ");  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+fail.getClass().getName()  + ", ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+fail.getClass().getName()  + ", ");	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
1341	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+fail.getClass().getName()  + "n ");  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+fail.getClass().getName()  + "n ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+fail.getClass().getName()  + "n ");	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
1342	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+e.getClass().getName()  + ", ");  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+e.getClass().getName()  + ", ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+e.getClass().getName()  + ", ");	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
1343	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+e.getMessage());  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  e.getCause();  System.err.println( "Unable  to  parse  date: "+e.getMessage());	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
1344	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  fail.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	throw  new  IllegalArgumentException( " "  +  fail.getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	compilable	  [FE]  NullPointerException  	115	1	replace
1345	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  fail.getMessage());  [FE]  NullPointerException  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  fail.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " "  +  fail.getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	compilable	  [FE]  NullPointerException  	115	1	replace
1346	[BUG]  [BUGGY]  if(fail  ==  null  ||!fail.isEmpty())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null  ||!fail.isEmpty())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null  ||!fail.isEmpty())  {  fail  =  e;  }	  if(fail    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1347	[BUG]  [BUGGY]  if(fail  ==  null  ||!fail.hasMessage())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null  ||!fail.hasMessage())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null  ||!fail.hasMessage())  {  fail  =  e;  }	  if(fail    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1348	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null  ||!fail.equals( " "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail  ==  null  ||!fail.equals( " "))  {  fail  =  e;  }	  if(fail    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	155	1	replace
1349	[BUG]  [BUGGY]  if(fail  ==  null  ||!fail.equals( " "))  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null  ||!fail.equals( " "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null  ||!fail.equals( " "))  {  fail  =  e;  }	  if(fail    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	155	1	replace
1350	[BUG]  [BUGGY]  if(failed)  {  fail  =  e;  }  [CE]  cannot  find  symbol  failed  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(failed)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(failed)  {  fail  =  e;  }	  if(fail    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  failed	155	None	replace
1351	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Throwable  msg  =  new  IndexOutOfBoundsException( " ");	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  NullPointerException  	94	1	replace
1352	[BUG]  [BUGGY]  Throwable  msg  =  new  IndexOutOfBoundsException( " ");  [FE]  NullPointerException  [FE]    IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  new  IndexOutOfBoundsException( " ");	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  NullPointerException  	94	1	replace
1353	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  cause  =  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Throwable  cause  =  new  IndexOutOfBoundsException( " ");	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  NullPointerException  	94	1	replace
1354	[BUG]  [BUGGY]  Throwable  cause  =  new  IndexOutOfBoundsException( " ");  [FE]  NullPointerException  [FE]      IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  cause  =  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  cause  =  new  IndexOutOfBoundsException( " ");	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  NullPointerException  	94	1	replace
1355	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException( " "  +  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	throw  new  IndexOutOfBoundsException( " "  +  e);	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  IndexOutOfBoundsException  	94	1	replace
1356	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( " "  +  e);  [FE]  IndexOutOfBoundsException  [FE]        IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException( " "  +  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IndexOutOfBoundsException( " "  +  e);	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  IndexOutOfBoundsException  	94	1	replace
1357	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	new  IndexOutOfBoundsException( " ");	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  NullPointerException  	94	1	replace
1358	[BUG]  [BUGGY]  new  IndexOutOfBoundsException( " ");  [FE]  NullPointerException  [FE]          IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	new  IndexOutOfBoundsException( " ");	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  NullPointerException  	94	1	replace
1359	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  JsonSyntaxException  e  =  new  IndexOutOfBoundsException(   "   ");  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  JsonSyntaxException  e  =  new  IndexOutOfBoundsException(   "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail    =    new    IndexOutOfBoundsException(   "   ");    JsonSyntaxException  e  =  new  IndexOutOfBoundsException(   "   ");	  	non-compiled	[CE]  cannot  find  symbol	168	None	add
1360	[BUG]  [BUGGY]  if(hasT)  {  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  'catch'  without  'try'	103	None	replace
1361	[BUG]  [BUGGY]  if(hasT)  {  if(e!=  null)  {  fail  =  e;  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasT)  {  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasT)  {  if(e!=  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  'catch'  without  'try'	103	None	replace
1362	[BUG]  [BUGGY]  DescimalParser  parser  =  new  DescimalParser(timezoneIndicator,  pos);  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  DescimalParser  parser  =  new  DescimalParser(timezoneIndicator,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	DescimalParser  parser  =  new  DescimalParser(timezoneIndicator,  pos);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1363	[BUG]  [BUGGY]  DescimalParser  parser  =  new  DescimalParser(date,  timezoneIndicator);  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  DescimalParser  parser  =  new  DescimalParser(date,  timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	DescimalParser  parser  =  new  DescimalParser(date,  timezoneIndicator);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1364	[BUG]  [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)t).getMessage()  : " ";  [CE]  cannot  find  symbol  t  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)t).getMessage()  : " ";  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)t).getMessage()  : " ";	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  t	185	None	replace
1365	[BUG]  [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)t).getMessage()  :  null;  [CE]  cannot  find  symbol  t  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)t).getMessage()  :  null;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)t).getMessage()  :  null;	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  t	185	None	replace
1366	[BUG]  [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)tc).getMessage()  : " ";  [CE]  cannot  find  symbol  tc  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)tc).getMessage()  : " ";  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)tc).getMessage()  : " ";	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  tc	185	None	replace
1367	[BUG]  [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException?  new  IndexOutOfBoundsException( " ");  [CE]  :  expected  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException?  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  e  instanceof  IndexOutOfBoundsException?  new  IndexOutOfBoundsException( " ");	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  :  expected	185	None	replace
1368	[BUG]  [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)e).getMessage()  :  null;  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)e).getMessage()  :  null;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)e).getMessage()  :  null;	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	185	None	replace
1369	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  when(fail  ==  null)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  when(fail  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail    ==    null)    {    fail    =    e;    }    when(fail  ==  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ';'  expected	154	None	add
1370	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	13	None	replace
1371	[BUG]  [BUGGY]  if(e.getMessage()!=  null  ||  e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  ||  e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  ||  e.getMessage()  ==  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	13	None	replace
1372	[BUG]  [BUGGY]  Iterator  <  NumberFormatException>  e  =  calendar.get(Calendar.MILLISECOND);  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Iterator  <  NumberFormatException>  e  =  calendar.get(Calendar.MILLISECOND);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Iterator  <  NumberFormatException>  e  =  calendar.get(Calendar.MILLISECOND);	  if(e    ==    null)    {    fail    =    e;    }    If(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
1373	[BUG]  [BUGGY]  Iterator  <  NumberFormatException>  e  =  calendar.get(Calendar.HOUR_OF_DAY);  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Iterator  <  NumberFormatException>  e  =  calendar.get(Calendar.HOUR_OF_DAY);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Iterator  <  NumberFormatException>  e  =  calendar.get(Calendar.HOUR_OF_DAY);	  if(e    ==    null)    {    fail    =    e;    }    If(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
1374	[BUG]  [BUGGY]  Iterator  <  NumberFormatException>  e  =  calendar.get(Calendar.DATE);  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Iterator  <  NumberFormatException>  e  =  calendar.get(Calendar.DATE);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Iterator  <  NumberFormatException>  e  =  calendar.get(Calendar.DATE);	  if(e    ==    null)    {    fail    =    e;    }    If(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	84	None	replace
1375	[BUG]  [BUGGY]  pos.setIndex(Offset.parseInt(date));  [CE]  cannot  find  symbol  Offset  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(Offset.parseInt(date));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(Offset.parseInt(date));	  pos.setIndex(input);    	non-compiled	[CE]  cannot  find  symbol  Offset	75	None	replace
1376	[BUG]  [BUGGY]  aught(e,  pos)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  pos)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  pos)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
1377	[BUG]  [BUGGY]  aught(e,  pos.getLineno())  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  pos.getLineno())  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  pos.getLineno())  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
1378	[BUG]  [BUGGY]  aught(e,  pos.getLineno(),  pos.getColumnOfSecond())  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  pos.getLineno(),  pos.getColumnOfSecond())  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  pos.getLineno(),  pos.getColumnOfSecond())  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
1379	[BUG]  [BUGGY]  aught(e,  pos.getLineno(),  pos.getLineno())  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  pos.getLineno(),  pos.getLineno())  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  pos.getLineno(),  pos.getLineno())  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
1380	[BUG]  [BUGGY]  aught(e,  pos.getLineno(),  pos.getColumnNo())  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  pos.getLineno(),  pos.getColumnNo())  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  pos.getLineno(),  pos.getColumnNo())  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
1381	[BUG]  [BUGGY]  aught(e,  pos)  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  pos)  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  pos)  {  throw  new  IndexOutOfBoundsException( " ".getMessage());  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ".getMessage());    }    	non-compiled	[CE]  	150	None	replace
1382	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse: "  +  date));  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse: "  +  date));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse: "  +  date));	  Thread.currentThread().setContext(new    JsonSyntaxException(   "   "));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1383	[BUG]  [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse  date ",  pos));  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse  date ",  pos));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContext(new  JsonSyntaxException( "Failed  to  parse  date ",  pos));	  Thread.currentThread().setContext(new    JsonSyntaxException(   "   "));    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
1384	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+fail.getClass().getName());  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+fail.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Can  not  parse  date: "+fail.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Can    not    parse    date:   "+date.getClass().getName());    	non-compiled	[CE]  cannot  find  symbol	205	None	replace
1385	[BUG]  [BUGGY]  if(fail  >  0)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]                            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  >  0)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  >  0)  {  fail  =  e;  }	  if(!fail)    {    fail    =    e;    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	10	None	replace
1386	[BUG]  [BUGGY]  Thread.currentThread().intermediateThread().getContextClassLoader();  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().intermediateThread().getContextClassLoader();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().intermediateThread().getContextClassLoader();	  Thread.currentThread().getContextClassLoader();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1387	[BUG]  [BUGGY]  Thread.currentThread().intermediateClassLoader();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().intermediateClassLoader();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().intermediateClassLoader();	  Thread.currentThread().getContextClassLoader();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1388	[BUG]  [BUGGY]  Element  e  =  e.getMessage();  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Element  e  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Element  e  =  e.getMessage();	  e    =    e.getMessage();    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
1389	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getClass()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null  &&  e.getClass()!=  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	220	1	replace
1390	[BUG]  [BUGGY]  if(e!=  null  &&  e.getClass()!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getClass()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&  e.getClass()!=  null)  {  fail  =  e;  }	  if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	220	1	replace
1391	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  throw  new  IllegalArgumentException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	29	1	replace
1392	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  if(e  instanceof  IndexOutOfBoundsException)  {  throw  new  IllegalArgumentException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	29	1	replace
1393	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	122	1	add
1394	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	122	1	add
1395	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	175	1	add
1396	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".   ");  }	  	compilable	  [FE]  IndexOutOfBoundsException  	175	1	add
1397	[BUG]  [BUGGY]  pos.setIndex(Offset.parseBoolean(timezoneIndicator));  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(Offset.parseBoolean(timezoneIndicator));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(Offset.parseBoolean(timezoneIndicator));	  pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	76	None	replace
1398	[BUG]  [BUGGY]  pos.setIndex(Offset.parseBoolean(false));  [CE]  cannot  find  symbol  Offset  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(Offset.parseBoolean(false));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(Offset.parseBoolean(false));	  pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  Offset	76	None	replace
1399	[BUG]  [BUGGY]  pos.setIndex(Offset.MIN_VALUE);  [CE]  cannot  find  symbol  Offset  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(Offset.MIN_VALUE);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(Offset.MIN_VALUE);	  pos.setIndex(index);    	non-compiled	[CE]  cannot  find  symbol  Offset	76	None	replace
1400	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =;  }  if(e  ==  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =;  }  if(e  ==  null)  {  fail  =  e;  }	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
1401	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
1402	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
1403	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  else  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  else  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
1404	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  else  if(e  ==  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  else  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  else  if(e  ==  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	79	1	add
1405	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	79	None	add
1406	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  failed  =  e;  }  [CE]  cannot  find  symbol  failed  [FE]            JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  failed  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  ==  null)  {  failed  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failed	79	None	add
1407	[BUG]  [BUGGY]  if(!reflection)  {  fail  =  e.toString();  }  [CE]  cannot  find  symbol  reflection  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!reflection)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!reflection)  {  fail  =  e.toString();  }	  if(!hasT)    {    fail    =    e.toString();    }    	non-compiled	[CE]  cannot  find  symbol  reflection	129	None	replace
1408	[BUG]  [BUGGY]  ||  e!=  null)  {  fail(e);  }  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e!=  null)  {  fail(e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e!=  null)  {  fail(e);  }	  ||    e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1409	[BUG]  [BUGGY]  ||  e  >=  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  >=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  >=  null)  {  fail  =  e;  }	  ||    e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1410	[BUG]  [BUGGY]  |  e!=  null)  {  fail  =  e;  }  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  |  e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	|  e!=  null)  {  fail  =  e;  }	  ||    e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1411	[BUG]  [BUGGY]  if(hasTimeZone)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasTimeZone  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasTimeZone)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasTimeZone)  {  fail  =  e;  }	  if(hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimeZone	130	None	replace
1412	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    	compilable	  [FE]  JsonSyntaxException  	23	1	replace
1413	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ", ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    	compilable	  [FE]  JsonSyntaxException  	23	1	replace
1414	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",   ");  }  [CE]  unclosed  string  literal  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",   ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    	non-compiled	[CE]  unclosed  string  literal	23	None	replace
1415	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  null);  }  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,<null>)  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  null);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  null);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ",       ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,<null>)	23	None	replace
1416	[BUG]  [BUGGY]  if(e.printStackTrace())  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  incompatible  types  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.printStackTrace())  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.printStackTrace())  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	69	None	replace
1417	[BUG]  [BUGGY]  if(e.getMessage())  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  incompatible  types  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage())  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage())  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	69	None	replace
1418	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	195	1	add
1419	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	195	1	add
1420	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ".);  }  [CE]  <identifier>  expected  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ".);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	195	None	add
1421	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(timezoneIndicator  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(timezoneIndicator  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	105	None	replace
1422	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  timezoneIndicator  [FE]      IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(timezoneIndicator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(timezoneIndicator  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	105	None	replace
1423	[BUG]  [BUGGY]  NullPointerException  e  =  calendar.getMessage();  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointerException  e  =  calendar.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointerException  e  =  calendar.getMessage();	  NullPointerException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	164	None	replace
1424	[BUG]  [BUGGY]  NullPointerException  e  =  new  IllegalArgumentException( "Time  zone  is  already  defined  with  UTC_ID. ");  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  NullPointerException  e  =  new  IllegalArgumentException( "Time  zone  is  already  defined  with  UTC_ID. ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	NullPointerException  e  =  new  IllegalArgumentException( "Time  zone  is  already  defined  with  UTC_ID. ");	  NullPointerException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	164	None	replace
1425	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    if(e!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	203	1	add
1426	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    if(e!=  null)  {  e.printStackTrace();  }	  	compilable	  [FE]  JsonSyntaxException  	203	1	add
1427	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  if(e!=  null)  {  e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    if(e!=  null)  {  e.printStackTrace();  if(e  ==  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  'catch'  without  'try'	203	None	add
1428	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(timezoneIndicator  ==  null)  {  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(timezoneIndicator  ==  null)  {  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  'catch'  without  'try'	103	None	replace
1429	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  if(e!=  null)  {  fail  =  e;  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(timezoneIndicator  ==  null)  {  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(timezoneIndicator  ==  null)  {  if(e!=  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  'catch'  without  'try'	103	None	replace
1430	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  if(fail!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(timezoneIndicator  ==  null)  {  if(fail!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(timezoneIndicator  ==  null)  {  if(fail!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  'catch'  without  'try'	103	None	replace
1431	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  if(fail!=  null)  {  fail  =  e;  }  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(timezoneIndicator  ==  null)  {  if(fail!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(timezoneIndicator  ==  null)  {  if(fail!=  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  'catch'  without  'try'	103	None	replace
1432	[BUG]  [BUGGY]  if(!hadT)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hadT  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hadT)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hadT)  {  fail  =  e;  }	  if(!hasMillis)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hadT	6	None	replace
1433	[BUG]  [BUGGY]  Thread.currentThread(),  e.getContextClassLoader().reportError(e);  [CE]  ';'  expected  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread(),  e.getContextClassLoader().reportError(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread(),  e.getContextClassLoader().reportError(e);	  Thread.currentThread().getContextClassLoader().reportError(e);    	non-compiled	[CE]  ';'  expected	188	None	replace
1434	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	173	1	add
1435	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  IllegalArgumentException  	173	1	add
1436	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(getMessage());  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " ").printStackTrace(getMessage());	  throw    new    IllegalArgumentException(   "   ".equals(getMessage()));    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1437	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  getMessage());  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  getMessage());	  throw    new    IllegalArgumentException(   "   ".equals(getMessage()));    	non-compiled	[CE]  <identifier>  expected	224	None	replace
1438	[BUG]  [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  fail  =  e.getMessage();  }  else  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [CE]  incompatible  types  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  fail  =  e.getMessage();  }  else  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  fail  =  e.getMessage();  }  else  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    System.err.println(   "Unexpected    error:   "    +    e.getMessage());    }    	non-compiled	[CE]  incompatible  types	15	None	replace
1439	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.toString();  }  else  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    System.err.println(   "Unexpected    error:   "    +    e.getMessage());    }    	non-compiled	[CE]  incompatible  types	15	None	replace
1440	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    System.err.println(   "Unexpected    error:   "    +    e.getMessage());    }    	compilable	  [FE]  NullPointerException  	15	1	replace
1441	[BUG]  [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [FE]  NullPointerException  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  System.err.println( "Unexpected  error: "  +  e.getMessage());  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    System.err.println(   "Unexpected    error:   "    +    e.getMessage());    }    	compilable	  [FE]  NullPointerException  	15	1	replace
1442	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  NUMBER_OF_DAY;  }  [CE]  cannot  find  symbol  NUMBER_OF_DAY  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  NUMBER_OF_DAY;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  NUMBER_OF_DAY;  }	  if(e!=    null)    {    fail    =    e;    }    if(e    >=    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_DAY	55	None	replace
1443	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  JsonSyntaxException.create(date,  pos);  }  [CE]  cannot  find  symbol  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  JsonSyntaxException.create(date,  pos);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  JsonSyntaxException.create(date,  pos);  }	  if(e!=    null)    {    fail    =    e;    }    if(e    >=    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  JsonSyntaxException	55	None	replace
1444	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( " ");  Throwable  ex  =  e.getMessage();  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( " ");  Throwable  ex  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  IllegalArgumentException( " ");  Throwable  ex  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    ex    =    e.getMessage();    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	191	None	replace
1445	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  failure  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  failure  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  failure  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  failure  =  e.getMessage();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  failure	13	None	replace
1446	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
1447	[BUG]  [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	13	1	replace
1448	[BUG]  [BUGGY]  if(!hasTimeZone())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone())  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1449	[BUG]  [BUGGY]  if(!hasDays)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  hasDays  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasDays)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasDays)  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  hasDays	112	None	replace
1450	[BUG]  [BUGGY]  if(!hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasNext())  {  throw  new  IllegalArgumentException( " ");  }	  if(!hasT)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1451	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  for(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  not  a  statement  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  for(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  for(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    for(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  not  a  statement	172	None	replace
1452	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().report(msg);  [CE]  cannot  find  symbol  msg  [FE]    IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().report(msg);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().report(msg);	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  msg	176	None	replace
1453	[BUG]  [BUGGY]  Parchet.getInstance().printStackTrace();  [CE]  cannot  find  symbol  Parchet  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Parchet.getInstance().printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Parchet.getInstance().printStackTrace();	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  Parchet	123	None	replace
1454	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().addToDebugLog( "Index  out  of  range. ");  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().addToDebugLog( "Index  out  of  range. ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().addToDebugLog( "Index  out  of  range. ");	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1455	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().reportAndGet(e);  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().reportAndGet(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().reportAndGet(e);	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
1456	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "timezoneIndicator  not  allowed. ");  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "timezoneIndicator  not  allowed. ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "timezoneIndicator  not  allowed. ");	  if(e    ==    null)    {    fail    =    e;    }    if(e    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
1457	[BUG]  [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	||  e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  e);  }	  ||    e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1458	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }	  if(e!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	131	None	replace
1459	[BUG]  [BUGGY]  if(fail!=  null  &&  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null  &&  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null  &&  e.getMessage()!=  null)  {  fail  =  e.getMessage();  }	  if(e!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	131	None	replace
1460	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  e.toString();  }  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null)  {  fail  =  e.toString();  }	  if(e!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	131	None	replace
1461	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }  [CE]  inconvertible  types  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ", ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  inconvertible  types	149	None	replace
1462	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ", ");  }  [CE]  unclosed  string  literal  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ", ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ", ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  unclosed  string  literal	149	None	replace
1463	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  null);  }  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,<null>)  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  null);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ",  null);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,<null>)	149	None	replace
1464	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "... ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "... ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1465	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "... ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "... ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "... ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1466	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1467	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(     "     ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException(   ".     ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        else        {        throw        new        IllegalArgumentException(       "       ");        }        if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	107	1	add
1468	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  Throwable  msg  =  e.getMessage();  [CE]  incompatible  types  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  NullPointerException(   "   ");  Throwable  msg  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    NullPointerException(   "   ");    Throwable  msg  =  e.getMessage();	  	non-compiled	[CE]  incompatible  types	165	None	add
1469	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  Throwable  msg  =  e.toString();  [CE]  incompatible  types  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  NullPointerException(   "   ");  Throwable  msg  =  e.toString();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    NullPointerException(   "   ");    Throwable  msg  =  e.toString();	  	non-compiled	[CE]  incompatible  types	165	None	add
1470	[BUG]  [BUGGY]  throw  new  NullPointerException(   "   ");  e.printStackTrace();  [CE]  unreachable  statement  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  NullPointerException(   "   ");  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    NullPointerException(   "   ");    e.printStackTrace();	  	non-compiled	[CE]  unreachable  statement	165	None	add
1471	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	throw  new  IllegalArgumentException( " ",  e);	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(       "       ");    	compilable	  [FE]  IllegalArgumentException  	30	1	replace
1472	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ",  e);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " ",  e);	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(       "       ");    	compilable	  [FE]  IllegalArgumentException  	30	1	replace
1473	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,IndexOutOfBoundsException)  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  e);  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    	non-compiled	[CE]  no  suitable  constructor  found  for  IndexOutOfBoundsException(String,IndexOutOfBoundsException)	18	None	replace
1474	[BUG]  [BUGGY]  ((  IndexOutOfBoundsException)e).fail  =  e.getMessage();  [CE]  cannot  find  symbol  fail  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ((  IndexOutOfBoundsException)e).fail  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	((  IndexOutOfBoundsException)e).fail  =  e.getMessage();	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  cannot  find  symbol  fail	192	None	replace
1475	[BUG]  [BUGGY]  ((  IndexOutOfBoundsException)e).fail  =  e.getMessage();  }  [CE]  illegal  start  of  type  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ((  IndexOutOfBoundsException)e).fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	((  IndexOutOfBoundsException)e).fail  =  e.getMessage();  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
1476	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  true);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  true);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(this,  timezoneIndicator,  true);	  Thread.currentThread().setContextClassLoader(this,    timezoneIndicator);    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	73	None	replace
1477	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  pos.setIndex(offset);  [CE]  cannot  find  symbol  offset  [FE]        [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  pos.setIndex(offset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();  pos.setIndex(offset);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  cannot  find  symbol  offset	45	None	replace
1478	[BUG]  [BUGGY]  [FE]    [FE]          [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Thread.currentThread().interrupt();  e.printStackTrace();	  Thread.currentThread().interrupt();    	compilable	  [FE]    	45	1	replace
1479	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  e.printStackTrace();  [FE]    [FE]          [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();  e.printStackTrace();	  Thread.currentThread().interrupt();    	compilable	  [FE]    	45	1	replace
1480	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  pos.setSecondFraction(false);  [CE]  cannot  find  symbol  [FE]            [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  pos.setSecondFraction(false);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();  pos.setSecondFraction(false);	  Thread.currentThread().interrupt();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
1481	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  System.err.println( "Unable  to  parse: "+e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	System.err.println( "Unable  to  parse: "+e.getMessage());	  e.printStackTrace(System.err);    	compilable	  [FE]  NullPointerException  	117	1	replace
1482	[BUG]  [BUGGY]  System.err.println( "Unable  to  parse: "+e.getMessage());  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  System.err.println( "Unable  to  parse: "+e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	System.err.println( "Unable  to  parse: "+e.getMessage());	  e.printStackTrace(System.err);    	compilable	  [FE]  NullPointerException  	117	1	replace
1483	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	201	1	add
1484	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	201	1	add
1485	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  thread.getThreadContext().getContextClassLoader();  [CE]  cannot  find  symbol  thread  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  thread.getThreadContext().getContextClassLoader();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    thread.getThreadContext().getContextClassLoader();	  	non-compiled	[CE]  cannot  find  symbol  thread	97	None	add
1486	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  pos.setStartIndex(offset);  [CE]  cannot  find  symbol  offset  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  pos.setStartIndex(offset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    Thread.currentThread().getContextClassLoader();  pos.setStartIndex(offset);	  	non-compiled	[CE]  cannot  find  symbol  offset	97	None	add
1487	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  pos.setStartIndex(startOffset);  [CE]  cannot  find  symbol  startOffset  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader();  Thread.currentThread().getContextClassLoader();  pos.setStartIndex(startOffset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader();    Thread.currentThread().getContextClassLoader();  pos.setStartIndex(startOffset);	  	non-compiled	[CE]  cannot  find  symbol  startOffset	97	None	add
1488	[BUG]  [BUGGY]  MutableValueUtils.throwIndexOutOfBoundsException( " ");  [CE]  cannot  find  symbol  MutableValueUtils  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableValueUtils.throwIndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableValueUtils.throwIndexOutOfBoundsException( " ");	  StaxUtil.throwIndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  MutableValueUtils	126	None	replace
1489	[BUG]  [BUGGY]  if(e!=  null)  {  fail;  }  [CE]  not  a  statement  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail;  }	  if(e!=    null)    {    fail    =    e;    }    If(e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  not  a  statement	57	None	replace
1490	[BUG]  [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)?((  IndexOutOfBoundsException)tz).getMessage()  : " ";  [CE]  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)?((  IndexOutOfBoundsException)tz).getMessage()  : " ";  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e  instanceof  IndexOutOfBoundsException)?((  IndexOutOfBoundsException)tz).getMessage()  : " ";	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ",    e);    }    	non-compiled	[CE]  	184	None	replace
1491	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().addToDebugLog( "IndexOutOfBoundsException ");  [CE]  cannot  find  symbol  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().addToDebugLog( "IndexOutOfBoundsException ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().addToDebugLog( "IndexOutOfBoundsException ");	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1492	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  e.toString();  }  [CE]  inconvertible  types  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  fail  =  e.toString();  }	  if(e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	193	None	replace
1493	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  JsonStringEncoder.getInstance().encodeAsString( "UTF-8 ");  }  [CE]  inconvertible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  JsonStringEncoder.getInstance().encodeAsString( "UTF-8 ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  fail  =  JsonStringEncoder.getInstance().encodeAsString( "UTF-8 ");  }	  if(e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	193	None	replace
1494	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  new  IllegalStateException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Throwable  tz  =  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  NullPointerException  	114	1	replace
1495	[BUG]  [BUGGY]  Throwable  tz  =  new  IllegalStateException( " ");  [FE]  NullPointerException  [FE]    IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  new  IllegalStateException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	compilable	  [FE]  NullPointerException  	114	1	replace
1496	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(tempLoader);  [CE]  cannot  find  symbol  tempLoader  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(tempLoader);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(tempLoader);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  cannot  find  symbol  tempLoader	40	None	replace
1497	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(r);  [CE]  cannot  find  symbol  r  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(r);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(r);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  cannot  find  symbol  r	40	None	replace
1498	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  NUMBER_OF_DAY;  }  [CE]  cannot  find  symbol  NUMBER_OF_DAY  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  NUMBER_OF_DAY;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  NUMBER_OF_DAY;  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    >=    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  NUMBER_OF_DAY	83	None	replace
1499	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  DateTimeUtils.getInstanceUTC();  }  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  DateTimeUtils.getInstanceUTC();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  DateTimeUtils.getInstanceUTC();  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    >=    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	83	None	replace
1500	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  DateTimeUtils.getInstance();  }  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  DateTimeUtils.getInstance();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  DateTimeUtils.getInstance();  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    >=    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	83	None	replace
1501	[BUG]  [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [CE]  incompatible  types  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    calendar.set(Calendar.MILLISECOND,    milliseconds);    }    	non-compiled	[CE]  incompatible  types	16	None	replace
1502	[BUG]  [BUGGY]  (e.getMessage()!=  null))  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [CE]  not  a  statement  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  (e.getMessage()!=  null))  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	(e.getMessage()!=  null))  {  fail  =  e.getMessage();  }  else  {  calendar.set(Calendar.MILLISECOND,  milliseconds);  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    calendar.set(Calendar.MILLISECOND,    milliseconds);    }    	non-compiled	[CE]  not  a  statement	16	None	replace
1503	[BUG]  [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  e.toString();  }  [CE]  inconvertible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  e.toString();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  NumberFormatException)  {  fail  =  e.toString();  }	  if(e    instanceof    NumberFormatException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	90	None	replace
1504	[BUG]  [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  e.getMessage();  }  [CE]  inconvertible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  NumberFormatException)  {  fail  =  e.getMessage();  }	  if(e    instanceof    NumberFormatException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	90	None	replace
1505	[BUG]  [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  NUMBER_FAILURE;  }  [CE]  inconvertible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  NumberFormatException)  {  fail  =  NUMBER_FAILURE;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  NumberFormatException)  {  fail  =  NUMBER_FAILURE;  }	  if(e    instanceof    NumberFormatException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	90	None	replace
1506	[BUG]  [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)tz).getMessage()  : " ";  [CE]  incompatible  types  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)tz).getMessage()  : " ";  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)tz).getMessage()  : " ";	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	185	None	replace
1507	[BUG]  [BUGGY]  null  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();  [CE]  not  a  statement  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null  e  =  new  JsonSyntaxException( "Invalid  timezone  indicator: "+timezoneIndicator);  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Invalid    timezone    indicator:   "+timezoneIndicator);    e.printStackTrace();    	non-compiled	[CE]  not  a  statement	141	None	replace
1508	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    ==    null)    {    failure    =    e;    }    	compilable	  [FE]  NullPointerException  	162	1	replace
1509	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  new  IllegalArgumentException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    ==    null)    {    failure    =    e;    }    	compilable	  [FE]  NullPointerException  	162	1	replace
1510	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  false;  }  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  false;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  false;  }	  if(e    ==    null)    {    fail    =    e;    }    if(e    ==    null)    {    failure    =    e;    }    	non-compiled	[CE]  incompatible  types	162	None	replace
1511	[BUG]  [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e!=  null  &&  e.getMessage()  {  null)  {  fail  =  e;  }  [CE]  ')'  expected  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  if(e!=  null  &&  e.getMessage()  {  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null    &&    e.getMessage()    ==    null)    {    fail    =    e;    }    if(e!=  null  &&  e.getMessage()  {  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ')'  expected	219	None	add
1512	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  date.getMessage());  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  date.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IllegalArgumentException( " "  +  date.getMessage());	  throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
1513	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  if(fail  ==  null)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	fail    =    new    IndexOutOfBoundsException(   "   ");    if(fail  ==  null)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1514	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  if(fail  ==  null)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  if(fail  ==  null)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail    =    new    IndexOutOfBoundsException(   "   ");    if(fail  ==  null)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1515	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  e  =  new  IndexOutOfBoundsException(   "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	fail    =    new    IndexOutOfBoundsException(   "   ");    e  =  new  IndexOutOfBoundsException(   "   ");	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1516	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  e  =  new  IndexOutOfBoundsException(   "   ");  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  e  =  new  IndexOutOfBoundsException(   "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail    =    new    IndexOutOfBoundsException(   "   ");    e  =  new  IndexOutOfBoundsException(   "   ");	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1517	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  if(fail  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	fail    =    new    IndexOutOfBoundsException(   "   ");    if(fail  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1518	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  if(fail  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException(   "   ");  if(fail  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail    =    new    IndexOutOfBoundsException(   "   ");    if(fail  ==  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	168	1	add
1519	[BUG]  [BUGGY]  Throwable  e  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)e).getMessage()  :  null;  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  e  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)e).getMessage()  :  null;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  e  =  e  instanceof  IndexOutOfBoundsException?((  IndexOutOfBoundsException)e).getMessage()  :  null;	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalStateException)    {    fail    =    e;    }    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	91	None	replace
1520	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(timezoneIndicator  ==  null)  {  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(timezoneIndicator  ==  null)  {  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  'catch'  without  'try'	108	None	replace
1521	[BUG]  [BUGGY]  if(timezoneIndicator  ==  null)  {  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(timezoneIndicator  ==  null)  {  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(timezoneIndicator  ==  null)  {  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   ".       ");    }    	non-compiled	[CE]  'catch'  without  'try'	108	None	replace
1522	[BUG]  [BUGGY]  pos.setIndex(Offset.parseBoolean(fail));  [CE]  cannot  find  symbol  Offset  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(Offset.parseBoolean(fail));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(Offset.parseBoolean(fail));	  pos.setIndex(i);    	non-compiled	[CE]  cannot  find  symbol  Offset	101	None	replace
1523	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ". ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ". ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    	compilable	  [FE]  JsonSyntaxException  	21	1	replace
1524	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ". ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ". ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ". ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    	compilable	  [FE]  JsonSyntaxException  	21	1	replace
1525	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ".getMessage());  }  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ".getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ".getMessage());  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   ".       ");    }    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
1526	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateUtils.getTimeZoneIndicator(timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]        [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateUtils.getTimeZoneIndicator(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateUtils.getTimeZoneIndicator(timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	44	None	add
1527	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateUtils.getTimeZoneIndicator(this.timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateUtils.getTimeZoneIndicator(this.timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateUtils.getTimeZoneIndicator(this.timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	44	None	add
1528	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateTimeUtils.getTimeZoneIndicator(timezoneIndicator);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]            [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateTimeUtils.getTimeZoneIndicator(timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateTimeUtils.getTimeZoneIndicator(timezoneIndicator);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	44	None	add
1529	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateUtils.getTimeZoneIndicator(date);  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]              [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().interrupt();  Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateUtils.getTimeZoneIndicator(date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().interrupt();    Thread.currentThread().interrupt();  this.timezoneIndicator  =  DateUtils.getTimeZoneIndicator(date);	  	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	44	None	add
1530	[BUG]  [BUGGY]  if(!hasT)  {  fail  =  tz;  }  [CE]  cannot  find  symbol  hasT  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasT)  {  fail  =  tz;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasT)  {  fail  =  tz;  }	  if(!hasFail)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasT	9	None	replace
1531	[BUG]  [BUGGY]  aught(new  NullPointerException( " ")));  [CE]  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(new  NullPointerException( " ")));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(new  NullPointerException( " ")));	  if(e!=    null)    {    fail    =    new    NullPointerException(   "   ");    }    	non-compiled	[CE]  	159	None	replace
1532	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  null;  }  [CE]  cannot  find  symbol  failed  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  null;  }  if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    if(e  instanceof  IndexOutOfBoundsException)  {  failed  =  null;  }	  	non-compiled	[CE]  cannot  find  symbol  failed	87	None	add
1533	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e!=  null)  {  throw  new  IllegalStateException( "   ");  }  else  {  throw  new  IllegalStateException( "   ");  }  [CE]  unreachable  statement  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException(   "   ");  }  if(e!=  null)  {  throw  new  IllegalStateException( "   ");  }  else  {  throw  new  IllegalStateException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    if(e!=  null)  {  throw  new  IllegalStateException( "   ");  }  else  {  throw  new  IllegalStateException( "   ");  }	  	non-compiled	[CE]  unreachable  statement	181	None	add
1534	[BUG]  [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  when(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  when(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  when(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    when(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  ';'  expected	28	None	replace
1535	[BUG]  [BUGGY]  ParseException  msg  =  e.getMessage();  [CE]  incompatible  types  [FE]                IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ParseException  msg  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ParseException  msg  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    e.getMessage();    	non-compiled	[CE]  incompatible  types	34	None	replace
1536	[BUG]  [BUGGY]  MutableFormatException  msg  =  e.getMessage();  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  msg  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  msg  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    msg    =    e.getMessage();    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
1537	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1538	[BUG]  [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1539	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1540	[BUG]  [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonSyntaxException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1541	[BUG]  [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  catch  (Exception  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  catch  (Exception  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }  catch  (Exception  e)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  	116	None	add
1542	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1543	[BUG]  [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  [FE]  JsonSyntaxException  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1544	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1545	[BUG]  [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  RuntimeException( " ");  }  [FE]  JsonSyntaxException  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  RuntimeException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1546	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1547	[BUG]  [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  JsonSyntaxException  [FE]              NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  throw  new  IllegalStateException( " ");  }	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1548	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  System.err.println( "Failed  to  parse: "  +  date);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  System.err.println( "Failed  to  parse: "  +  date);  }	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1549	[BUG]  [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  System.err.println( "Failed  to  parse: "  +  date);  }  [FE]  JsonSyntaxException  [FE]                NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(System.err);  if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  System.err.println( "Failed  to  parse: "  +  date);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(System.err);    if(e!=  null)  {  e.printStackTrace(System.err);  }  else  {  System.err.println( "Failed  to  parse: "  +  date);  }	  	compilable	  [FE]  JsonSyntaxException  	116	1	add
1550	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(date);  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(date);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().setCurrentName(date);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    null;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
1551	[BUG]  [BUGGY]  if(failed)  {  fail  =  null;  }  [CE]  cannot  find  symbol  failed  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(failed)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(failed)  {  fail  =  null;  }	  if(e!=    null)    {    fail    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  failed	36	None	replace
1552	[BUG]  [BUGGY]  Tags.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [CE]  cannot  find  symbol  Tags  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Tags.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Tags.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Tags	138	None	replace
1553	[BUG]  [BUGGY]  TagSyntaxException  e  =  new  TagSyntaxException( " ");  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  TagSyntaxException  e  =  new  TagSyntaxException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	TagSyntaxException  e  =  new  TagSyntaxException( " ");	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
1554	[BUG]  [BUGGY]  if(!hasTimezoneOutdicator)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasTimezoneOutdicator  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimezoneOutdicator)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimezoneOutdicator)  {  fail  =  e;  }	  if(!hasTimezoneIndicator)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimezoneOutdicator	213	None	replace
1555	[BUG]  [BUGGY]  if(!hasTimezoneIndicator)  {  fail  =  tz;  }  [CE]  cannot  find  symbol  hasTimezoneIndicator  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimezoneIndicator)  {  fail  =  tz;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimezoneIndicator)  {  fail  =  tz;  }	  if(!hasTimezoneIndicator)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimezoneIndicator	213	None	replace
1556	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".   ");  }  [CE]  unclosed  string  literal  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".   ");  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".   ");    }    	non-compiled	[CE]  unclosed  string  literal	152	None	replace
1557	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ". "));  }  [CE]  unclosed  string  literal  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ". "));  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ". "));  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".   ");    }    	non-compiled	[CE]  unclosed  string  literal	152	None	replace
1558	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  failure  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failure    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  failure	27	None	replace
1559	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  [Delete]  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	[Delete]	  if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	208	None	replace
1560	[BUG]  [BUGGY]  While(e!=  null  &&  e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  While(e!=  null  &&  e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	While(e!=  null  &&  e.getCause()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	208	None	replace
1561	[BUG]  [BUGGY]  While(e!=  null  &&  e.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]        IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  While(e!=  null  &&  e.hasNext())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	While(e!=  null  &&  e.hasNext())  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	208	None	replace
1562	[BUG]  [BUGGY]  While(e!=  null  &&  e.getMessage()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  While(e!=  null  &&  e.getMessage()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	While(e!=  null  &&  e.getMessage()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	208	None	replace
1563	[BUG]  [BUGGY]  While(e!=  null  &&  e.getCause()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  [FE]            IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  While(e!=  null  &&  e.getCause()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	While(e!=  null  &&  e.getCause()!=  null)  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	208	None	replace
1564	[BUG]  [BUGGY]  pos.setIndex(input,  timezoneIndicator);  [CE]  cannot  find  symbol  input  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(input,  timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(input,  timezoneIndicator);	  pos.setIndex(e);    	non-compiled	[CE]  cannot  find  symbol  input	99	None	replace
1565	[BUG]  [BUGGY]  if(e  ==  null  ||!hasT)  {  fail  =  null;  }  [CE]  cannot  find  symbol  hasT  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  ||!hasT)  {  fail  =  null;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  ||!hasT)  {  fail  =  null;  }	  if(e    ==    null)    {    fail    =    null;    }    	non-compiled	[CE]  cannot  find  symbol  hasT	38	None	replace
1566	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIAE( "msg.expected.timezone ",  e);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aughtExceptionHandler.throwAsIAE( "msg.expected.timezone ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aughtExceptionHandler.throwAsIAE( "msg.expected.timezone ",  e);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	47	None	replace
1567	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	53	None	add
1568	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e  >=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	53	None	add
1569	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  failed  =  e;  }  [CE]  cannot  find  symbol  failed  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  failed  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  failed  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failed	53	None	add
1570	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  failure  =  e;  }  if(e  ==  null)  {  fail  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	53	None	add
1571	[BUG]  [BUGGY]  e.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }  [CE]  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();  }  else  {  throw  new  JsonSyntaxException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    JsonSyntaxException(   "   ");    }    	non-compiled	[CE]  	125	None	replace
1572	[BUG]  [BUGGY]  if(e!=  null)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  }  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  }	  if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    JsonSyntaxException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
1573	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".,   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".,   ");  }	  	compilable	  [FE]  JsonSyntaxException  	148	1	add
1574	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".,   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(   ",   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".,   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ",   ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( ".,   ");  }	  	compilable	  [FE]  JsonSyntaxException  	148	1	add
1575	[BUG]  [BUGGY]  pos.setStartIndex(hour);  return  calendar.getTime();  [CE]  cannot  find  symbol  hour  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setStartIndex(hour);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setStartIndex(hour);  return  calendar.getTime();	          pos.setStartIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  hour	5	None	replace
1576	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Throwable  tz  =  new  IndexOutOfBoundsException( " ");	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  NullPointerException  	94	1	replace
1577	[BUG]  [BUGGY]  Throwable  tz  =  new  IndexOutOfBoundsException( " ");  [FE]  NullPointerException  [FE]    IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  new  IndexOutOfBoundsException( " ");	  throw    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  NullPointerException  	94	1	replace
1578	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( " "),  e);  [CE]  [FE]      IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException( " "),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw  new  IndexOutOfBoundsException( " "),  e);	  throw    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  	94	None	replace
1579	[BUG]  [BUGGY]  parseOutOfBoundsException  pos  =  new  ParseOutOfBoundsException( " ");  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parseOutOfBoundsException  pos  =  new  ParseOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parseOutOfBoundsException  pos  =  new  ParseOutOfBoundsException( " ");	  pos.setIndex(indexOutOfBounds);    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
1580	[BUG]  [BUGGY]  parseOutOfBoundsException  pos.setIndex(offset);  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parseOutOfBoundsException  pos.setIndex(offset);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parseOutOfBoundsException  pos.setIndex(offset);	  pos.setIndex(indexOutOfBounds);    	non-compiled	[CE]  ';'  expected	179	None	replace
1581	[BUG]  [BUGGY]  parseOutOfBoundsException  pos  =  new  ParseOutOfBoundsException( " "));  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parseOutOfBoundsException  pos  =  new  ParseOutOfBoundsException( " "));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parseOutOfBoundsException  pos  =  new  ParseOutOfBoundsException( " "));	  pos.setIndex(indexOutOfBounds);    	non-compiled	[CE]  	179	None	replace
1582	[BUG]  [BUGGY]  parseOutOfBoundsException  pos.setIndex(outOfBounds);  [CE]  ';'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parseOutOfBoundsException  pos.setIndex(outOfBounds);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parseOutOfBoundsException  pos.setIndex(outOfBounds);	  pos.setIndex(indexOutOfBounds);    	non-compiled	[CE]  ';'  expected	179	None	replace
1583	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getReturnType());  [CE]  non-static  method  getClass()  cannot  be  referenced  from  a  static  context  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getReturnType());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().setContextClassLoader(getClass().getReturnType());	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    If(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    	non-compiled	[CE]  non-static  method  getClass()  cannot  be  referenced  from  a  static  context	19	None	replace
1584	[BUG]  [BUGGY]  ((  IndexOutOfBoundsException)e).fail  =  e;  [CE]  cannot  find  symbol  fail  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ((  IndexOutOfBoundsException)e).fail  =  e;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	((  IndexOutOfBoundsException)e).fail  =  e;	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    UnsupportedOperationException)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  fail	144	None	replace
1585	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date,  pos.getMessage());  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date,  pos.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date,  pos.getMessage());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getMessage());    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
1586	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.toString());  e.printStackTrace();  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.toString());  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.toString());  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getMessage());    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
1587	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  NumberFormatException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  NumberFormatException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  NumberFormatException)  {  fail  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	25	None	replace
1588	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(new  Date(date,  timezoneIndicator));  [CE]  cannot  find  symbol  timezoneIndicator  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().process(new  Date(date,  timezoneIndicator));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().process(new  Date(date,  timezoneIndicator));	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	186	None	replace
1589	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().process(date,  timezoneIndicator);  [CE]  cannot  find  symbol  timezoneIndicator  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().process(date,  timezoneIndicator);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Thread.currentThread().getContextClassLoader().process(date,  timezoneIndicator);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   "));    }    	non-compiled	[CE]  cannot  find  symbol  timezoneIndicator	186	None	replace
1590	[BUG]  [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  ==  0)  {  fail  =  e.getMessage();  }  else  {  return  calendar.getTime();  }  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  ==  0)  {  fail  =  e.getMessage();  }  else  {  return  calendar.getTime();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  &&  e.getMessage().length()  ==  0)  {  fail  =  e.getMessage();  }  else  {  return  calendar.getTime();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    return    calendar.getTime();    }    	non-compiled	[CE]  incompatible  types	216	None	replace
1591	[BUG]  [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  ==  0)  {  return  calendar.getTime();  }  [CE]  cannot  find  symbol  calendar  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  ==  0)  {  return  calendar.getTime();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  &&  e.getMessage().length()  ==  0)  {  return  calendar.getTime();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    return    calendar.getTime();    }    	non-compiled	[CE]  cannot  find  symbol  calendar	216	None	replace
1592	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e;  }  else  {  return  calendar.getTime();  }  [CE]  cannot  find  symbol  calendar  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e;  }  else  {  return  calendar.getTime();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e;  }  else  {  return  calendar.getTime();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    return    calendar.getTime();    }    	non-compiled	[CE]  cannot  find  symbol  calendar	216	None	replace
1593	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  If(e.getMessage()!=  null)  {  e.printStackTrace();  }  [CE]  ';'  expected  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  e.printStackTrace();  If(e.getMessage()!=  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    e.printStackTrace();  If(e.getMessage()!=  null)  {  e.printStackTrace();  }	  	non-compiled	[CE]  ';'  expected	199	None	add
1594	[BUG]  [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  ==  0)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  ==  0)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  &&  e.getMessage().length()  ==  0)  {  fail  =  e.getMessage();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	12	None	replace
1595	[BUG]  [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  fail  =  e.getMessage();  }  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null  &&  e.getMessage().length()  >  0)  {  fail  =  e.getMessage();  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  incompatible  types	12	None	replace
1596	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()  ==  null)  {  e.printStackTrace();  e.printStackTrace();  }	  e.printStackTrace();    e.printStackTrace();    	compilable	  [FE]  NullPointerException  	61	1	replace
1597	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  e.printStackTrace();  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  e.printStackTrace();  e.printStackTrace();  }	  e.printStackTrace();    e.printStackTrace();    	compilable	  [FE]  NullPointerException  	61	1	replace
1598	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " "));  }	  if(e.getMessage()!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  	14	None	replace
1599	[BUG]  [BUGGY]  Throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throw  new  IllegalStateException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(       "       ");    	non-compiled	[CE]  not  a  statement	189	None	replace
1600	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException(   "   ");  [CE]  not  a  statement  [FE]    IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException(   "   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalStateException(   "   ");    Throw  new  IllegalStateException(   "   ");	  	non-compiled	[CE]  not  a  statement	113	None	add
1601	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  msg  =  e.toString();  [CE]  incompatible  types  [FE]      IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  msg  =  e.toString();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalStateException(   "   ");    Throwable  msg  =  e.toString();	  	non-compiled	[CE]  incompatible  types	113	None	add
1602	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  tz  =  e.getMessage();  [CE]  incompatible  types  [FE]        IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  tz  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalStateException(   "   ");    Throwable  tz  =  e.getMessage();	  	non-compiled	[CE]  incompatible  types	113	None	add
1603	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  cause  =  e.getMessage();  [CE]  incompatible  types  [FE]          IllegalStateException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwable  cause  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IllegalStateException(   "   ");    Throwable  cause  =  e.getMessage();	  	non-compiled	[CE]  incompatible  types	113	None	add
1604	[BUG]  [BUGGY]  if(e.getMessage())  {  e.printStackTrace();  }  [CE]  incompatible  types  [FE]                      NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage())  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage())  {  e.printStackTrace();  }	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    	non-compiled	[CE]  incompatible  types	70	None	replace
1605	[BUG]  [BUGGY]  Error.println( "Unable  to  parse  date: "  +  e.getMessage());  [CE]  cannot  find  symbol  [FE]                        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Error.println( "Unable  to  parse  date: "  +  e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Error.println( "Unable  to  parse  date: "  +  e.getMessage());	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
1606	[BUG]  [BUGGY]  Error.println(e.getMessage());  [CE]  cannot  find  symbol  [FE]                          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Error.println(e.getMessage());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Error.println(e.getMessage());	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
1607	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [CE]  incompatible  types  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  e.getMessage();  }  else  {  throw  new  IndexOutOfBoundsException( " ",  e);  }	  if(e!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	132	None	replace
1608	[BUG]  [BUGGY]  aught(e,  ioConstants.MILLISECOND_ERROR,  e));  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(e,  ioConstants.MILLISECOND_ERROR,  e));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(e,  ioConstants.MILLISECOND_ERROR,  e));	  if(e!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  ';'  expected	132	None	replace
1609	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null  ||  e.getMessage()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail  ==  null  ||  e.getMessage()!=  null)  {  fail  =  e;  }	  if(fail    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	155	1	replace
1610	[BUG]  [BUGGY]  if(fail  ==  null  ||  e.getMessage()!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null  ||  e.getMessage()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null  ||  e.getMessage()!=  null)  {  fail  =  e;  }	  if(fail    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	155	1	replace
1611	[BUG]  [BUGGY]  if(fail  ==  null  ||!fail.hasMore())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null  ||!fail.hasMore())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null  ||!fail.hasMore())  {  fail  =  e;  }	  if(fail    ==    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1612	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null  ||  e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail  ==  null  ||  e!=  null)  {  fail  =  e;  }	  if(fail    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	155	1	replace
1613	[BUG]  [BUGGY]  if(fail  ==  null  ||  e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null  ||  e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail  ==  null  ||  e!=  null)  {  fail  =  e;  }	  if(fail    ==    null)    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	155	1	replace
1614	[BUG]  [BUGGY]  pos.setIndex(parseStartOffset);  return  Calendar.getInstance();  [CE]  cannot  find  symbol  parseStartOffset  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(parseStartOffset);  return  Calendar.getInstance();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(parseStartOffset);  return  Calendar.getInstance();	          pos.setIndex(offset);    return    Calendar.getInstance();    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	3	None	replace
1615	[BUG]  [BUGGY]  IllegalArgumentException  e  =  NON_GLOBAL_ERROR;  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  NON_GLOBAL_ERROR;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  NON_GLOBAL_ERROR;	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
1616	[BUG]  [BUGGY]  IllegalArgumentException  e  =  NON_GLOBAL_EXPECTED_ERROR;  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  NON_GLOBAL_EXPECTED_ERROR;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  NON_GLOBAL_EXPECTED_ERROR;	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
1617	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  UnsupportedOperation();  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  UnsupportedOperation();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  UnsupportedOperation();	  IllegalArgumentException    e    =    null;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	160	None	replace
1618	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&!(e  instanceof  IllegalArgumentException))  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  inconvertible  types  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  &&!(e  instanceof  IllegalArgumentException))  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  &&!(e  instanceof  IllegalArgumentException))  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  inconvertible  types	183	None	replace
1619	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  Class  <?>)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  inconvertible  types  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  Class  <?>)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  Class  <?>)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  if(e    instanceof    IndexOutOfBoundsException    ||    e    instanceof    IllegalArgumentException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  inconvertible  types	183	None	replace
1620	[BUG]  [BUGGY]  if(!hasTimeZone())  {  fail  =  e.timezoneIndicator;  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!hasTimeZone())  {  fail  =  e.timezoneIndicator;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!hasTimeZone())  {  fail  =  e.timezoneIndicator;  }	  if(!hasTimeZone())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1621	[BUG]  [BUGGY]  if(hasTimeZone())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(hasTimeZone())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(hasTimeZone())  {  fail  =  e;  }	  if(!hasTimeZone())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	212	None	replace
1622	[BUG]  [BUGGY]  if(e.getMessage())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [CE]  incompatible  types  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage())  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    	non-compiled	[CE]  incompatible  types	63	None	replace
1623	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	202	1	replace
1624	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	202	1	replace
1625	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()!=  null)  {  throw  new  IllegalStateException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	202	1	replace
1626	[BUG]  [BUGGY]  if(e.getMessage()!=  null)  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalStateException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()!=  null)  {  throw  new  IllegalStateException( " ");  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalStateException  	202	1	replace
1627	[BUG]  [BUGGY]  if(e.getMessage())  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage())  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage())  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	62	None	replace
1628	[BUG]  [BUGGY]  ARRAY.throwAsIAE(e);  [CE]  cannot  find  symbol  ARRAY  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ARRAY.throwAsIAE(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ARRAY.throwAsIAE(e);	  aughtExceptionHandler.throwAsIAE(   "   ");    	non-compiled	[CE]  cannot  find  symbol  ARRAY	209	None	replace
1629	[BUG]  [BUGGY]  escapedExceptionHandler.throwAsIAE(e, " ");  [CE]  cannot  find  symbol  escapedExceptionHandler  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  escapedExceptionHandler.throwAsIAE(e, " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	escapedExceptionHandler.throwAsIAE(e, " ");	  aughtExceptionHandler.throwAsIAE(   "   ");    	non-compiled	[CE]  cannot  find  symbol  escapedExceptionHandler	209	None	replace
1630	[BUG]  [BUGGY]  ARRAY.throwAsIAE( " ");  [CE]  cannot  find  symbol  ARRAY  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ARRAY.throwAsIAE( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ARRAY.throwAsIAE( " ");	  aughtExceptionHandler.throwAsIAE(   "   ");    	non-compiled	[CE]  cannot  find  symbol  ARRAY	209	None	replace
1631	[BUG]  [BUGGY]  escapedExceptionHandler.throwAsIAE(e);  [CE]  cannot  find  symbol  escapedExceptionHandler  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  escapedExceptionHandler.throwAsIAE(e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	escapedExceptionHandler.throwAsIAE(e);	  aughtExceptionHandler.throwAsIAE(   "   ");    	non-compiled	[CE]  cannot  find  symbol  escapedExceptionHandler	209	None	replace
1632	[BUG]  [BUGGY]  ARRAY.throwAsIAE(e, " ");  [CE]  cannot  find  symbol  ARRAY  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ARRAY.throwAsIAE(e, " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	ARRAY.throwAsIAE(e, " ");	  aughtExceptionHandler.throwAsIAE(   "   ");    	non-compiled	[CE]  cannot  find  symbol  ARRAY	209	None	replace
1633	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1634	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	66	1	add
1635	[BUG]  [BUGGY]  pos.setIndex(indexOutOfSecondsException);  [CE]  cannot  find  symbol  indexOutOfSecondsException  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(indexOutOfSecondsException);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(indexOutOfSecondsException);	  pos.setIndex(indexOutOfBoundsException);    	non-compiled	[CE]  cannot  find  symbol  indexOutOfSecondsException	145	None	replace
1636	[BUG]  [BUGGY]  aught(Exception.class,  pos.getMessage(),  e);  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(Exception.class,  pos.getMessage(),  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(Exception.class,  pos.getMessage(),  e);	  aught(Exception.class,    e.getMessage(),    e);    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
1637	[BUG]  [BUGGY]  if(!invalid)  {  fail  =  e.getMessage();  }  [CE]  cannot  find  symbol  invalid  [FE]                    JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(!invalid)  {  fail  =  e.getMessage();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(!invalid)  {  fail  =  e.getMessage();  }	  if(!hasT)    {    fail    =    e.getMessage();    }    	non-compiled	[CE]  cannot  find  symbol  invalid	128	None	replace
1638	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  DateTimeUtils.getInstanceUTC();  }  [CE]  cannot  find  symbol  DateTimeUtils  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  DateTimeUtils.getInstanceUTC();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  DateTimeUtils.getInstanceUTC();  }	  if(e!=    null)    {    fail    =    e;    }    if(e    >>    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	56	None	replace
1639	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  DateTimeUtils.getInstance();  }  [CE]  cannot  find  symbol  DateTimeUtils  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  DateTimeUtils.getInstance();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  DateTimeUtils.getInstance();  }	  if(e!=    null)    {    fail    =    e;    }    if(e    >>    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  DateTimeUtils	56	None	replace
1640	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  :  e;  [CE]  <identifier>  expected  [FE]        IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  :  e;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwables.throw  new  IllegalArgumentException( " ")  :  e;	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
1641	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	111	None	replace
1642	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( " ",  e);  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( " ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( " ",  e);	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
1643	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( ", ");  e.printStackTrace();  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( ", ");  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( ", ");  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
1644	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( " "),  e.printStackTrace();  [CE]  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( " "),  e.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( " "),  e.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    e.printStackTrace();    	non-compiled	[CE]  	137	None	replace
1645	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  pos.printStackTrace();  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  pos.printStackTrace();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( " ");  pos.printStackTrace();	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "   ");    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
1646	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date,  pos.getClass().getName());  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date,  pos.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date,  pos.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getClass().getName());    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1647	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  fail    =    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  NullPointerException  	169	1	replace
1648	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null)  {  fail  =  new  IndexOutOfBoundsException( " ");  }	  fail    =    new    IndexOutOfBoundsException(   "   ");    	compilable	  [FE]  NullPointerException  	169	1	replace
1649	[BUG]  [BUGGY]  fail  =  new  IndexOutOfBoundsException( " "));  [CE]  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  fail  =  new  IndexOutOfBoundsException( " "));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	fail  =  new  IndexOutOfBoundsException( " "));	  fail    =    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  	169	None	replace
1650	[BUG]  [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null  &&!fail.isEmpty())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null  &&!fail.isEmpty())  {  fail  =  e;  }	  if(fail!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
1651	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  if(fail!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	157	1	replace
1652	[BUG]  [BUGGY]  if(fail!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null  &&  e.getMessage()  ==  null)  {  fail  =  e;  }	  if(fail!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	157	1	replace
1653	[BUG]  [BUGGY]  if(fail!=  null  ||!fail.isEmpty())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null  ||!fail.isEmpty())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null  ||!fail.isEmpty())  {  fail  =  e;  }	  if(fail!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
1654	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }	  if(fail!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	157	1	replace
1655	[BUG]  [BUGGY]  if(fail!=  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null  &&  e.getMessage()!=  null)  {  fail  =  e;  }	  if(fail!=    null)    {    fail    =    e;    }    	compilable	  [FE]  NullPointerException  	157	1	replace
1656	[BUG]  [BUGGY]  if(fail!=  null  &&  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  [CE]  inconvertible  types  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null  &&  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null  &&  e  instanceof  IllegalArgumentException)  {  fail  =  e;  }	  if(fail!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  inconvertible  types	157	None	replace
1657	[BUG]  [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aughtExceptionHandler.throwUnquotedException( " ");	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	153	None	replace
1658	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIAE( "msg.expected.hour ",  e);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aughtExceptionHandler.throwAsIAE( "msg.expected.hour ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aughtExceptionHandler.throwAsIAE( "msg.expected.hour ",  e);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	153	None	replace
1659	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIAE( "msg.bad.hour ",  e);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aughtExceptionHandler.throwAsIAE( "msg.bad.hour ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aughtExceptionHandler.throwAsIAE( "msg.bad.hour ",  e);	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    If(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	153	None	replace
1660	[BUG]  [BUGGY]  ((  IndexOutOfBoundsException)e).fail  =  new  IndexOutOfBoundsException( " ",  pos);  [CE]  cannot  find  symbol  fail  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  ((  IndexOutOfBoundsException)e).fail  =  new  IndexOutOfBoundsException( " ",  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	((  IndexOutOfBoundsException)e).fail  =  new  IndexOutOfBoundsException( " ",  pos);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  cannot  find  symbol  fail	170	None	replace
1661	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos.getMessage());  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( " ",  pos.getMessage());  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(   "   ",    pos);    }    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
1662	[BUG]  [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }  [CE]  cannot  find  symbol  failed  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  IndexOutOfBoundsException  ||  e  instanceof  IndexOutOfBoundsException)  {  failed  =  e;  }	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e    instanceof    IndexOutOfBoundsException)    {    failed    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  failed	171	None	replace
1663	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  else  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  else  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	81	1	add
1664	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  else  if(e!=  null)  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  else  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  else  if(e!=  null)  {  fail  =  e;  }	  	compilable	  [FE]  JsonSyntaxException  	81	1	add
1665	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	81	None	add
1666	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	81	None	add
1667	[BUG]  [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    ==    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  ==  null)  {  failure  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        ==        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  ==  null)  {  failure  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	81	None	add
1668	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;	  	non-compiled	[CE]  'catch'  without  'try'	24	None	add
1669	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException(   ")   ");  [CE]  unreachable  statement  [FE]    IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException(   ")   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    throw  new  IndexOutOfBoundsException(   ")   ");	  	non-compiled	[CE]  unreachable  statement	93	None	add
1670	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  Throwable  msg  =  e.getMessage();  [CE]  incompatible  types  [FE]      IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  Throwable  msg  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    Throwable  msg  =  e.getMessage();	  	non-compiled	[CE]  incompatible  types	93	None	add
1671	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException( ",   ");  [CE]  unreachable  statement  [FE]        IndexOutOfBoundsException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  throw  new  IndexOutOfBoundsException(   "   ");  throw  new  IndexOutOfBoundsException( ",   ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	throw    new    IndexOutOfBoundsException(   "   ");    throw  new  IndexOutOfBoundsException( ",   ");	  	non-compiled	[CE]  unreachable  statement	93	None	add
1672	[BUG]  [BUGGY]  matically(e)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  matically(e)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	matically(e)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  	178	None	replace
1673	[BUG]  [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " "  +  date.getMessage());  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " "  +  date.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " "  +  date.getMessage());  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
1674	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " "  +  date.getMessage());  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " "  +  date.getMessage());  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " "  +  date.getMessage());  }	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ".getMessage());    }    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
1675	[BUG]  [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( " ");  Throwable  cause  =  e.getMessage();  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  new  IllegalArgumentException( " ");  Throwable  cause  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  new  IllegalArgumentException( " ");  Throwable  cause  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getMessage();    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	190	None	replace
1676	[BUG]  [BUGGY]  IllegalArgumentException  e  =  null;  Throwable  cause  =  e.getMessage();  [CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            IllegalArgumentException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  IllegalArgumentException  e  =  null;  Throwable  cause  =  e.getMessage();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	IllegalArgumentException  e  =  null;  Throwable  cause  =  e.getMessage();	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    e.getMessage();    	non-compiled	[CE]  variable  e  is  already  defined  in  method  parse(String,ParsePosition)	190	None	replace
1677	[BUG]  [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date,  pos.getClass().getName());  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date,  pos.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date,  pos.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getClass().getName());    e.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
1678	[BUG]  [BUGGY]  null.printStackTrace();  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [CE]  <null>  cannot  be  dereferenced  [FE]              NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  null.printStackTrace();  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	null.printStackTrace();  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.getClass().getName());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getClass().getName());    e.printStackTrace();    	non-compiled	[CE]  <null>  cannot  be  dereferenced	139	None	replace
1679	[BUG]  [BUGGY]  aught(Exception.class,  e.getMessage(),  e));  [CE]  ';'  expected  [FE]    IllegalArgumentException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aught(Exception.class,  e.getMessage(),  e));  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aught(Exception.class,  e.getMessage(),  e));	  if(e    ==    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	174	None	replace
1680	[BUG]  [BUGGY]  e.printStackTrace(horizontal,  pos);  [CE]  cannot  find  symbol  horizontal  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace(horizontal,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace(horizontal,  pos);	  e.printStackTrace(pos);    	non-compiled	[CE]  cannot  find  symbol  horizontal	180	None	replace
1681	[BUG]  [BUGGY]  parseAndClearBuffer(e,  pos);  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parseAndClearBuffer(e,  pos);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parseAndClearBuffer(e,  pos);	  e.printStackTrace(pos);    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
1682	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  failure  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	51	None	add
1683	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	51	None	add
1684	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e  >=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e  >=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	51	None	add
1685	[BUG]  [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  failed  =  e;  }  [CE]  cannot  find  symbol  failed  [FE]          JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  failed  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=        null)        {        fail        =        e;        }        if(e!=    null)    {    fail    =    e;    }    if(e!=  null)  {  fail  =  e;  }  if(e!=  null)  {  failed  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failed	51	None	add
1686	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  new  NullPointerException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Throwable  tz  =  new  NullPointerException( " ");	  throw    new    NullPointerException(   "   ");    	compilable	  [FE]  NullPointerException  	166	1	replace
1687	[BUG]  [BUGGY]  Throwable  tz  =  new  NullPointerException( " ");  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  new  NullPointerException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  tz  =  new  NullPointerException( " ");	  throw    new    NullPointerException(   "   ");    	compilable	  [FE]  NullPointerException  	166	1	replace
1688	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  new  NullPointerException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	Throwable  msg  =  new  NullPointerException( " ");	  throw    new    NullPointerException(   "   ");    	compilable	  [FE]  NullPointerException  	166	1	replace
1689	[BUG]  [BUGGY]  Throwable  msg  =  new  NullPointerException( " ");  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  msg  =  new  NullPointerException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable  msg  =  new  NullPointerException( " ");	  throw    new    NullPointerException(   "   ");    	compilable	  [FE]  NullPointerException  	166	1	replace
1690	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	118	1	add
1691	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [FE]  JsonSyntaxException  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	118	1	add
1692	[BUG]  [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  unreachable  statement  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  unreachable  statement	118	None	add
1693	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail!=  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  if(fail!=  null)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=    null)    {    fail    =    e;    }    if(fail!=  null)  {  failure  =  e;  }	  	non-compiled	[CE]  cannot  find  symbol  failure	156	None	add
1694	[BUG]  [BUGGY]  if(e.getMessage()  <  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  bad  operand  types  for  binary  operator  [FE]                  NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  <  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  <  null)  {  throw  new  IllegalArgumentException( " ");  }	  e.printStackTrace();    if(e.printStackTrace())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	68	None	replace
1695	[BUG]  [BUGGY]  if(e!=  null)  {  failure  =  e;  }  [CE]  cannot  find  symbol  failure  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  failure  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  failure  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    if(e!=    null)    {    failure    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  failure	135	None	replace
1696	[BUG]  [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail  {  null)  {  fail  =  e;  }  [CE]  ')'  expected  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail  ==  null)  {  fail  =  e;  }  if(fail  {  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail    ==    null)    {    fail    =    e;    }    if(fail  {  null)  {  fail  =  e;  }	  	non-compiled	[CE]  ')'  expected	154	None	add
1697	[BUG]  [BUGGY]  JsonSyntaxException.throwAsIOException( " ");  [CE]  cannot  find  symbol  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException.throwAsIOException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException.throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  JsonSyntaxException	71	None	replace
1698	[BUG]  [BUGGY]  parseExceptionHandler(e, " ");  [CE]  cannot  find  symbol  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parseExceptionHandler(e, " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parseExceptionHandler(e, " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1699	[BUG]  [BUGGY]  pos.setAsIOException( " ");  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setAsIOException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1700	[BUG]  [BUGGY]  _throwAsIOException( " ");  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  _throwAsIOException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	_throwAsIOException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1701	[BUG]  [BUGGY]  assistException( " ");  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  assistException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	assistException( " ");	  aughtExceptionHandler.throwAsIOException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
1702	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e.getMessage()  ==  null)  {  e.printStackTrace();  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    	compilable	  [FE]  NullPointerException  	200	1	replace
1703	[BUG]  [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  [FE]  NullPointerException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e.getMessage()  ==  null)  {  e.printStackTrace();  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e.getMessage()  ==  null)  {  e.printStackTrace();  }	  e.printStackTrace();    if(e.getMessage()!=    null)    {    e.printStackTrace();    }    	compilable	  [FE]  NullPointerException  	200	1	replace
1704	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".);  }  [CE]  <identifier>  expected  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".);  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        e;        }        else        {        throw        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  e;  }  else  {  throw  new  IndexOutOfBoundsException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	46	None	add
1705	[BUG]  [BUGGY]  if(e!=  null)  {  fail  =  e.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null)  {  fail  =  e.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null)  {  fail  =  e.toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e.getMessage();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  incompatible  types	133	None	replace
1706	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIAE( "msg.bad.timezone ",  e);  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  aughtExceptionHandler.throwAsIAE( "msg.bad.timezone ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	aughtExceptionHandler.throwAsIAE( "msg.bad.timezone ",  e);	  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(       "       ");    }    if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    e;    }    else    {    throw    new    IndexOutOfBoundsException(   ".       ");    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	50	None	replace
1707	[BUG]  [BUGGY]  if(e!=  null  &&!e.isEmpty())  {  fail  =  JsonStringEncoder.getInstance().encodeAsString( "UTF-8 ");  }  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.isEmpty())  {  fail  =  JsonStringEncoder.getInstance().encodeAsString( "UTF-8 ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&!e.isEmpty())  {  fail  =  JsonStringEncoder.getInstance().encodeAsString( "UTF-8 ");  }	  if(e!=    null    &&!e.isEmpty())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
1708	[BUG]  [BUGGY]  if(e!=  null  &&!e.hasNext())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.hasNext())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&!e.hasNext())  {  fail  =  e;  }	  if(e!=    null    &&!e.isEmpty())    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	221	None	replace
1709	[BUG]  [BUGGY]  JsonSyntaxException.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException.throwAsUnquotedException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException.throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  JsonSyntaxException	177	None	replace
1710	[BUG]  [BUGGY]  _throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  _throwAsUnquotedException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	_throwAsUnquotedException( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
1711	[BUG]  [BUGGY]  parseExceptionHandler( " ");  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  parseExceptionHandler( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	parseExceptionHandler( " ");	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	177	None	replace
1712	[BUG]  [BUGGY]  JsonSyntaxException.throwAsUnquotedException( " ",  e);  [CE]  cannot  find  symbol  JsonSyntaxException  [FE]                  JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  JsonSyntaxException.throwAsUnquotedException( " ",  e);  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	JsonSyntaxException.throwAsUnquotedException( " ",  e);	  aughtExceptionHandler.throwAsUnquotedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  JsonSyntaxException	177	None	replace
1713	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	17	1	add
1714	[BUG]  [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(     "     ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException(     "     ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e        instanceof        IndexOutOfBoundsException)        {        fail        =        new        IndexOutOfBoundsException(       "       ");        }        if(e    instanceof    IndexOutOfBoundsException)    {    fail    =    new    IndexOutOfBoundsException(       "       ");    }    if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( ".   ");  }  if(e  instanceof  IndexOutOfBoundsException)  {  fail  =  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	17	1	add
1715	[BUG]  [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "timezoneIndicator  is  not  implemented. ");  [CE]  cannot  find  symbol  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  MutableFormatException  e  =  new  MutableFormatException( "timezoneIndicator  is  not  implemented. ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	MutableFormatException  e  =  new  MutableFormatException( "timezoneIndicator  is  not  implemented. ");	  if(e    ==    null)    {    fail    =    e;    }    if(e!=    null)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
1716	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
1717	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
1718	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
1719	[BUG]  [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException(   "   ");  }  e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IndexOutOfBoundsException(   "   ");    }    e.printStackTrace();  if(e!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IndexOutOfBoundsException( "... ");  }	  	compilable	  [FE]  JsonSyntaxException  	64	1	add
1720	[BUG]  [BUGGY]  pos.setIndex(parseStartOffset);  return  calendar.getTime();  [CE]  cannot  find  symbol  parseStartOffset  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  pos.setIndex(parseStartOffset);  return  calendar.getTime();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	pos.setIndex(parseStartOffset);  return  calendar.getTime();	          pos.setIndex(offset);    return    calendar.getTime();    	non-compiled	[CE]  cannot  find  symbol  parseStartOffset	1	None	replace
1721	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "undefined "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null  &&!e.getMessage().equals( "undefined "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
1722	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "undefined "))  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "undefined "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&!e.getMessage().equals( "undefined "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
1723	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "Number "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(e!=  null  &&!e.getMessage().equals( "Number "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
1724	[BUG]  [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "Number "))  {  fail  =  e;  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e!=  null  &&!e.getMessage().equals( "Number "))  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e!=  null  &&!e.getMessage().equals( "Number "))  {  fail  =  e;  }	  if(e!=    null    &&!e.getMessage().equals(   "   "))    {    fail    =    e;    }    	compilable	  [FE]  JsonSyntaxException  	218	1	replace
1725	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  char  tz  =  e.getCause();  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]    NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  char  tz  =  e.getCause();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    char  tz  =  e.getCause();	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
1726	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  throwable  tz  =  e.getCause();  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  throwable  tz  =  e.getCause();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    throwable  tz  =  e.getCause();	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
1727	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Dayable  tz  =  e.getCause();  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Dayable  tz  =  e.getCause();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Dayable  tz  =  e.getCause();	  	non-compiled	[CE]  cannot  find  symbol	95	None	add
1728	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  E.getCause();  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]          NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  Throwable  tz  =  E.getCause();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    Throwable  tz  =  E.getCause();	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
1729	[BUG]  [BUGGY]  Throwable  tz  =  e.getCause();  String  tz  =  e.getCause();  [CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)  [FE]            NullPointerException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  Throwable  tz  =  e.getCause();  String  tz  =  e.getCause();  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	Throwable    tz    =    e.getCause();    String  tz  =  e.getCause();	  	non-compiled	[CE]  variable  tz  is  already  defined  in  method  parse(String,ParsePosition)	95	None	add
1730	[BUG]  [BUGGY]  if(e  ==  null  ||!hasTimeZone())  {  fail  =  e;  }  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  ||!hasTimeZone())  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  ||!hasTimeZone())  {  fail  =  e;  }	  if(e    ==    null    ||!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol	206	None	replace
1731	[BUG]  [BUGGY]  if(e  ==  null  ||!hasTimezoneIndicator)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasTimezoneIndicator  [FE]          NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  ||!hasTimezoneIndicator)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  ||!hasTimezoneIndicator)  {  fail  =  e;  }	  if(e    ==    null    ||!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasTimezoneIndicator	206	None	replace
1732	[BUG]  [BUGGY]  if(e  ==  null  ||!hasDays)  {  fail  =  e;  }  [CE]  cannot  find  symbol  hasDays  [FE]            NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  ==  null  ||!hasDays)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  ==  null  ||!hasDays)  {  fail  =  e;  }	  if(e    ==    null    ||!hasT)    {    fail    =    e;    }    	non-compiled	[CE]  cannot  find  symbol  hasDays	206	None	replace
1733	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	if(fail!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    >=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	106	1	replace
1734	[BUG]  [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(fail!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(fail!=  null)  {  fail  =  e;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    >=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	106	1	replace
1735	[BUG]  [BUGGY]  if(e  instanceof  NumberFormatException)  {  if(e!=  null)  {  fail  =  e;  }  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  if(e  instanceof  NumberFormatException)  {  if(e!=  null)  {  fail  =  e;  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	if(e  instanceof  NumberFormatException)  {  if(e!=  null)  {  fail  =  e;  }	  if(e!=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(       "       ");    }    if(e    >=    null)    {    fail    =    e;    }    else    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  'catch'  without  'try'	106	None	replace
1736	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	add	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	197	1	add
1737	[BUG]  [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException(   "   ");  }  if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();        if(e.getMessage()!=    null)    {    e.printStackTrace();    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    if(e.getMessage()!=  null)  {  e.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  JsonSyntaxException  	197	1	add
1738	[BUG]  [BUGGY]  this.day  =  new  IndexOutOfBoundsException( " ");  [CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context  [FE]          JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  this.day  =  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	this.day  =  new  IndexOutOfBoundsException( " ");	  result    =    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  non-static  variable  this  cannot  be  referenced  from  a  static  context	110	None	replace
1739	[BUG]  [BUGGY]  prompt  =  new  IndexOutOfBoundsException( " ");  [CE]  cannot  find  symbol  prompt  [FE]            JsonSyntaxException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  prompt  =  new  IndexOutOfBoundsException( " ");  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	prompt  =  new  IndexOutOfBoundsException( " ");	  result    =    new    IndexOutOfBoundsException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  prompt	110	None	replace
1740	[BUG]  [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.toString());  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      calendar.set(Calendar.HOUR_OF_DAY,  hour);  calendar.set(Calendar.MINUTE,  minutes);  calendar.set(Calendar.SECOND,  seconds);  calendar.set(Calendar.MILLISECOND,  milliseconds);  pos.setIndex(offset);  return  calendar.getTime();    }  catch  (IndexOutOfBoundsException  e)  {      [BUGGY]  e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.toString());  [BUGGY]      }  catch  (NumberFormatException  e)  {  fail  =  e;  }  catch  (IllegalArgumentException  e)  {  fail  =  e;  }  String  input  =  (date  ==  null)  ?  null  :  ('     "'  +  date  +       "'     ");  String  msg  =  fail.getMessage();  if  (msg  ==  null  ||  msg.isEmpty())  {  msg  =       "(     "+fail.getClass().getName()+     ")     ";  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	262	262	1	replace	e.printStackTrace();  JsonSyntaxException  e  =  new  JsonSyntaxException( "Unable  to  parse  date: "+date.toString());	  e.printStackTrace();    JsonSyntaxException    e    =    new    JsonSyntaxException(   "Unable    to    parse    date:   "+date.getMessage());    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
