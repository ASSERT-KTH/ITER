bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  if  (!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned);  [BUGGY]  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	add	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned);	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "      +timezone.getID());  	compilable	  [FE]  JsonSyntaxException  	37	1	replace
2	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  if  (!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned);  [BUGGY]  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	replace	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned);	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "      +timezone.getID());  	compilable	  [FE]  JsonSyntaxException  	37	1	replace
3	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned.getID());  [CE]  cannot  find  symbol  [FE]      JsonSyntaxException  [CONTEXT]  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  if  (!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned.getID());  [BUGGY]  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	replace	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned.getID());	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "      +timezone.getID());  	non-compiled	[CE]  cannot  find  symbol	37	None	replace
4	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException  [CONTEXT]  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  if  (!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezone.getID()  + "  given,  resolves  to "  +timezone.getID());  [BUGGY]  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	add	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezone.getID()  + "  given,  resolves  to "  +timezone.getID());	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "      +timezone.getID());  	compilable	  [FE]  JsonSyntaxException  	37	1	replace
5	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezone.getID()  + "  given,  resolves  to "  +timezone.getID());  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException  [CONTEXT]  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  if  (!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezone.getID()  + "  given,  resolves  to "  +timezone.getID());  [BUGGY]  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	replace	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezone.getID()  + "  given,  resolves  to "  +timezone.getID());	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "      +timezone.getID());  	compilable	  [FE]  JsonSyntaxException  	37	1	replace
6	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +clean);  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException  [CONTEXT]  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  if  (!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +clean);  [BUGGY]  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	replace	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +clean);	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "      +timezone.getID());  	non-compiled	[CE]  cannot  find  symbol  clean	37	None	replace
7	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolved  to "  +cleaned.getID());  [CE]  cannot  find  symbol  [FE]            JsonSyntaxException  [CONTEXT]  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  if  (!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolved  to "  +cleaned.getID());  [BUGGY]  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	replace	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolved  to "  +cleaned.getID());	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "      +timezone.getID());  	non-compiled	[CE]  cannot  find  symbol	37	None	replace
8	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException  [CONTEXT]  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  if  (!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned.toString());  [BUGGY]  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	add	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned.toString());	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "      +timezone.getID());  	compilable	  [FE]  JsonSyntaxException  	37	1	replace
9	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned.toString());  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException  [CONTEXT]  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  if  (!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned.toString());  [BUGGY]  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	replace	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +cleaned.toString());	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "      +timezone.getID());  	compilable	  [FE]  JsonSyntaxException  	37	1	replace
10	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  if  (!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolved  to "  +cleaned);  [BUGGY]  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	add	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolved  to "  +cleaned);	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "      +timezone.getID());  	compilable	  [FE]  JsonSyntaxException  	37	1	replace
11	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolved  to "  +cleaned);  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  if  (!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolved  to "  +cleaned);  [BUGGY]  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	replace	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolved  to "  +cleaned);	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "      +timezone.getID());  	compilable	  [FE]  JsonSyntaxException  	37	1	replace
12	[BUG]  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolved  to "  +clean);  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException  [CONTEXT]  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  if  (!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolved  to "  +clean);  [BUGGY]  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	238	239	1	replace	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolved  to "  +clean);	throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "      +timezone.getID());  	non-compiled	[CE]  cannot  find  symbol  clean	37	None	replace
