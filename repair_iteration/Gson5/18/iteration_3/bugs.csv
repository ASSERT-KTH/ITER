bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(clean!=  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    >=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
2	[BUG]  [BUGGY]  if(clean  ==  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    >=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
3	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneOffset))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
4	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneOffset))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneOffset))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
5	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneOffset)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(!cleaned.equals(timezoneOffset)&&!cleaned.equals(timezoneIndicator))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
6	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneOffset)&&!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneOffset)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneOffset)&&!cleaned.equals(timezoneIndicator))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
7	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezone)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(!cleaned.equals(timezone)&&!cleaned.equals(timezoneIndicator))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
8	[BUG]  [BUGGY]  if(!cleaned.equals(timezone)&&!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezone)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezone)&&!cleaned.equals(timezoneIndicator))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
10	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	87	None	replace
11	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	87	None	replace
12	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).get  [CE]  ')'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).get	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	87	None	replace
13	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	87	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
15	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {  [CE]  'else'  without  'if'  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
16	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {  [CE]  'else'  without  'if'  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
17	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned  ==  null  ||!cleaned.equals(timezone))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezone))    {    	compilable	  [FE]  JsonSyntaxException  	36	1	replace
18	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {  [FE]  JsonSyntaxException  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cleaned.equals(timezone))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezone))    {    	compilable	  [FE]  JsonSyntaxException  	36	1	replace
19	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezone))  {  [CE]  cannot  find  symbol  clean  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezone))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  clean	36	None	replace
20	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezone))  {  [CE]  cannot  find  symbol  clean  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezone))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  clean	36	None	replace
21	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [CE]  'else'  without  'if'  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	103	None	replace
23	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  calendar  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  calendar	103	None	replace
24	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleaneeded  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	103	None	replace
25	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
26	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  [FE]                                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
27	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i)  [CE]  ')'  expected  [FE]                                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i)  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i)	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  ')'  expected	103	None	replace
28	[BUG]  [BUGGY]  if(!clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!clean.equals(timezoneId))  {	  if(clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	76	None	replace
29	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(!act.equals(timezoneId))  {	  if(clean.equals(timezoneId))    {    	compilable	  [FE]  JsonSyntaxException  	76	1	replace
30	[BUG]  [BUGGY]  if(!act.equals(timezoneId))  {  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!act.equals(timezoneId))  {	  if(clean.equals(timezoneId))    {    	compilable	  [FE]  JsonSyntaxException  	76	1	replace
31	[BUG]  [BUGGY]  if(c.equals(timezoneId))  {  [CE]  cannot  find  symbol  c  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(c.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(c.equals(timezoneId))  {	  if(clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  c	76	None	replace
32	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneId.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(timezoneId.equals(timezoneId))  {	  if(clean.equals(timezoneId))    {    	compilable	  [FE]  JsonSyntaxException  	76	1	replace
33	[BUG]  [BUGGY]  if(timezoneId.equals(timezoneId))  {  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneId.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneId.equals(timezoneId))  {	  if(clean.equals(timezoneId))    {    	compilable	  [FE]  JsonSyntaxException  	76	1	replace
34	[BUG]  [BUGGY]  if(empty.equals(timezoneId))  {  [CE]  cannot  find  symbol  empty  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(empty.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(empty.equals(timezoneId))  {	  if(clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  empty	76	None	replace
35	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
36	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
37	[BUG]  [BUGGY]  if(cleaneeded)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
38	[BUG]  [BUGGY]  if(clean  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	106	None	replace
39	[BUG]  [BUGGY]  if(clean!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	106	None	replace
40	[BUG]  [BUGGY]  if(clean  ==  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	106	None	replace
41	[BUG]  [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	106	None	replace
42	[BUG]  [BUGGY]  if(clean!=  null  &&  cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&  cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	57	None	replace
43	[BUG]  [BUGGY]  if(clean!=  null  ||  cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||  cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	57	None	replace
44	[BUG]  [BUGGY]  if(saved!=  null  &&  cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  saved  [FE]              JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(saved!=  null  &&  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(saved!=  null  &&  cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  saved	57	None	replace
45	[BUG]  [BUGGY]  if(clean!=  null  ||  cleaned.length()  ==  0)  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||  cleaned.length()  ==  0)  {	  if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  clean	54	None	replace
46	[BUG]  [BUGGY]  if(selected!=  null  ||  cleaned.length()  ==  0)  {  [CE]  cannot  find  symbol  selected  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(selected!=  null  ||  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(selected!=  null  ||  cleaned.length()  ==  0)  {	  if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  selected	54	None	replace
47	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||  cleaned.length()!=  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned  ==  null  ||  cleaned.length()!=  0)  {	  if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	54	1	replace
48	[BUG]  [BUGGY]  if(cleaned  ==  null  ||  cleaned.length()!=  0)  {  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||  cleaned.length()!=  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||  cleaned.length()!=  0)  {	  if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    	compilable	  [FE]  JsonSyntaxException  	54	1	replace
49	[BUG]  [BUGGY]  if(clean  ==  null  ||  cleaned.length()  ==  0)  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||  cleaned.length()  ==  0)  {	  if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  clean	54	None	replace
50	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    if(cleaned!=  null  ||  cleaned.length()  ==  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	53	None	add
51	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned  ==  null  ||  cleaned.length()  ==  0)  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned  ==  null  ||  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    if(cleaned  ==  null  ||  cleaned.length()  ==  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	53	None	add
52	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  If(cleaned!=  null  ||  cleaned.length()  ==  0)  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  If(cleaned!=  null  ||  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    If(cleaned!=  null  ||  cleaned.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	53	None	add
53	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned  >=  null  ||  cleaned.length()  ==  0)  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned  >=  null  ||  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    if(cleaned  >=  null  ||  cleaned.length()  ==  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	53	None	add
54	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned!=  null  ||  cleaned.length()  >=  0)  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned!=  null  ||  cleaned.length()  >=  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    if(cleaned!=  null  ||  cleaned.length()  >=  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	53	None	add
55	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned  >>  null  ||  cleaned.length()  ==  0)  {  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned  >>  null  ||  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    if(cleaned  >>  null  ||  cleaned.length()  ==  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	53	None	add
56	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned!=  null  ||  clean.length()  ==  0)  {  [CE]  'catch'  without  'try'  [FE]                JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned!=  null  ||  clean.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    if(cleaned!=  null  ||  clean.length()  ==  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	53	None	add
57	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    <    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	compilable	  [FE]  JsonSyntaxException  	67	1	replace
58	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [FE]  JsonSyntaxException  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    <    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	compilable	  [FE]  JsonSyntaxException  	67	1	replace
59	[BUG]  [BUGGY]  if(cleaneeded)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  cleaneeded  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    <    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	67	None	replace
60	[BUG]  [BUGGY]  if(cleaned  >=  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  bad  operand  types  for  binary  operator  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  >=  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  >=  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    <    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	67	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	99	None	replace
62	[BUG]  [BUGGY]  Pentru(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  '.class'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  Pentru(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	Pentru(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  '.class'  expected	99	None	replace
63	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  calendar  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  calendar	99	None	replace
64	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  '.class'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  For(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	For(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  '.class'  expected	99	None	replace
65	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleaneeded  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	99	None	replace
66	[BUG]  [BUGGY]  while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	99	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	102	None	replace
68	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	102	None	replace
69	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  '.class'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  For(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	For(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  '.class'  expected	102	None	replace
70	[BUG]  [BUGGY]  tehnicăFor(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  '.class'  expected  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  tehnicăFor(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	tehnicăFor(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  '.class'  expected	102	None	replace
71	[BUG]  [BUGGY]  if(cleaneled!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleaneled  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneled!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneled!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleaneled	102	None	replace
72	[BUG]  [BUGGY]  if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanleaned  [FE]                                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanleaned	102	None	replace
73	[BUG]  [BUGGY]  if(cleaneled!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleaneled  [FE]                                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneled!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneled!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleaneled	102	None	replace
74	[BUG]  [BUGGY]  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    If(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
75	[BUG]  [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!clean.equals(timezoneId))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    If(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
76	[BUG]  [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezoneId))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezoneId))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!cleaned.equals(timezoneId))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    If(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
77	[BUG]  [BUGGY]  if(clean!=  null)  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    If(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
78	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    If(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
79	[BUG]  [BUGGY]  If(clean!=  null  &&!clean.equals(timezoneId))  {  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(clean!=  null  &&!clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(clean!=  null  &&!clean.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    If(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
80	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneId))    {    if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	51	None	add
81	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||  cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneId))    {    if(cleaned  ==  null  ||  cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	51	None	add
82	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  If(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  If(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneId))    {    If(cleaned!=  null  ||  cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  ';'  expected	51	None	add
83	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  if(cleaned  >=  null  ||  cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  if(cleaned  >=  null  ||  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneId))    {    if(cleaned  >=  null  ||  cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	51	None	add
84	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||  clean.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||  clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneId))    {    if(cleaned!=  null  ||  clean.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	51	None	add
85	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||  cleared.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||  cleared.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneId))    {    if(cleaned!=  null  ||  cleared.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	51	None	add
86	[BUG]  [BUGGY]  if(cleaneeded!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [CE]  unclosed  string  literal  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!   "cleaned.equals(timezoneId))    {    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
87	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [CE]  unclosed  string  literal  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!   "cleaned.equals(timezoneId))    {    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
88	[BUG]  [BUGGY]  if(cleaneeded  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [CE]  unclosed  string  literal  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!   "cleaned.equals(timezoneId))    {    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
89	[BUG]  [BUGGY]  if(cleaneeded!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null  ||!cleaned.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!   "cleaned.equals(timezoneId))    {    	non-compiled	[CE]  'else'  without  'if'	82	None	replace
90	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {  [CE]  'else'  without  'if'  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezoneID))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
91	[BUG]  [BUGGY]  if(clean!=  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {  [CE]  'else'  without  'if'  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezoneID))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
92	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {  [CE]  'else'  without  'if'  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezoneID))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
93	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
94	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||  cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  ||  cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
95	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  If(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  If(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    If(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  ';'  expected	56	None	add
96	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  ||  cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  ||  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    if(cleaned  >=  null  ||  cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
97	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||  clean.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||  clean.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  ||  clean.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
98	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||  cleared.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]              JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||  cleared.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  ||  cleared.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
99	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned  >>  null  ||  cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]                JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned  >>  null  ||  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    if(cleaned  >>  null  ||  cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
100	[BUG]  [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezone))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!cleaned.equals(timezone))  {	  if(cleaned!=    null    &&!cleaned.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  clean	90	None	replace
101	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [CE]  cannot  find  symbol  timezoneOutdicator  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneOutdicator	71	None	replace
102	[BUG]  [BUGGY]  'catch'  without  'try'  [CE]  unclosed  character  literal  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  'catch'  without  'try'  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	'catch'  without  'try'	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  unclosed  character  literal	71	None	replace
103	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [CE]  cannot  find  symbol  timezoneOutdicator  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneOutdicator	71	None	replace
104	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneId)||!cleaned.equals(timezoneOutdicator))  {  [CE]  cannot  find  symbol  timezoneOutdicator  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneId)||!cleaned.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneId)||!cleaned.equals(timezoneOutdicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneOutdicator	71	None	replace
105	[BUG]  [BUGGY]  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [CE]  cannot  find  symbol  clean  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	71	None	replace
106	[BUG]  [BUGGY]  if(clean!=  null  ||!c.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!c.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!c.equals(timezoneIndicator))  {	  if(clean!=    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	44	None	replace
107	[BUG]  [BUGGY]  if(clean!=  null  ||!ctx.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!ctx.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!ctx.equals(timezoneIndicator))  {	  if(clean!=    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	44	None	replace
108	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [CE]  not  a  statement  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  not  a  statement	83	None	replace
109	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.println( "Mismatching  timezone  [CE]  unclosed  string  literal  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.println( "Mismatching  timezone  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.println( "Mismatching  timezone	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  unclosed  string  literal	83	None	replace
110	[BUG]  [BUGGY]  System.err.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  System.err.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	System.err.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
111	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori().println(clean,UneoriUneoriUneoriUneoriUneoriUneori  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori().println(clean,UneoriUneoriUneoriUneoriUneoriUneori  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori().println(clean,UneoriUneoriUneoriUneoriUneoriUneori	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  ')'  expected	83	None	replace
112	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori().println( "Mismatching  timezone  =  [CE]  unclosed  string  literal  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori().println( "Mismatching  timezone  =  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneori().println( "Mismatching  timezone  =	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  unclosed  string  literal	83	None	replace
113	[BUG]  [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.println(clean)  {  [CE]  ';'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.println(clean)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	UneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneoriUneorilogger.println(clean)  {	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  ';'  expected	83	None	replace
114	[BUG]  [BUGGY]  Parchet.getInstance().println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  Parchet.getInstance().println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	Parchet.getInstance().println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
115	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
116	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  calendar  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  calendar	15	None	replace
117	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	15	None	replace
119	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
120	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
121	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  times  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  times	15	None	replace
122	[BUG]  [BUGGY]  if(cleaneeded.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaneeded  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    If    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	29	None	replace
123	[BUG]  [BUGGY]  if(clean.equals(timezoneId)||  cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneId)||  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId)||  cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    If    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	29	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	101	None	replace
125	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleaneeded  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	101	None	replace
126	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  calendar  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  calendar	101	None	replace
127	[BUG]  [BUGGY]  if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanleaned  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanleaned	101	None	replace
128	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleaneeded  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	101	None	replace
129	[BUG]  [BUGGY]  while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	101	None	replace
130	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	116	None	add
131	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  &&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	116	None	add
132	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneIndicator))    {    If(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  ';'  expected	116	None	add
133	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneIndicator))    {    if(cleaned  >=  null  &&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	116	None	add
134	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >>  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >>  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneIndicator))    {    if(cleaned  >>  null  &&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	116	None	add
135	[BUG]  [BUGGY]  if(!clean.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!clean.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!clean.equals(timezoneIndicator))  {	  if(clean.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	47	None	replace
136	[BUG]  [BUGGY]  if(c.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  c  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(c.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(c.equals(timezoneIndicator))  {	  if(clean.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  c	47	None	replace
137	[BUG]  [BUGGY]  if(priority.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  priority  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority.equals(timezoneIndicator))  {	  if(clean.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  priority	47	None	replace
138	[BUG]  [BUGGY]  if(action.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  action  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(action.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(action.equals(timezoneIndicator))  {	  if(clean.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  action	47	None	replace
139	[BUG]  [BUGGY]  if(clean  ==  null  &&!clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  &&!clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  &&!clean.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    if(cleaned    >=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	26	None	replace
140	[BUG]  [BUGGY]  if(c.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  c  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(c.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(c.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  c	79	None	replace
141	[BUG]  [BUGGY]  if(priority.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  priority  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  priority	79	None	replace
142	[BUG]  [BUGGY]  if(ctx.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  ctx  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(ctx.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(ctx.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  ctx	79	None	replace
143	[BUG]  [BUGGY]  if(clean!=  null  &&!c.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!c.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!c.equals(timezoneIndicator))  {	  if(clean!=    null    &&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	81	None	replace
144	[BUG]  [BUGGY]  if(c!=  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  c  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(c!=  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(c!=  null  &&!cleaned.equals(timezoneIndicator))  {	  if(clean!=    null    &&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  c	81	None	replace
145	[BUG]  [BUGGY]  if(priority!=  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  priority  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority!=  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority!=  null  &&!cleaned.equals(timezoneIndicator))  {	  if(clean!=    null    &&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  priority	81	None	replace
146	[BUG]  [BUGGY]  if(clean!=  null  &&!ctx.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!ctx.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!ctx.equals(timezoneIndicator))  {	  if(clean!=    null    &&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	81	None	replace
147	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
148	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneOffset))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
149	[BUG]  [BUGGY]  if(clean!=  null  ||!act.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!act.equals(timezoneId))  {	  if(clean!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	2	None	replace
150	[BUG]  [BUGGY]  if(clean!=  null  ||!ctx.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!ctx.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!ctx.equals(timezoneId))  {	  if(clean!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	2	None	replace
151	[BUG]  [BUGGY]  if(clean!=  null  &&!c.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!c.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!c.equals(timezoneId))  {	  if(clean!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	1	None	replace
152	[BUG]  [BUGGY]  if(priority!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority!=  null  &&!cleaned.equals(timezoneId))  {	  if(clean!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priority	1	None	replace
153	[BUG]  [BUGGY]  if(clean!=  null  &&!ctx.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!ctx.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!ctx.equals(timezoneId))  {	  if(clean!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	1	None	replace
154	[BUG]  [BUGGY]  if(clean!=  null  &&!timezoneIndicator.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!timezoneIndicator.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!timezoneIndicator.equals(timezoneId))  {	  if(clean!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	1	None	replace
155	[BUG]  [BUGGY]  if(clean!=  null  &&!act.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!act.equals(timezoneId))  {	  if(clean!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	1	None	replace
156	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [CE]  'else'  without  'if'  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
157	[BUG]  [BUGGY]  if(clean!=  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [CE]  'else'  without  'if'  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
158	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(timezone!=  null  ||!timezone.equals(cleaned))  {  [CE]  'else'  without  'if'  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(timezone!=  null  ||!timezone.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(timezone!=  null  ||!timezone.equals(cleaned))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
159	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneId!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(timezoneId!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleane!=    null    &&!cleaned.equals(timezoneId))    {    	compilable	  [FE]  JsonSyntaxException  	91	1	replace
160	[BUG]  [BUGGY]  if(timezoneId!=  null  &&!cleaned.equals(timezoneId))  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneId!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneId!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleane!=    null    &&!cleaned.equals(timezoneId))    {    	compilable	  [FE]  JsonSyntaxException  	91	1	replace
161	[BUG]  [BUGGY]  if(saved!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  saved  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(saved!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(saved!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleane!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  saved	91	None	replace
162	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	107	None	add
163	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	107	None	add
164	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    If(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  ';'  expected	107	None	add
165	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned  >=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	107	None	add
166	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >>  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >>  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned  >>  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	107	None	add
167	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezoneIndicator))  {  [CE]  'else'  without  'if'  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  if  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
168	[BUG]  [BUGGY]  if(clean.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneIndicator))  {  [CE]  'else'  without  'if'  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
169	[BUG]  [BUGGY]  if(clean!=  null  &&  cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&  cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	52	None	replace
170	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  if(!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  if(!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  if(!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  unclosed  string  literal	72	None	replace
171	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if(!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  if(!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  if(!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  unclosed  string  literal	72	None	replace
172	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  unclosed  string  literal	72	None	replace
173	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  timezoneID  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneID	30	None	replace
174	[BUG]  [BUGGY]  if(clean  ==  null  &&!c.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  &&!c.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  &&!c.equals(timezoneId))  {	  if(clean    ==    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	49	None	replace
175	[BUG]  [BUGGY]  if(priority  ==  null  &&!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority  ==  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority  ==  null  &&!cleaned.equals(timezoneId))  {	  if(clean    ==    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priority	49	None	replace
176	[BUG]  [BUGGY]  if(clean  ==  null  &&!ctx.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  &&!ctx.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  &&!ctx.equals(timezoneId))  {	  if(clean    ==    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	49	None	replace
177	[BUG]  [BUGGY]  if(private!=  null)  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(private!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(private!=  null)  {	  if(cleaneeded!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
178	[BUG]  [BUGGY]  if(nettoyaged!=  null)  {  [CE]  cannot  find  symbol  nettoyaged  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(nettoyaged!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(nettoyaged!=  null)  {	  if(cleaneeded!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  nettoyaged	92	None	replace
179	[BUG]  [BUGGY]  if(priorated!=  null)  {  [CE]  cannot  find  symbol  priorated  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priorated!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priorated!=  null)  {	  if(cleaneeded!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  priorated	92	None	replace
180	[BUG]  [BUGGY]  if(priority!=  null)  {  [CE]  cannot  find  symbol  priority  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority!=  null)  {	  if(cleaneeded!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	92	None	replace
181	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
182	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  calendar  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  calendar	12	None	replace
183	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezone.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezone.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezone.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
184	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  char  cannot  be  dereferenced  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  char  cannot  be  dereferenced	12	None	replace
185	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  period  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  period	12	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	12	None	replace
187	[BUG]  [BUGGY]  while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	12	None	replace
188	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.  [CE]  <identifier>  expected  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  <identifier>  expected	98	None	replace
189	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get  [CE]  ')'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  ')'  expected	98	None	replace
190	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.  [CE]  <identifier>  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  <identifier>  expected	98	None	replace
191	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  ')'  expected	98	None	replace
192	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
193	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
194	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.  [CE]  <identifier>  expected  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  <identifier>  expected	98	None	replace
195	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  If  (!cleaned.equals(timezone))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  If  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleaned.equals(timezone))  {  If  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    If    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  ';'  expected	73	None	replace
196	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  {  [CE]  'else'  without  'if'  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    If    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
197	[BUG]  [BUGGY]  if(cleaned!=  null)  {  If  (!cleaned.equals(timezone))  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  If  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  If  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    If    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  ';'  expected	73	None	replace
198	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  if  (!cleaned.equals(timezone))  {  [CE]  'else'  without  'if'  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  if  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  if  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    If    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
199	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneId))  {  If  (!cleaned.equals(timezone))  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneId))  {  If  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneId))  {  If  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    If    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  ';'  expected	73	None	replace
200	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  if  (!cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezone))    {    If    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
201	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezone))    {    if(cleaned!=  null  ||!cleaned.equals(timezone))  {	  	non-compiled	[CE]  'catch'  without  'try'	10	None	add
202	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  if(cleaned  ==  null  ||!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezone))    {    if(cleaned  ==  null  ||!cleaned.equals(timezone))  {	  	non-compiled	[CE]  'catch'  without  'try'	10	None	add
203	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  If(cleaned!=  null  ||!cleaned.equals(timezone))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  If(cleaned!=  null  ||!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezone))    {    If(cleaned!=  null  ||!cleaned.equals(timezone))  {	  	non-compiled	[CE]  ';'  expected	10	None	add
204	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  if(cleaned  >=  null  ||!cleaned.equals(timezone))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  if(cleaned  >=  null  ||!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezone))    {    if(cleaned  >=  null  ||!cleaned.equals(timezone))  {	  	non-compiled	[CE]  'catch'  without  'try'	10	None	add
205	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  if(cleaned  >>  null  ||!cleaned.equals(timezone))  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezone))  {  if(cleaned  >>  null  ||!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezone))    {    if(cleaned  >>  null  ||!cleaned.equals(timezone))  {	  	non-compiled	[CE]  'catch'  without  'try'	10	None	add
206	[BUG]  [BUGGY]  if(clean.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneOutdicator))  {  [CE]  'else'  without  'if'  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneOutdicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
207	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezoneOutdicator))  {  [CE]  'else'  without  'if'  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  if  (!cleaned.equals(timezoneOutdicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
208	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	18	None	replace
209	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
210	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  calendar  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  calendar	18	None	replace
211	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	18	None	replace
212	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	18	None	replace
213	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	18	None	replace
214	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  act.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  act.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  act.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	18	None	replace
215	[BUG]  [BUGGY]  if(clean  ==  null  ||!act.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!act.equals(timezoneId))  {	  if(clean    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	69	None	replace
216	[BUG]  [BUGGY]  if(clean  ==  null  ||!ctx.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!ctx.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!ctx.equals(timezoneId))  {	  if(clean    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	69	None	replace
217	[BUG]  [BUGGY]  if(clean  ==  null  ||!c.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!c.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!c.equals(timezoneId))  {	  if(clean    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	69	None	replace
218	[BUG]  [BUGGY]  if(clean!=  null  ||  act.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||  act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||  act.equals(timezoneId))  {	  if(clean!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	55	None	replace
219	[BUG]  [BUGGY]  if(clean!=  null  ||  date.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||  date.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||  date.equals(timezoneId))  {	  if(clean!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	55	None	replace
220	[BUG]  [BUGGY]  if(clean!=  null  ||  timezoneId.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||  timezoneId.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||  timezoneId.equals(timezoneId))  {	  if(clean!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	55	None	replace
221	[BUG]  [BUGGY]  if(clean!=  null  ||!c.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!c.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!c.equals(timezoneId))  {	  if(clean!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	55	None	replace
222	[BUG]  [BUGGY]  if(priority!=  null  ||  cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority!=  null  ||  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority!=  null  ||  cleaned.equals(timezoneId))  {	  if(clean!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priority	55	None	replace
223	[BUG]  [BUGGY]  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    If(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	33	None	replace
224	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    If(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	33	None	replace
225	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    If(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	33	None	replace
226	[BUG]  [BUGGY]  if(clean  ==  null  ||!cleaned.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!cleaned.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!cleaned.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    If(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	33	None	replace
227	[BUG]  [BUGGY]  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    If(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	33	None	replace
228	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    If(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	33	None	replace
229	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	105	None	add
230	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	105	None	add
231	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    If(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  ';'  expected	105	None	add
232	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned  >=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	105	None	add
233	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  ||!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	105	None	add
234	[BUG]  [BUGGY]  if(clean!=  null)  {  If(cleaned!=  null)  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  If(cleaned!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  If(cleaned!=  null)  {	  if(cleaned!=    null)    {    If(cleaned!=    null)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
235	[BUG]  [BUGGY]  if(clean!=  null)  {  If(cleaned  ==  null)  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  If(cleaned  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  If(cleaned  ==  null)  {	  if(cleaned!=    null)    {    If(cleaned!=    null)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
236	[BUG]  [BUGGY]  if(clean  ==  null)  {  If(cleaned!=  null)  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null)  {  If(cleaned!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null)  {  If(cleaned!=  null)  {	  if(cleaned!=    null)    {    If(cleaned!=    null)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
237	[BUG]  [BUGGY]  If(cleaned!=  null)  {  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(cleaned!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(cleaned!=  null)  {	  if(cleaned!=    null)    {    If(cleaned!=    null)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
238	[BUG]  [BUGGY]  if(cleaned!=  null)  {  If(cleaned  ==  null)  {  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  If(cleaned  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  If(cleaned  ==  null)  {	  if(cleaned!=    null)    {    If(cleaned!=    null)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
239	[BUG]  [BUGGY]  if(timezoneId!=  null  &&!clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneId!=  null  &&!clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneId!=  null  &&!clean.equals(timezoneId))  {	  if(clean!=    null    &&!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	48	None	replace
240	[BUG]  [BUGGY]  if(clean!=  null  &&!action.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!action.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!action.equals(timezoneId))  {	  if(clean!=    null    &&!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	48	None	replace
241	[BUG]  [BUGGY]  if(priority!=  null  &&!clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority!=  null  &&!clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority!=  null  &&!clean.equals(timezoneId))  {	  if(clean!=    null    &&!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priority	48	None	replace
242	[BUG]  [BUGGY]  if(clean!=  null  &&!timezoneId.equals(clean))  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!timezoneId.equals(clean))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!timezoneId.equals(clean))  {	  if(clean!=    null    &&!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	48	None	replace
243	[BUG]  [BUGGY]  if(clean!=  null  &&  cleaned.length()  >  0)  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&  cleaned.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&  cleaned.length()  >  0)  {	  if(cleaned!=    null    &&    cleaned.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  clean	94	None	replace
244	[BUG]  [BUGGY]  if(clean!=  null  ||  cleaned.length()  >  0)  {  [CE]  cannot  find  symbol  clean  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||  cleaned.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||  cleaned.length()  >  0)  {	  if(cleaned!=    null    &&    cleaned.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  clean	94	None	replace
245	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  ||  cleaned.length()  >  0)  {	  if(cleaned!=    null    &&    cleaned.length()    >    0)    {    	compilable	  [FE]  JsonSyntaxException  	94	1	replace
246	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  >  0)  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||  cleaned.length()  >  0)  {	  if(cleaned!=    null    &&    cleaned.length()    >    0)    {    	compilable	  [FE]  JsonSyntaxException  	94	1	replace
247	[BUG]  [BUGGY]  if(selected!=  null  &&  cleaned.length()  >  0)  {  [CE]  cannot  find  symbol  selected  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(selected!=  null  &&  cleaned.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(selected!=  null  &&  cleaned.length()  >  0)  {	  if(cleaned!=    null    &&    cleaned.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  selected	94	None	replace
248	[BUG]  [BUGGY]  if(saved!=  null  &&  cleaned.length()  >  0)  {  [CE]  cannot  find  symbol  saved  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(saved!=  null  &&  cleaned.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(saved!=  null  &&  cleaned.length()  >  0)  {	  if(cleaned!=    null    &&    cleaned.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  saved	94	None	replace
249	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))    {    if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	7	None	add
250	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  If  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  If  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))    {    If  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  ';'  expected	7	None	add
251	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneId)&|!cleaned.equals(timezoneIndicator))  {  [CE]  illegal  start  of  expression  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneId)&|!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))    {    if  (!cleaned.equals(timezoneId)&|!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
252	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
253	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  calendar  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  calendar	14	None	replace
254	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  period  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  period	14	None	replace
255	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  char  cannot  be  dereferenced  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  char  cannot  be  dereferenced	14	None	replace
256	[BUG]  [BUGGY]  while(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  while(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	while(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	14	None	replace
257	[BUG]  [BUGGY]  while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	14	None	replace
258	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	14	None	replace
259	[BUG]  [BUGGY]  if(timezoneId!=  null  ||!clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneId!=  null  ||!clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneId!=  null  ||!clean.equals(timezoneId))  {	  if(clean!=    null    ||!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	3	None	replace
260	[BUG]  [BUGGY]  if(priority!=  null  ||!clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority!=  null  ||!clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority!=  null  ||!clean.equals(timezoneId))  {	  if(clean!=    null    ||!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priority	3	None	replace
261	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	109	None	add
262	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	109	None	add
263	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  If(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    If(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  ';'  expected	109	None	add
264	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned  >=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	109	None	add
265	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >>  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  >>  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned  >>  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	109	None	add
266	[BUG]  [BUGGY]  if(clean.equals(timezoneIndicator))  {  If  (!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneIndicator))  {  If  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneIndicator))  {  If  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    If    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
267	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  If  (!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  If  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  If  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    If    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
268	[BUG]  [BUGGY]  if(cleaned!=  null)  {  If  (!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  If  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  If  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    If    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
269	[BUG]  [BUGGY]  if(clean.equals(timezoneId))  {  If  (!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneId))  {  If  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId))  {  If  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    If    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
270	[BUG]  [BUGGY]  If  (!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    If    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
271	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
272	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
273	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
274	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.  [CE]  <identifier>  expected  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  <identifier>  expected	100	None	replace
275	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
276	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get  [CE]  ')'  expected  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  ')'  expected	100	None	replace
277	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
278	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	88	None	replace
279	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  times  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  times	88	None	replace
280	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	88	None	replace
281	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  times  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  times	88	None	replace
282	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	88	None	replace
283	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	88	None	replace
284	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
285	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  times  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  times	86	None	replace
286	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
287	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
288	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  times  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  times	86	None	replace
289	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleaneeded  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	86	None	replace
290	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
291	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	17	None	replace
292	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  times  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  times	17	None	replace
293	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	17	None	replace
294	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	17	None	replace
295	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	17	None	replace
296	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	17	None	replace
297	[BUG]  [BUGGY]  if(priority  ==  null)  {  [CE]  cannot  find  symbol  priority  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority  ==  null)  {	  if(clean!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	50	None	replace
298	[BUG]  [BUGGY]  if(c!=  null)  {  [CE]  cannot  find  symbol  c  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(c!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(c!=  null)  {	  if(clean!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  c	50	None	replace
299	[BUG]  [BUGGY]  if(c  ==  null)  {  [CE]  cannot  find  symbol  c  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(c  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(c  ==  null)  {	  if(clean!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  c	50	None	replace
300	[BUG]  [BUGGY]  if(saved!=  null)  {  [CE]  cannot  find  symbol  saved  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(saved!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(saved!=  null)  {	  if(clean!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  saved	50	None	replace
301	[BUG]  [BUGGY]  if(private  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(private  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(private  ==  null)  {	  if(cleaneeded    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
302	[BUG]  [BUGGY]  if(nettoyaged  ==  null)  {  [CE]  cannot  find  symbol  nettoyaged  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(nettoyaged  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(nettoyaged  ==  null)  {	  if(cleaneeded    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  nettoyaged	95	None	replace
303	[BUG]  [BUGGY]  if(priorated  ==  null)  {  [CE]  cannot  find  symbol  priorated  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priorated  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priorated  ==  null)  {	  if(cleaneeded    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  priorated	95	None	replace
304	[BUG]  [BUGGY]  if(priority  ==  null  ||!clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority  ==  null  ||!clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority  ==  null  ||!clean.equals(timezoneId))  {	  if(clean    ==    null    ||!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priority	70	None	replace
305	[BUG]  [BUGGY]  if(timezoneId  ==  null  ||!clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneId  ==  null  ||!clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneId  ==  null  ||!clean.equals(timezoneId))  {	  if(clean    ==    null    ||!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	70	None	replace
306	[BUG]  [BUGGY]  if(clean  ==  null  ||!action.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!action.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!action.equals(timezoneId))  {	  if(clean    ==    null    ||!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	70	None	replace
307	[BUG]  [BUGGY]  if(clean  ==  null  ||!removed.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!removed.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!removed.equals(timezoneId))  {	  if(clean    ==    null    ||!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	70	None	replace
308	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezone))    {    if(cleaned!=  null  &&!cleaned.equals(timezone))  {	  	non-compiled	[CE]  'catch'  without  'try'	89	None	add
309	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  if(cleaned  ==  null  &&!cleaned.equals(timezone))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  if(cleaned  ==  null  &&!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezone))    {    if(cleaned  ==  null  &&!cleaned.equals(timezone))  {	  	non-compiled	[CE]  'catch'  without  'try'	89	None	add
310	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  If(cleaned!=  null  &&!cleaned.equals(timezone))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  If(cleaned!=  null  &&!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezone))    {    If(cleaned!=  null  &&!cleaned.equals(timezone))  {	  	non-compiled	[CE]  ';'  expected	89	None	add
311	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  if(cleaned  >=  null  &&!cleaned.equals(timezone))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  if(cleaned  >=  null  &&!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezone))    {    if(cleaned  >=  null  &&!cleaned.equals(timezone))  {	  	non-compiled	[CE]  'catch'  without  'try'	89	None	add
312	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  if(cleaned  >>  null  &&!cleaned.equals(timezone))  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  if(cleaned  >>  null  &&!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezone))    {    if(cleaned  >>  null  &&!cleaned.equals(timezone))  {	  	non-compiled	[CE]  'catch'  without  'try'	89	None	add
313	[BUG]  [BUGGY]  if(clean  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!cleaned.equals(timezoneIndicator))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	115	None	replace
314	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	111	None	add
315	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  If(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  If(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    If(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  ';'  expected	111	None	add
316	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  if(!cleaned.equals(timezoneOutdicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  if(!cleaned.equals(timezoneOutdicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    if(!cleaned.equals(timezoneOutdicator)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	111	None	add
317	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  if(!cleaned.equals(timezoneIndicator)&&! "cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  if(!cleaned.equals(timezoneIndicator)&&! "cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    if(!cleaned.equals(timezoneIndicator)&&! "cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  unclosed  string  literal	111	None	add
318	[BUG]  [BUGGY]  if(clean!=  null  &&  timezoneId.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&  timezoneId.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&  timezoneId.equals(timezoneId))  {	  if(cleanleaned!=    null    &&    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	96	None	replace
319	[BUG]  [BUGGY]  if(clean!=  null  &&  act.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&  act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&  act.equals(timezoneId))  {	  if(cleanleaned!=    null    &&    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	96	None	replace
320	[BUG]  [BUGGY]  if(clean!=  null  &&  date.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&  date.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&  date.equals(timezoneId))  {	  if(cleanleaned!=    null    &&    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	96	None	replace
321	[BUG]  [BUGGY]  if(clean!=  null  &&  item.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&  item.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&  item.equals(timezoneId))  {	  if(cleanleaned!=    null    &&    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	96	None	replace
322	[BUG]  [BUGGY]  if(priority!=  null  &&  cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority!=  null  &&  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority!=  null  &&  cleaned.equals(timezoneId))  {	  if(cleanleaned!=    null    &&    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priority	96	None	replace
323	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	108	None	replace
324	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  if  (!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  if  (!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  if  (!cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
325	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
326	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  calendar  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  calendar	13	None	replace
327	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	13	None	replace
328	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	13	None	replace
329	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	13	None	replace
330	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
331	[BUG]  [BUGGY]  while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	while(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	13	None	replace
332	[BUG]  [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	110	None	replace
333	[BUG]  [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	110	None	replace
334	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneID))  {  [CE]  'else'  without  'if'  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneID))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneID))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezoneID))    {    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
335	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneID))  {  [CE]  'else'  without  'if'  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneID))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneID))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezoneID))    {    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
336	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {  [CE]  cannot  find  symbol  timezoneID  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleaned.equals(timezoneID))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezoneID))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneID	35	None	replace
337	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  	non-compiled	[CE]  'catch'  without  'try'	5	None	add
338	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  If  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [CE]  ';'  expected  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  If  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    If  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  	non-compiled	[CE]  ';'  expected	5	None	add
339	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  if  (!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneOffset))  {  [CE]  'catch'  without  'try'  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  if  (!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    if  (!cleaned.equals(timezoneID)&&!cleaned.equals(timezoneOffset))  {	  	non-compiled	[CE]  'catch'  without  'try'	5	None	add
340	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  times  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  times	16	None	replace
341	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
342	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleaneeded  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	16	None	replace
343	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  times  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  times	16	None	replace
344	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
345	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
346	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  times  [FE]                                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  times	16	None	replace
347	[BUG]  [BUGGY]  if(clean!=  null)  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
348	[BUG]  [BUGGY]  if(empty  ==  null)  {  [CE]  cannot  find  symbol  empty  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(empty  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(empty  ==  null)  {	  if(clean    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  empty	80	None	replace
349	[BUG]  [BUGGY]  if(clean.equals(timezoneId)&&!c.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneId)&&!c.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId)&&!c.equals(timezoneIndicator))  {	  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	4	None	replace
350	[BUG]  [BUGGY]  if(!c.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  c  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!c.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!c.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  c	4	None	replace
351	[BUG]  [BUGGY]  if(timezone.equals(clean))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezone.equals(clean))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezone.equals(clean))  {	  if(clean.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  clean	77	None	replace
352	[BUG]  [BUGGY]  if(priority.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority.equals(timezoneId))  {	  if(clean.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  priority	77	None	replace
353	[BUG]  [BUGGY]  for  (!cleaned.equals(timezone))  {  [CE]  not  a  statement  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    for    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  not  a  statement	75	None	replace
354	[BUG]  [BUGGY]  for  (!cleaned.equals(timezoneId))  {  [CE]  not  a  statement  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for  (!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for  (!cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezone))    {    for    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  not  a  statement	75	None	replace
355	[BUG]  [BUGGY]  if(cleaned.equals(timezone))  {  for  (!cleaned.equals(timezone))  {  [CE]  not  a  statement  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned.equals(timezone))  {  for  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned.equals(timezone))  {  for  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    for    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  not  a  statement	75	None	replace
356	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneId))  {  for  (!cleaned.equals(timezone))  {  [CE]  not  a  statement  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneId))  {  for  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneId))  {  for  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    for    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  not  a  statement	75	None	replace
357	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	97	None	replace
358	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	97	None	replace
359	[BUG]  [BUGGY]  if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanleaned  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanleaned	97	None	replace
360	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	97	None	replace
361	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleaneeded  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	97	None	replace
362	[BUG]  [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&    cleaned.length()    >    0)    {    if(cleaned!=  null  &&  cleaned.length()  >  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	93	None	add
363	[BUG]  [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  if(cleaned  ==  null  &&  cleaned.length()  >  0)  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  if(cleaned  ==  null  &&  cleaned.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&    cleaned.length()    >    0)    {    if(cleaned  ==  null  &&  cleaned.length()  >  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	93	None	add
364	[BUG]  [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  If(cleaned!=  null  &&  cleaned.length()  >  0)  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  If(cleaned!=  null  &&  cleaned.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&    cleaned.length()    >    0)    {    If(cleaned!=  null  &&  cleaned.length()  >  0)  {	  	non-compiled	[CE]  ';'  expected	93	None	add
365	[BUG]  [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  if(cleaned  >=  null  &&  cleaned.length()  >  0)  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  if(cleaned  >=  null  &&  cleaned.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&    cleaned.length()    >    0)    {    if(cleaned  >=  null  &&  cleaned.length()  >  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	93	None	add
366	[BUG]  [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  if(cleaned  >>  null  &&  cleaned.length()  >  0)  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  if(cleaned  >>  null  &&  cleaned.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&    cleaned.length()    >    0)    {    if(cleaned  >>  null  &&  cleaned.length()  >  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	93	None	add
367	[BUG]  [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  if(cleaned  [Delete]  null  &&  cleaned.length()  >  0)  {  [CE]  ')'  expected  [FE]              JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&  cleaned.length()  >  0)  {  if(cleaned  [Delete]  null  &&  cleaned.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&    cleaned.length()    >    0)    {    if(cleaned  [Delete]  null  &&  cleaned.length()  >  0)  {	  	non-compiled	[CE]  ')'  expected	93	None	add
368	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	85	None	replace
369	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  times  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  times	85	None	replace
370	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  times  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  times	85	None	replace
371	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	85	None	replace
372	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	45	None	add
373	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	45	None	add
374	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneIndicator))    {    If(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  ';'  expected	45	None	add
375	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneIndicator))    {    if(cleaned  >=  null  ||!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	45	None	add
376	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  >>  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  >>  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneIndicator))    {    if(cleaned  >>  null  ||!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	45	None	add
377	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    If(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	60	None	replace
378	[BUG]  [BUGGY]  if(clean!=  null  ||!cleaned.equals(timezoneId))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!cleaned.equals(timezoneId))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!cleaned.equals(timezoneId))  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    If(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	60	None	replace
379	[BUG]  [BUGGY]  if(clean!=  null  ||!cleaned.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!cleaned.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!cleaned.equals(timezoneId))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    If(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	60	None	replace
380	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if  (!Cleaned.equals(timezoneIndicator))  {  [CE]  'else'  without  'if'  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  if  (!Cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  if  (!Cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!Cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
381	[BUG]  [BUGGY]  if(cleaneeded.equals(timezoneIndicator))  {  if  (!Cleaned.equals(timezoneIndicator))  {  [CE]  'else'  without  'if'  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded.equals(timezoneIndicator))  {  if  (!Cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded.equals(timezoneIndicator))  {  if  (!Cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!Cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
382	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  if  (!Cleaned.equals(timezoneIndicator))  {  [CE]  'else'  without  'if'  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  if  (!Cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  if  (!Cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!Cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
383	[BUG]  [BUGGY]  if(clean.equals(timezoneIndicator))  {  if  (!Cleaned.equals(timezoneIndicator))  {  [CE]  'else'  without  'if'  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneIndicator))  {  if  (!Cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneIndicator))  {  if  (!Cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!Cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
384	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  if  (!Cleaned.equals(timezoneIndicator))  {  [CE]  'else'  without  'if'  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  if  (!Cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  if  (!Cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!Cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
385	[BUG]  [BUGGY]  for  (!cleaned.equals(timezoneIndicator))  {  [CE]  not  a  statement  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    for    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  not  a  statement	22	None	replace
386	[BUG]  [BUGGY]  if(clean.equals(timezoneIndicator))  {  for  (!cleaned.equals(timezoneIndicator))  {  [CE]  not  a  statement  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneIndicator))  {  for  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneIndicator))  {  for  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    for    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  not  a  statement	22	None	replace
387	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for  (!cleaned.equals(timezoneIndicator))  {  [CE]  not  a  statement  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    for    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  not  a  statement	22	None	replace
388	[BUG]  [BUGGY]  For  (!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  For  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	For  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    for    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  ';'  expected	22	None	replace
389	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	114	None	add
390	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	114	None	add
391	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  If(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    If(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  ';'  expected	114	None	add
392	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    if(cleaned  >=  null  ||!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	114	None	add
393	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||! "cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]            JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||! "cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  ||! "cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  unclosed  string  literal	114	None	add
394	[BUG]  [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!clean.equals(timezoneIndicator))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	117	None	replace
395	[BUG]  [BUGGY]  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    	non-compiled	[CE]  cannot  find  symbol  clean	6	None	replace
396	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
397	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
398	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if  (!Cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  if  (!Cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  if  (!Cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezone))    {    if    (!Cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
399	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  if  (!Cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  if  (!Cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  if  (!Cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezone))    {    if    (!Cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
400	[BUG]  [BUGGY]  if(cleaneeded)  {  if  (!Cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded)  {  if  (!Cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded)  {  if  (!Cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezone))    {    if    (!Cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
401	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if  (!Cleaned.equals(timezone))  {  [CE]  'else'  without  'if'  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  if  (!Cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  if  (!Cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    if    (!Cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
402	[BUG]  [BUGGY]  if(cleaneeded.equals(timezone))  {  if  (!Cleaned.equals(timezone))  {  [CE]  'else'  without  'if'  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded.equals(timezone))  {  if  (!Cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded.equals(timezone))  {  if  (!Cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    if    (!Cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
403	[BUG]  [BUGGY]  if    (!cleaned.equals(timezone))    {    if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+     "  given,  resolves  to     "  +timezone.getID());  }  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+   "  given,  resolves  to "  +timezone.getID());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if    (!cleaned.equals(timezone))    {    if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+     "  given,  resolves  to     "  +timezone.getID());  }  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+   "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if        (!cleaned.equals(timezone))        {        if    (!cleaned.equals(timezone))    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+   "  given,  resolves  to "  +timezone.getID());  }	  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	65	None	add
404	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if    (!cleaned.equals(timezone))    {    if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+     "  given,  resolves  to     "  +timezone.getID());  }  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator: "+timezoneId+   "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if        (!cleaned.equals(timezone))        {        if    (!cleaned.equals(timezone))    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator: "+timezoneId+   "  given,  resolves  to "  +timezone.getID());  }	  	compilable	  [FE]  JsonSyntaxException  	65	1	add
405	[BUG]  [BUGGY]  if    (!cleaned.equals(timezone))    {    if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+     "  given,  resolves  to     "  +timezone.getID());  }  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator: "+timezoneId+   "  given,  resolves  to "  +timezone.getID());  }  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if    (!cleaned.equals(timezone))    {    if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+     "  given,  resolves  to     "  +timezone.getID());  }  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator: "+timezoneId+   "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if        (!cleaned.equals(timezone))        {        if    (!cleaned.equals(timezone))    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator: "+timezoneId+   "  given,  resolves  to "  +timezone.getID());  }	  	compilable	  [FE]  JsonSyntaxException  	65	1	add
406	[BUG]  [BUGGY]  if(cleanerie!=  null)  {  [CE]  cannot  find  symbol  cleanerie  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanerie!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanerie!=  null)  {	  if(cleaned!=    null)    {    if(cleaned    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleanerie	38	None	replace
407	[BUG]  [BUGGY]  if(priorated!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  priorated  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priorated!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priorated!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaneeded!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priorated	113	None	replace
408	[BUG]  [BUGGY]  if(priority!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaneeded!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priority	113	None	replace
409	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	84	None	replace
410	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  times  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  times	84	None	replace
411	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	84	None	replace
412	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	84	None	replace
413	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	84	None	replace
414	[BUG]  [BUGGY]  if(cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	68	None	replace
415	[BUG]  [BUGGY]  if(saved!=  null  &&  cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  saved  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(saved!=  null  &&  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(saved!=  null  &&  cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  saved	52	None	replace
416	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||  cleaning.equals(timezoneIndicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||  cleaning.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  ||  cleaning.equals(timezoneIndicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	56	None	add
417	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
418	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.get(i),  [CE]  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.get(i),  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.get(i),	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  	100	None	replace
419	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  <identifier>  expected	100	None	replace
420	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
421	[BUG]  [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
422	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.  [CE]  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  	100	None	replace
423	[BUG]  [BUGGY]  if(cleane.equals(timezone))  {  for  (!cleaned.equals(timezone))  {  [CE]  not  a  statement  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane.equals(timezone))  {  for  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane.equals(timezone))  {  for  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    for    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  not  a  statement	75	None	replace
424	[BUG]  [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanowned  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanowned	101	None	replace
425	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	101	None	replace
426	[BUG]  [BUGGY]  if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanleaned  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanleaned	101	None	replace
427	[BUG]  [BUGGY]  if(cleanteamed!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanteamed  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanteamed!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanteamed!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanteamed	101	None	replace
428	[BUG]  [BUGGY]  if(cleaneled!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleaneled  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneled!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneled!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleaneled	101	None	replace
429	[BUG]  [BUGGY]  if(cleangesagt!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleangesagt  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleangesagt!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleangesagt!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleangesagt	101	None	replace
430	[BUG]  [BUGGY]  if(nettoyage  ==  null)  {  [CE]  cannot  find  symbol  nettoyage  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(nettoyage  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(nettoyage  ==  null)  {	  if(cleaneeded    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  nettoyage	95	None	replace
431	[BUG]  [BUGGY]  if(wrapped  ==  null)  {  [CE]  cannot  find  symbol  wrapped  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(wrapped  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(wrapped  ==  null)  {	  if(cleaneeded    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  wrapped	95	None	replace
432	[BUG]  [BUGGY]  if(clean  >=  null)  {  [CE]  cannot  find  symbol  clean  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  >=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  >=  null)  {	  if(cleaneeded    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  clean	95	None	replace
433	[BUG]  [BUGGY]  If(clean!=  null  ||!clean.equals(timezoneId))  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(clean!=  null  ||!clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(clean!=  null  ||!clean.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    If(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	60	None	replace
434	[BUG]  [BUGGY]  if(clean!=  null)  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  If(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    If(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	60	None	replace
435	[BUG]  [BUGGY]  If(clean!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(clean!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(clean!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    If(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	60	None	replace
436	[BUG]  [BUGGY]  if(cleane!=  null)  {  [CE]  cannot  find  symbol  cleane  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {	  if(cleaned!=    null)    {    if(cleaned    [Delete]    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleane	43	None	replace
437	[BUG]  [BUGGY]  if(cleanleaned!=  null)  {  [CE]  cannot  find  symbol  cleanleaned  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanleaned!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanleaned!=  null)  {	  if(cleaned!=    null)    {    if(cleaned    [Delete]    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleanleaned	43	None	replace
438	[BUG]  [BUGGY]  if(cleanmented!=  null)  {  [CE]  cannot  find  symbol  cleanmented  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanmented!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanmented!=  null)  {	  if(cleaned!=    null)    {    if(cleaned    [Delete]    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleanmented	43	None	replace
439	[BUG]  [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
440	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
441	[BUG]  [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned  ==  null  &&!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned  ==  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned  ==  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
442	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneOutdicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  ||!cleaned.equals(timezoneOutdicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	45	None	add
443	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleane  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleane	103	None	replace
444	[BUG]  [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleanowned  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleanowned	103	None	replace
445	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleane  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleane	103	None	replace
446	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleane  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleane	103	None	replace
447	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleaneeded  [FE]                                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	103	None	replace
448	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
449	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	106	None	replace
450	[BUG]  [BUGGY]  if(cleaned!=  null  &&!ctx.equals(timezoneId))  {  [CE]  cannot  find  symbol  ctx  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!ctx.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  &&!ctx.equals(timezoneId))  {	  if(clean!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  ctx	1	None	replace
451	[BUG]  [BUGGY]  if(cleaned!=  null  &&!ct.equals(timezoneId))  {  [CE]  cannot  find  symbol  ct  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!ct.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  &&!ct.equals(timezoneId))  {	  if(clean!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  ct	1	None	replace
452	[BUG]  [BUGGY]  if(clean!=  null  &&!catch.equals(timezoneId))  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!catch.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!catch.equals(timezoneId))  {	  if(clean!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
453	[BUG]  [BUGGY]  if(clean!=  null  &&!cache.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!cache.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!cache.equals(timezoneId))  {	  if(clean!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	1	None	replace
454	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	109	None	add
455	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneId.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(timezoneId.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	4	1	replace
456	[BUG]  [BUGGY]  if(timezoneId.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneId.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneId.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	4	1	replace
457	[BUG]  [BUGGY]  if(action.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  action  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(action.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(action.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  action	4	None	replace
458	[BUG]  [BUGGY]  if(clean.equals(timezoneId)&&!ctz.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneId)&&!ctz.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId)&&!ctz.equals(timezoneIndicator))  {	  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	4	None	replace
459	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i)  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i)  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i)	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  ')'  expected	86	None	replace
460	[BUG]  [BUGGY]  if(timezone!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  times  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezone!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezone!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  times	86	None	replace
461	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	86	None	replace
462	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [CE]  incomparable  types:  char  and  <null>  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	86	None	replace
463	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	86	None	replace
464	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
465	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	97	None	replace
466	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	97	None	replace
467	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	97	None	replace
468	[BUG]  [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanowned  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanowned	97	None	replace
469	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	97	None	replace
470	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	97	None	replace
471	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneId))  {  for  (!cleaned.equals(timezoneIndicator))  {  [CE]  not  a  statement  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneId))  {  for  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneId))  {  for  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    for    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  not  a  statement	22	None	replace
472	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneId))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
473	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneId))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneId))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
474	[BUG]  [BUGGY]  if(clean.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	112	None	replace
475	[BUG]  [BUGGY]  if    (!cleaned.equals(timezone))    {    if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+     "  given,  resolves  to     "  +timezone.getID());  }  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID  [CE]  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if    (!cleaned.equals(timezone))    {    if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException(   "Mismatching  time  zone  indicator:     "+timezoneId+     "  given,  resolves  to     "  +timezone.getID());  }  if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if        (!cleaned.equals(timezone))        {        if    (!cleaned.equals(timezone))    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    if  (!cleaned.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+   "  given,  resolves  to   "  +timezone.getID	  	non-compiled	[CE]  	65	None	add
476	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	84	None	replace
477	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	84	None	replace
478	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  }  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	84	None	replace
479	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  incomparable  types:  char  and  <null>  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	84	None	replace
480	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	84	None	replace
481	[BUG]  [BUGGY]  if(clean!=  null  &&!clean.equals(timezone))  {  [CE]  cannot  find  symbol  clean  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!clean.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!clean.equals(timezone))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    if(cleaned    >>    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	27	None	replace
482	[BUG]  [BUGGY]  if(cleaned!=  null  &&!ctx.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  ctx  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!ctx.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  &&!ctx.equals(timezoneIndicator))  {	  if(clean!=    null    &&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  ctx	81	None	replace
483	[BUG]  [BUGGY]  if(nettoyage!=  null)  {  [CE]  cannot  find  symbol  nettoyage  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(nettoyage!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(nettoyage!=  null)  {	  if(cleaneeded!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  nettoyage	92	None	replace
484	[BUG]  [BUGGY]  if(wrapped!=  null)  {  [CE]  cannot  find  symbol  wrapped  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(wrapped!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(wrapped!=  null)  {	  if(cleaneeded!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  wrapped	92	None	replace
485	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneIndicator))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	46	None	replace
486	[BUG]  [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneID))  {  [CE]  'else'  without  'if'  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneID))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneID))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezoneID))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
487	[BUG]  [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneID))  {  [CE]  'else'  without  'if'  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!cleaned.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneID))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!cleaned.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneID))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezoneID))    {    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
488	[BUG]  [BUGGY]  if(cleane!=  null)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
489	[BUG]  [BUGGY]  if(cleane  ==  null)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null)  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
490	[BUG]  [BUGGY]  if(cleane.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane.equals(timezone))  {  if  (!cleaned.equals(timezone))  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
491	[BUG]  [BUGGY]  if(action.equals(timezoneId))  {  [CE]  cannot  find  symbol  action  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(action.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(action.equals(timezoneId))  {	  if(clean.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  action	77	None	replace
492	[BUG]  [BUGGY]  if(nettoyage!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  nettoyage  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(nettoyage!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(nettoyage!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  nettoyage	110	None	replace
493	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	18	None	replace
494	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	18	None	replace
495	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	18	None	replace
496	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	18	None	replace
497	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	18	None	replace
498	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	18	None	replace
499	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get  [CE]  ')'  expected  [FE]                                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	18	None	replace
500	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  if  (!cleaned.equals(timezoneIndicator))  {  [CE]  'else'  without  'if'  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneIndicator!=  null)  {  if  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneIndicator!=  null)  {  if  (!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
501	[BUG]  [BUGGY]  if(priority!=  null  &&!act.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority!=  null  &&!act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority!=  null  &&!act.equals(timezoneId))  {	  if(clean!=    null    &&!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priority	48	None	replace
502	[BUG]  [BUGGY]  if(priority!=  null  &&!priority.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority!=  null  &&!priority.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority!=  null  &&!priority.equals(timezoneId))  {	  if(clean!=    null    &&!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priority	48	None	replace
503	[BUG]  [BUGGY]  if(paint!=  null  &&!act.equals(timezoneId))  {  [CE]  cannot  find  symbol  paint  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(paint!=  null  &&!act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(paint!=  null  &&!act.equals(timezoneId))  {	  if(clean!=    null    &&!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  paint	48	None	replace
504	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	15	None	replace
505	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	15	None	replace
506	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	15	None	replace
507	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	15	None	replace
508	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
509	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezone.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezone.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezone.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	15	None	replace
510	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneIndicator))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	115	None	replace
511	[BUG]  [BUGGY]  if(clean.equals(timezoneId)||  clean.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneId)||  clean.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId)||  clean.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    If    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	29	None	replace
512	[BUG]  [BUGGY]  if(clean!=  null  &&  clean.length()  >  0)  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&  clean.length()  >  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&  clean.length()  >  0)  {	  if(cleaned!=    null    &&    cleaned.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  clean	94	None	replace
513	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	99	None	replace
514	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  }  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	99	None	replace
515	[BUG]  [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanowned  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanowned	99	None	replace
516	[BUG]  [BUGGY]  if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanleaned  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanleaned	99	None	replace
517	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleaneeded  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	99	None	replace
518	[BUG]  [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  }  [CE]  ')'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	99	None	replace
519	[BUG]  [BUGGY]  if(clean!=  null  &&  cleaned.length()  ==  0)  {  [CE]  cannot  find  symbol  clean  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&  cleaned.length()  ==  0)  {	  if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  clean	54	None	replace
520	[BUG]  [BUGGY]  if(clean!=  null  ||  clean.length()  ==  0)  {  [CE]  cannot  find  symbol  clean  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||  clean.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||  clean.length()  ==  0)  {	  if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  clean	54	None	replace
521	[BUG]  [BUGGY]  if(cleane!=  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  cleane  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    <    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	67	None	replace
522	[BUG]  [BUGGY]  if(cleane  ==  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  cannot  find  symbol  cleane  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null)  {  if  (!cleaned.equals(timezone))  {  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    <    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	67	None	replace
523	[BUG]  [BUGGY]  if(cleane!=  null)  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  illegal  start  of  type  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    <    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
524	[BUG]  [BUGGY]  if(cleaneeded)  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  illegal  start  of  type  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded)  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded)  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    <    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
525	[BUG]  [BUGGY]  if(cleane.equals(timezone))  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  illegal  start  of  type  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane.equals(timezone))  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane.equals(timezone))  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    <    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
526	[BUG]  [BUGGY]  if(clean.equals(timezoneId)&&!timezoneIndicator.equals(cleaned))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneId)&&!timezoneIndicator.equals(cleaned))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId)&&!timezoneIndicator.equals(cleaned))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	72	None	replace
527	[BUG]  [BUGGY]  if(cleaneeded)  {  if(!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded)  {  if(!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded)  {  if(!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  unclosed  string  literal	72	None	replace
528	[BUG]  [BUGGY]  if(clean.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	72	None	replace
529	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneOutdicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  ||!cleaned.equals(timezoneOutdicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	114	None	add
530	[BUG]  [BUGGY]  if(cleanized!=  null)  {  [CE]  cannot  find  symbol  cleanized  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanized!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanized!=  null)  {	  if(cleaned!=    null)    {    if(cleaned    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleanized	38	None	replace
531	[BUG]  [BUGGY]  if(cleanewed!=  null)  {  [CE]  cannot  find  symbol  cleanewed  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanewed!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanewed!=  null)  {	  if(cleaned!=    null)    {    if(cleaned    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleanewed	38	None	replace
532	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [CE]  unclosed  string  literal  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!   "cleaned.equals(timezoneId))    {    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
533	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [CE]  unclosed  string  literal  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!   "cleaned.equals(timezoneId))    {    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
534	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!   "cleaned.equals(timezoneId))  {  [CE]  unclosed  string  literal  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!   "cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!   "cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!   "cleaned.equals(timezoneId))    {    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
535	[BUG]  [BUGGY]  if(cleaneeded  ==  null  ||!cleane.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [CE]  unclosed  string  literal  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded  ==  null  ||!cleane.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded  ==  null  ||!cleane.equals(timezoneId))  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!   "cleaned.equals(timezoneId))    {    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
536	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [CE]  unclosed  string  literal  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  if(cleaned  ==  null  ||!   "cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!   "cleaned.equals(timezoneId))    {    	non-compiled	[CE]  unclosed  string  literal	82	None	replace
537	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneOutdicator))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))    {    if  (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneOutdicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	7	None	add
538	[BUG]  [BUGGY]  If(clean  ==  null  ||!clean.equals(timezoneId))  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(clean  ==  null  ||!clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(clean  ==  null  ||!clean.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    If(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	33	None	replace
539	[BUG]  [BUGGY]  If(clean  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(clean  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(clean  ==  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    If(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	33	None	replace
540	[BUG]  [BUGGY]  If(clean!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(clean!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(clean!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    If(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
541	[BUG]  [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  If(cleaned  ==  null  &&!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  If(cleaned  ==  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!clean.equals(timezoneId))  {  If(cleaned  ==  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    If(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
542	[BUG]  [BUGGY]  if(cleaned  ==  null  &&!ctx.equals(timezoneId))  {  [CE]  cannot  find  symbol  ctx  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  &&!ctx.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  &&!ctx.equals(timezoneId))  {	  if(clean    ==    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  ctx	49	None	replace
543	[BUG]  [BUGGY]  if(cleaned  ==  null  &&!ct.equals(timezoneId))  {  [CE]  cannot  find  symbol  ct  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  &&!ct.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  &&!ct.equals(timezoneId))  {	  if(clean    ==    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  ct	49	None	replace
544	[BUG]  [BUGGY]  if(cleaned  ==  null  &&!ctz.equals(timezoneId))  {  [CE]  cannot  find  symbol  ctz  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  &&!ctz.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  &&!ctz.equals(timezoneId))  {	  if(clean    ==    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  ctz	49	None	replace
545	[BUG]  [BUGGY]  if(clean  ==  null  &&!catch.equals(timezoneId))  {  [CE]  illegal  start  of  expression  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  &&!catch.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  &&!catch.equals(timezoneId))  {	  if(clean    ==    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
546	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	85	None	replace
547	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  }  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	85	None	replace
548	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	85	None	replace
549	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	85	None	replace
550	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(0).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(0).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(0).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	85	None	replace
551	[BUG]  [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanowned  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanowned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanowned	102	None	replace
552	[BUG]  [BUGGY]  if(saved!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  saved  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(saved!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(saved!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  saved	102	None	replace
553	[BUG]  [BUGGY]  if(cleanEOF!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanEOF  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanEOF!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanEOF!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanEOF	102	None	replace
554	[BUG]  [BUGGY]  if(timezone!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  times  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezone!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezone!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  times	16	None	replace
555	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  incomparable  types:  char  and  <null>  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	16	None	replace
556	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	16	None	replace
557	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i)  [CE]  ')'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i)  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i)	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  ')'  expected	16	None	replace
558	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
559	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&! "cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&! "cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&! "cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  unclosed  string  literal	105	None	add
560	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [CE]  'catch'  without  'try'  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {	  	non-compiled	[CE]  'catch'  without  'try'	105	None	add
561	[BUG]  [BUGGY]  if(paint  ==  null)  {  [CE]  cannot  find  symbol  paint  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(paint  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(paint  ==  null)  {	  if(clean    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  paint	80	None	replace
562	[BUG]  [BUGGY]  if(catch  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(catch  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(catch  ==  null)  {	  if(clean    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
563	[BUG]  [BUGGY]  if(caughtException)  {  [CE]  cannot  find  symbol  caughtException  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(caughtException)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(caughtException)  {	  if(clean    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  caughtException	80	None	replace
564	[BUG]  [BUGGY]  if(clean  ==  null  ||!cache.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!cache.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!cache.equals(timezoneId))  {	  if(clean    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	69	None	replace
565	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  if  (!cleaned.equals(timezoneId)&&! "cleaned.equals(timezoneOffset))  {  [CE]  unclosed  string  literal  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  if  (!cleaned.equals(timezoneId)&&! "cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    if  (!cleaned.equals(timezoneId)&&! "cleaned.equals(timezoneOffset))  {	  	non-compiled	[CE]  unclosed  string  literal	5	None	add
566	[BUG]  [BUGGY]  if(cleane.equals(timezone))  {  If  (!cleaned.equals(timezone))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane.equals(timezone))  {  If  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane.equals(timezone))  {  If  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    If    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  ';'  expected	73	None	replace
567	[BUG]  [BUGGY]  if(clean.equals(timezone))  {  If  (!cleaned.equals(timezone))  {  [CE]  ';'  expected  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezone))  {  If  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezone))  {  If  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    If    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  ';'  expected	73	None	replace
568	[BUG]  [BUGGY]  if(cleane.equals(timezoneId))  {  If  (!cleaned.equals(timezone))  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane.equals(timezoneId))  {  If  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane.equals(timezoneId))  {  If  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    If    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  ';'  expected	73	None	replace
569	[BUG]  [BUGGY]  if(clean.equals(timezoneId))  {  If  (!cleaned.equals(timezone))  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneId))  {  If  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId))  {  If  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    If    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  ';'  expected	73	None	replace
570	[BUG]  [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  [CE]  'else'  without  'if'  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezone))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
571	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [CE]  'else'  without  'if'  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
572	[BUG]  [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneOffset))  {  [CE]  'else'  without  'if'  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!clean.equals(timezoneId))  {  if(cleaned!=  null  &&!cleaned.equals(timezoneOffset))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
573	[BUG]  [BUGGY]  if(!Cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  Cleaned  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!Cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!Cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!Cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  Cleaned	104	None	replace
574	[BUG]  [BUGGY]  if(cleaneeded)  {  if  (!Cleaned.equals(timezoneIndicator))  {  [CE]  'else'  without  'if'  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded)  {  if  (!Cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded)  {  if  (!Cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!Cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  'else'  without  'if'	104	None	replace
575	[BUG]  [BUGGY]  if(!Cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  Cleaned  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!Cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!Cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!Cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  Cleaned	104	None	replace
576	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&! "cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&! "cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&! "cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  unclosed  string  literal	107	None	add
577	[BUG]  [BUGGY]  if(timezoneId!=  null)  {  if  (!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneId!=  null)  {  if  (!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneId!=  null)  {  if  (!cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
578	[BUG]  [BUGGY]  if(clean.equals(timezoneId))  {  if  (!cleaned.equals(timezone))  {  [CE]  'else'  without  'if'  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneId))  {  if  (!cleaned.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId))  {  if  (!cleaned.equals(timezone))  {	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
579	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	14	None	replace
580	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	14	None	replace
581	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	14	None	replace
582	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	14	None	replace
583	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	14	None	replace
584	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezone.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezone.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezone.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	14	None	replace
585	[BUG]  [BUGGY]  if(clean.equals(timezoneId)&&!ctx.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean.equals(timezoneId)&&!ctx.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean.equals(timezoneId)&&!ctx.equals(timezoneIndicator))  {	  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	79	None	replace
586	[BUG]  [BUGGY]  if(ctz.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  ctz  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(ctz.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(ctz.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  ctz	79	None	replace
587	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  If(cleaned!=  null)  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  If(cleaned!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  If(cleaned!=  null)  {	  if(cleaned!=    null)    {    If(cleaned!=    null)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
588	[BUG]  [BUGGY]  If(cleaneeded!=  null)  {  [CE]  ';'  expected  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(cleaneeded!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(cleaneeded!=  null)  {	  if(cleaned!=    null)    {    If(cleaned!=    null)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
589	[BUG]  [BUGGY]  if(cleaneeded!=  null)  {  If(cleaned  ==  null)  {  [CE]  ';'  expected  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null)  {  If(cleaned  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null)  {  If(cleaned  ==  null)  {	  if(cleaned!=    null)    {    If(cleaned!=    null)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
590	[BUG]  [BUGGY]  ParseUtils.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [CE]  'try'  without  'catch'  or  'finally'  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  ParseUtils.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	ParseUtils.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
591	[BUG]  [BUGGY]  MutableFormatException.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  MutableFormatException.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	MutableFormatException.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
592	[BUG]  [BUGGY]  DeserializationException  e  =  new  DeserializationException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  DeserializationException  e  =  new  DeserializationException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	DeserializationException  e  =  new  DeserializationException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
593	[BUG]  [BUGGY]  System.err.println( "Mismatching  time  zone  indicator: "+timezoneId+ ",  given,  resolves  to "  +timezone.getID());  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  System.err.println( "Mismatching  time  zone  indicator: "+timezoneId+ ",  given,  resolves  to "  +timezone.getID());  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	System.err.println( "Mismatching  time  zone  indicator: "+timezoneId+ ",  given,  resolves  to "  +timezone.getID());	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
594	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.get(  [CE]  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.get(	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  	98	None	replace
595	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
596	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.  [CE]  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  	98	None	replace
597	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.get  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  calendar.get	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  ')'  expected	98	None	replace
598	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.  [CE]  <identifier>  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  <identifier>  expected	98	None	replace
599	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get  [CE]  ')'  expected  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  ')'  expected	98	None	replace
600	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  [CE]  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  calendar.set(Calendar.DATE,  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime();  calendar.set(Calendar.DATE,	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  	98	None	replace
601	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned!=  null  ||  cleared.length()  ==  0)  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.length()  ==  0)  {  if(cleaned!=  null  ||  cleared.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    if(cleaned!=  null  ||  cleared.length()  ==  0)  {	  	non-compiled	[CE]  'catch'  without  'try'	53	None	add
602	[BUG]  [BUGGY]  if(timezoneIndicator.equals(timezoneIndicator))  {  [CE]  char  cannot  be  dereferenced  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneIndicator.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneIndicator.equals(timezoneIndicator))  {	  if(clean.equals(timezoneIndicator))    {    	non-compiled	[CE]  char  cannot  be  dereferenced	47	None	replace
603	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!act.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(!act.equals(timezoneIndicator))  {	  if(clean.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	47	1	replace
604	[BUG]  [BUGGY]  if(!act.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!act.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!act.equals(timezoneIndicator))  {	  if(clean.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	47	1	replace
605	[BUG]  [BUGGY]  if(priority  ==  null  ||!act.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority  ==  null  ||!act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority  ==  null  ||!act.equals(timezoneId))  {	  if(clean    ==    null    ||!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priority	70	None	replace
606	[BUG]  [BUGGY]  if(catch  ==  null  ||!catch.equals(timezoneId))  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(catch  ==  null  ||!catch.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(catch  ==  null  ||!catch.equals(timezoneId))  {	  if(clean    ==    null    ||!clean.equals(timezoneId))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
607	[BUG]  [BUGGY]  if(tz  ==  null  ||!tz.equals(timezoneId))  {  [CE]  cannot  find  symbol  tz  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(tz  ==  null  ||!tz.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(tz  ==  null  ||!tz.equals(timezoneId))  {	  if(clean    ==    null    ||!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  tz	70	None	replace
608	[BUG]  [BUGGY]  if(cleanessed!=  null)  {  [CE]  cannot  find  symbol  cleanessed  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanessed!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanessed!=  null)  {	  if(cleaned!=    null)    {    if(cleaned    >=    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleanessed	40	None	replace
609	[BUG]  [BUGGY]  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [CE]  cannot  find  symbol  cleane  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	6	None	replace
610	[BUG]  [BUGGY]  if(cleane!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [CE]  cannot  find  symbol  cleane  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	6	None	replace
611	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneId!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(timezoneId!=  null)  {	  if(clean!=    null)    {    	compilable	  [FE]  JsonSyntaxException  	50	1	replace
612	[BUG]  [BUGGY]  if(timezoneId!=  null)  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneId!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneId!=  null)  {	  if(clean!=    null)    {    	compilable	  [FE]  JsonSyntaxException  	50	1	replace
613	[BUG]  [BUGGY]  if(paint!=  null)  {  [CE]  cannot  find  symbol  paint  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(paint!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(paint!=  null)  {	  if(clean!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  paint	50	None	replace
614	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	88	None	replace
615	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	88	None	replace
616	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	88	None	replace
617	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	88	None	replace
618	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime();  }  [CE]  ')'  expected  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime();  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime();  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	88	None	replace
619	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
620	[BUG]  [BUGGY]  if(clean  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!cleaned.equals(timezoneId))  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
621	[BUG]  [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!clean.equals(timezoneId))  {  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
622	[BUG]  [BUGGY]  if(clean!=  null  ||  acts.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||  acts.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||  acts.equals(timezoneId))  {	  if(clean!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	55	None	replace
623	[BUG]  [BUGGY]  if(clean!=  null  &&  clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&  clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&  clean.equals(timezoneId))  {	  if(clean!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	55	None	replace
624	[BUG]  [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||!clean.equals(timezoneId))  {  if(cleaned  >=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    >=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
625	[BUG]  [BUGGY]  if(cleanleaned!=  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [CE]  'else'  without  'if'  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanleaned!=  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanleaned!=  null)  {  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    >=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
626	[BUG]  [BUGGY]  if(acted.equals(timezoneId))  {  [CE]  cannot  find  symbol  acted  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(acted.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(acted.equals(timezoneId))  {	  if(clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  acted	76	None	replace
627	[BUG]  [BUGGY]  if(Act.equals(timezoneId))  {  [CE]  cannot  find  symbol  Act  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(Act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(Act.equals(timezoneId))  {	  if(clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  Act	76	None	replace
628	[BUG]  [BUGGY]  if(status.equals(timezoneId))  {  [CE]  cannot  find  symbol  status  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(status.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(status.equals(timezoneId))  {	  if(clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  status	76	None	replace
629	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	12	None	replace
630	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	12	None	replace
631	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	12	None	replace
632	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	12	None	replace
633	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezone.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezone.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezone.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	12	None	replace
634	[BUG]  [BUGGY]  if(cleanEOF!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleanEOF  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanEOF!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanEOF!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleanEOF	12	None	replace
635	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  this.timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  clean  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  this.timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  this.timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  clean	12	None	replace
636	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	13	None	replace
637	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	13	None	replace
638	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	13	None	replace
639	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	13	None	replace
640	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	13	None	replace
641	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	13	None	replace
642	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	87	None	replace
643	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	87	None	replace
644	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  incomparable  types:  char  and  <null>  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  incomparable  types:  char  and  <null>	17	None	replace
645	[BUG]  [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(timezoneIndicator!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	17	None	replace
646	[BUG]  [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  clean  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  clean	17	None	replace
647	[BUG]  [BUGGY]  if(clean!=  null  &&  acts.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&  acts.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&  acts.equals(timezoneId))  {	  if(cleanleaned!=    null    &&    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	96	None	replace
648	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	85	None	replace
649	[BUG]  [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	85	None	replace
650	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	85	None	replace
651	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	85	None	replace
652	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleane  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleane	15	None	replace
653	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  period  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  period	15	None	replace
654	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  ')'  expected	15	None	replace
655	[BUG]  [BUGGY]  if(cleanated  ==  null)  {  [CE]  cannot  find  symbol  cleanated  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanated  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanated  ==  null)  {	  if(clean    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleanated	80	None	replace
656	[BUG]  [BUGGY]  if(cleane  ==  null)  {  [CE]  cannot  find  symbol  cleane  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null)  {	  if(clean    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleane	80	None	replace
657	[BUG]  [BUGGY]  If(cleaned  ==  null  &&!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(cleaned  ==  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(cleaned  ==  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    If(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	25	None	replace
658	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleane.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleane  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleane.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cleane.equals(timezoneId))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    >=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	34	None	replace
659	[BUG]  [BUGGY]  if(cleaneeded!=  null  &&  cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleaneeded  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null  &&  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null  &&  cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	52	None	replace
660	[BUG]  [BUGGY]  if(cleane!=  null  &&  cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleane  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null  &&  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null  &&  cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	52	None	replace
661	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  unclosed  string  literal	72	None	replace
662	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!   "cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  unclosed  string  literal	72	None	replace
663	[BUG]  [BUGGY]  If  (!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If  (!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If  (!cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezoneIndicator))    {    If    (!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
664	[BUG]  [BUGGY]  if(priority  ==  ISO8601Utils.PRIORITY_PRIORITY  ||  cleaned!=  null)  {  [CE]  cannot  find  symbol  priority  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority  ==  ISO8601Utils.PRIORITY_PRIORITY  ||  cleaned!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority  ==  ISO8601Utils.PRIORITY_PRIORITY  ||  cleaned!=  null)  {	  if(cleaned!=    null)    {    if(cleaned!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	37	None	replace
665	[BUG]  [BUGGY]  if(priority  ==  ISO8601Utils.SHORT_PRIORITY  ||  cleaned!=  null)  {  [CE]  cannot  find  symbol  priority  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority  ==  ISO8601Utils.SHORT_PRIORITY  ||  cleaned!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority  ==  ISO8601Utils.SHORT_PRIORITY  ||  cleaned!=  null)  {	  if(cleaned!=    null)    {    if(cleaned!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	37	None	replace
666	[BUG]  [BUGGY]  if(priority  ==  ISO8601Utils.SEMI_PRIORITY  ||  cleaned!=  null)  {  [CE]  cannot  find  symbol  priority  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority  ==  ISO8601Utils.SEMI_PRIORITY  ||  cleaned!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority  ==  ISO8601Utils.SEMI_PRIORITY  ||  cleaned!=  null)  {	  if(cleaned!=    null)    {    if(cleaned!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  priority	37	None	replace
667	[BUG]  [BUGGY]  if(paint  ==  null  ||!act.equals(timezoneId))  {  [CE]  cannot  find  symbol  paint  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(paint  ==  null  ||!act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(paint  ==  null  ||!act.equals(timezoneId))  {	  if(clean    ==    null    ||!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  paint	70	None	replace
668	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  If(cleaned!=  null)  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  If(cleaned!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  If(cleaned!=  null)  {	  if(cleaned!=    null)    {    If(cleaned!=    null)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
669	[BUG]  [BUGGY]  if(cleaneeded!=  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaneeded  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null  &&!cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	46	None	replace
670	[BUG]  [BUGGY]  if(cleane!=  null  &&!cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleane  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null  &&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null  &&!cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	46	None	replace
671	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleane.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleane  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleane.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleane.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	59	None	replace
672	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.  [CE]  <identifier>  expected  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  <identifier>  expected	98	None	replace
673	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
674	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  ')'  expected	98	None	replace
675	[BUG]  [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(  [CE]  illegal  start  of  expression  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
676	[BUG]  [BUGGY]  if(clean  cleaned  ==  null)  {  [CE]  ')'  expected  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  cleaned  ==  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  cleaned  ==  null)  {	  if(cleaneeded    ==    null)    {    	non-compiled	[CE]  ')'  expected	95	None	replace
677	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned  ==  null  ||!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
678	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)||!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	8	1	replace
679	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	84	None	replace
680	[BUG]  [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	84	None	replace
681	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	84	None	replace
682	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	84	None	replace
683	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	84	None	replace
684	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	14	None	replace
685	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	14	None	replace
686	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	14	None	replace
687	[BUG]  [BUGGY]  if(saved!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  saved  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(saved!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(saved!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  saved	99	None	replace
688	[BUG]  [BUGGY]  if(cleanedom!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanedom  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanedom!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanedom!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanedom	99	None	replace
689	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
690	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  period  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  period	99	None	replace
691	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
692	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  period  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  period	101	None	replace
693	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  char  cannot  be  dereferenced  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  char  cannot  be  dereferenced	101	None	replace
694	[BUG]  [BUGGY]  if(saved!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  saved  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(saved!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(saved!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  saved	101	None	replace
695	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  [CE]  illegal  start  of  expression  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
696	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.  [CE]  <identifier>  expected  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i).getTime());  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i,    calendar.get(i).getTime());    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(    	non-compiled	[CE]  <identifier>  expected	100	None	replace
697	[BUG]  [BUGGY]  If  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  ';'  expected  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    If    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  ';'  expected	29	None	replace
698	[BUG]  [BUGGY]  if(cleaned  ==  null  &&!cookie.equals(timezoneId))  {  [CE]  cannot  find  symbol  cookie  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  &&!cookie.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  &&!cookie.equals(timezoneId))  {	  if(clean    ==    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cookie	49	None	replace
699	[BUG]  [BUGGY]  if(cleaned  ==  null  &&!cache.equals(timezoneId))  {  [CE]  cannot  find  symbol  cache  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  &&!cache.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  &&!cache.equals(timezoneId))  {	  if(clean    ==    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cache	49	None	replace
700	[BUG]  [BUGGY]  if(cleaned  ==  null  &&!catch.equals(timezoneId))  {  [CE]  illegal  start  of  expression  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  &&!catch.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  &&!catch.equals(timezoneId))  {	  if(clean    ==    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
701	[BUG]  [BUGGY]  if(cleaned  ==  null  &&!c.equals(timezoneId))  {  [CE]  cannot  find  symbol  c  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  &&!c.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  &&!c.equals(timezoneId))  {	  if(clean    ==    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  c	49	None	replace
702	[BUG]  [BUGGY]  if(clean!=  null  ||!cache.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!cache.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!cache.equals(timezoneId))  {	  if(clean!=    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  clean	9	None	replace
703	[BUG]  [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [CE]  illegal  start  of  type  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  if  (!cleaned.equals(timezone))  <  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  }	  if    (!cleaned.equals(timezone))    {    if    (!cleaned.equals(timezone))    <    throw    new    IndexOutOfBoundsException(   "Mismatching    time    zone    indicator:       "+timezoneId+       "    given,    resolves    to       "    +timezone.getID());    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
704	[BUG]  [BUGGY]  ServiceBroker.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [CE]  'try'  without  'catch'  or  'finally'  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  ServiceBroker.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	ServiceBroker.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
705	[BUG]  [BUGGY]  MutableFormat.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  MutableFormat.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	MutableFormat.println( "Mismatching  time  zone  indicator: "+timezoneId+ "  given,  resolves  to "  +timezone.getID());	  if(clean!=    null)    {    System.err.println(   "Mismatching    time    zone    indicator:   "+timezoneId+   "    given,    resolves    to   "    +timezone.getID());    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
706	[BUG]  [BUGGY]  if(removed.equals(timezoneId))  {  [CE]  cannot  find  symbol  removed  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(removed.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(removed.equals(timezoneId))  {	  if(clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  removed	76	None	replace
707	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||! "cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [CE]  unclosed  string  literal  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  if(cleaned  ==  null  ||! "cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned    ==    null    ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if(cleaned  ==  null  ||! "cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	  	non-compiled	[CE]  unclosed  string  literal	105	None	add
708	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleane.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleane  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleane.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  &&!cleane.equals(timezoneId))  {	  if(cleaned!=    null    &&!cleaned.equals(timezoneId))    {    if(cleaned    >=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	26	None	replace
709	[BUG]  [BUGGY]  if(priority!=  null  ||  clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  priority  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(priority!=  null  ||  clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(priority!=  null  ||  clean.equals(timezoneId))  {	  if(clean!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  priority	55	None	replace
710	[BUG]  [BUGGY]  if(clean  ==  null  ||  act.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean  ==  null  ||  act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean  ==  null  ||  act.equals(timezoneId))  {	  if(clean!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	55	None	replace
711	[BUG]  [BUGGY]  if(cleanup!=  null  ||  act.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleanup  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanup!=  null  ||  act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanup!=  null  ||  act.equals(timezoneId))  {	  if(clean!=    null    ||    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleanup	55	None	replace
712	[BUG]  [BUGGY]  if(cleanleaned!=  null  &&  act.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleanleaned  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanleaned!=  null  &&  act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanleaned!=  null  &&  act.equals(timezoneId))  {	  if(cleanleaned!=    null    &&    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleanleaned	96	None	replace
713	[BUG]  [BUGGY]  if(cleanteamed!=  null  &&  cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleanteamed  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanteamed!=  null  &&  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanteamed!=  null  &&  cleaned.equals(timezoneId))  {	  if(cleanleaned!=    null    &&    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleanteamed	96	None	replace
714	[BUG]  [BUGGY]  if(cleanup!=  null  &&  cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleanup  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanup!=  null  &&  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanup!=  null  &&  cleaned.equals(timezoneId))  {	  if(cleanleaned!=    null    &&    cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleanup	96	None	replace
715	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [CE]  cannot  find  symbol  timezoneOutdicator  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOutdicator))    {    	non-compiled	[CE]  cannot  find  symbol  timezoneOutdicator	71	None	replace
716	[BUG]  [BUGGY]  if(clean!=  null  &&!cookie.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!cookie.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!cookie.equals(timezoneId))  {	  if(clean!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  clean	1	None	replace
717	[BUG]  [BUGGY]  if(clean!=  null  &&  timezoneId!=  null)  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&  timezoneId!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&  timezoneId!=  null)  {	  if(clean!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  clean	50	None	replace
718	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
719	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
720	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
721	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  &&!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))  {	  if    (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneOffset))    {    	compilable	  [FE]  JsonSyntaxException  	6	1	replace
722	[BUG]  [BUGGY]  if(cleaned!=  null  ||  clean.equals(timezoneId))  {  [CE]  cannot  find  symbol  clean  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  clean.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||  clean.equals(timezoneId))  {	  if(cleaned!=    null)    {    if(cleaned    [Delete]    null)    {    	non-compiled	[CE]  cannot  find  symbol  clean	43	None	replace
723	[BUG]  [BUGGY]  if(c.equals(timezoneId)&&!c.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  c  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(c.equals(timezoneId)&&!c.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(c.equals(timezoneId)&&!c.equals(timezoneIndicator))  {	  if(clean.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  c	4	None	replace
724	[BUG]  [BUGGY]  if(empty.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  empty  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(empty.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(empty.equals(timezoneIndicator))  {	  if(clean.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  empty	47	None	replace
725	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	18	None	replace
726	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	18	None	replace
727	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i,    i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	18	None	replace
728	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!Cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  Cleaned  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!Cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!Cleaned.equals(timezoneIndicator))  {	  if    (!cleaned.equals(timezoneIndicator))    {    if    (!Cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  Cleaned	104	None	replace
729	[BUG]  [BUGGY]  if(dot.equals(timezoneId))  {  [CE]  cannot  find  symbol  dot  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(dot.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(dot.equals(timezoneId))  {	  if(clean.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  dot	77	None	replace
730	[BUG]  [BUGGY]  if(cleane.equals(timezoneId)&&!ctz.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleane  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane.equals(timezoneId)&&!ctz.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane.equals(timezoneId)&&!ctz.equals(timezoneIndicator))  {	  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	79	None	replace
731	[BUG]  [BUGGY]  if(cleane.equals(timezoneId)&&!ctx.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleane  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane.equals(timezoneId)&&!ctx.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane.equals(timezoneId)&&!ctx.equals(timezoneIndicator))  {	  if(cleane.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	79	None	replace
732	[BUG]  [BUGGY]  if(!cleaned.equals(timezoneId))  {  for  (!cleaned.equals(timezoneId))  {  [CE]  not  a  statement  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(!cleaned.equals(timezoneId))  {  for  (!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(!cleaned.equals(timezoneId))  {  for  (!cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezone))    {    for    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  not  a  statement	75	None	replace
733	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  calendar  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  calendar	97	None	replace
734	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
735	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  period  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  period	97	None	replace
736	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	97	None	replace
737	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	97	None	replace
738	[BUG]  [BUGGY]  if(cleaned!=  null  &&!c.equals(timezoneId))  {  [CE]  cannot  find  symbol  c  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  &&!c.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  &&!c.equals(timezoneId))  {	  if(clean!=    null    &&!clean.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  c	48	None	replace
739	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleane  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleane	12	None	replace
740	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleane  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleane	12	None	replace
741	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
742	[BUG]  [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleane  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleane	16	None	replace
743	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleane  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleane	16	None	replace
744	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  times  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  times	16	None	replace
745	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleane  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleane	16	None	replace
746	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
747	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  period  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  period	103	None	replace
748	[BUG]  [BUGGY]  if(saved!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  saved  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(saved!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(saved!=  null)  {  for(int  i  =  0;  i  <  cleaned.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i));  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  saved	103	None	replace
749	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  timezoneIndicator.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
750	[BUG]  [BUGGY]  if(cleane!=  null  &&!ctx.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleane  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null  &&!ctx.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null  &&!ctx.equals(timezoneId))  {	  if(cleane!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	91	None	replace
751	[BUG]  [BUGGY]  if(cleane!=  null  &&!cache.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleane  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null  &&!cache.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null  &&!cache.equals(timezoneId))  {	  if(cleane!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	91	None	replace
752	[BUG]  [BUGGY]  if(cleane  ==  null  &&!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleane  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null  &&!cleaned.equals(timezoneId))  {	  if(cleane!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	91	None	replace
753	[BUG]  [BUGGY]  if(cleane!=  null  &&!cookie.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleane  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null  &&!cookie.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null  &&!cookie.equals(timezoneId))  {	  if(cleane!=    null    &&!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	91	None	replace
754	[BUG]  [BUGGY]  if(cleaneeded!=  null  &&  cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleaneeded  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null  &&  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null  &&  cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	57	None	replace
755	[BUG]  [BUGGY]  if(cleanleaned!=  null  &&  cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleanleaned  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanleaned!=  null  &&  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanleaned!=  null  &&  cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleanleaned	57	None	replace
756	[BUG]  [BUGGY]  if(cleane!=  null  &&  cleaned.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  cleane  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null  &&  cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null  &&  cleaned.equals(timezoneIndicator))  {	  if(cleaned!=    null    ||    cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	57	None	replace
757	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  calendar  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  calendar	102	None	replace
758	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	102	None	replace
759	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  date.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
760	[BUG]  [BUGGY]  if(cleanedom!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanedom  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanedom!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanedom!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanedom	102	None	replace
761	[BUG]  [BUGGY]  if(cleanenaps!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleanenaps  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanenaps!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanenaps!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  ++i)  {  calendar.set(Calendar.DATE,  calendar.get(i).getTime());  }	  if(cleaned!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    ++i)    {    calendar.set(Calendar.DATE,    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleanenaps	102	None	replace
762	[BUG]  [BUGGY]  if(cleaned!=  null)  {  If  (!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  If  (!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  If  (!cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezone))    {    If    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  ';'  expected	73	None	replace
763	[BUG]  [BUGGY]  if(cleaned  ==  null)  {  If  (!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null)  {  If  (!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null)  {  If  (!cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezone))    {    If    (!cleaned.equals(timezone))    {    	non-compiled	[CE]  ';'  expected	73	None	replace
764	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	87	None	replace
765	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime  [CE]  ')'  expected  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	87	None	replace
766	[BUG]  [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	87	None	replace
767	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	87	None	replace
768	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  times  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  times	87	None	replace
769	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).get  [CE]  ')'  expected  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).get  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i).get	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	87	None	replace
770	[BUG]  [BUGGY]  if(clean!=  null  &&!cookie.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!cookie.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!cookie.equals(timezoneIndicator))  {	  if(clean!=    null    &&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	81	None	replace
771	[BUG]  [BUGGY]  if(clean!=  null  &&!cache.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!cache.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!cache.equals(timezoneIndicator))  {	  if(clean!=    null    &&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	81	None	replace
772	[BUG]  [BUGGY]  if(clean!=  null  &&!catch.equals(timezoneIndicator))  {  [CE]  illegal  start  of  expression  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  &&!catch.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  &&!catch.equals(timezoneIndicator))  {	  if(clean!=    null    &&!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
773	[BUG]  [BUGGY]  If(cleaned!=  null  &&  cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [CE]  ';'  expected  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  If(cleaned!=  null  &&  cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	If(cleaned!=  null  &&  cleaned!=  null  &&!cleaned.equals(timezoneId))  {	  if(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    If(cleaned!=    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  ';'  expected	60	None	replace
774	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!Cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  Cleaned  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!Cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!Cleaned.equals(timezoneId))  {	  if    (!cleaned.equals(timezone))    {    if    (!Cleaned.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  Cleaned	74	None	replace
775	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleane  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleane	86	None	replace
776	[BUG]  [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleane  [FE]                        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleane	86	None	replace
777	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [CE]  cannot  find  symbol  cleane  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(i));  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  cleane	86	None	replace
778	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(  [CE]  illegal  start  of  expression  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.MILLISECOND,  calendar.get(i),  calendar.get(	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.MILLISECOND,    calendar.get(i),    calendar.get(i));    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
779	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleane.equals(timezone))  {  [CE]  cannot  find  symbol  cleane  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleane.equals(timezone))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cleane.equals(timezone))  {	  if(cleaned    ==    null    ||!cleaned.equals(timezoneId))    {    if(cleaned    ==    null    ||!cleaned.equals(timezone))    {    	non-compiled	[CE]  cannot  find  symbol  cleane	36	None	replace
780	[BUG]  [BUGGY]  if(cleanpumped!=  null)  {  [CE]  cannot  find  symbol  cleanpumped  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanpumped!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanpumped!=  null)  {	  if(cleaneeded!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleanpumped	92	None	replace
781	[BUG]  [BUGGY]  if(cleanură!=  null)  {  [CE]  cannot  find  symbol  cleanur  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanură!=  null)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanură!=  null)  {	  if(cleaneeded!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  cleanur	92	None	replace
782	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	17	None	replace
783	[BUG]  [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	17	None	replace
784	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [CE]  ')'  expected  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  ++i)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime()	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    ++i)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  ')'  expected	17	None	replace
785	[BUG]  [BUGGY]  if(cleane!=  null  &&  cleaned.length()  ==  0)  {  [CE]  cannot  find  symbol  cleane  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null  &&  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null  &&  cleaned.length()  ==  0)  {	  if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  cleane	54	None	replace
786	[BUG]  [BUGGY]  if(cleanleaned!=  null  &&  cleaned.length()  ==  0)  {  [CE]  cannot  find  symbol  cleanleaned  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleanleaned!=  null  &&  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleanleaned!=  null  &&  cleaned.length()  ==  0)  {	  if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  cleanleaned	54	None	replace
787	[BUG]  [BUGGY]  if(cleane  ==  null  ||  cleaned.length()  ==  0)  {  [CE]  cannot  find  symbol  cleane  [FE]        JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null  ||  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null  ||  cleaned.length()  ==  0)  {	  if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  cleane	54	None	replace
788	[BUG]  [BUGGY]  if(cleaneeded!=  null  &&  cleaned.length()  ==  0)  {  [CE]  cannot  find  symbol  cleaneeded  [FE]          JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaneeded!=  null  &&  cleaned.length()  ==  0)  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaneeded!=  null  &&  cleaned.length()  ==  0)  {	  if(cleaned!=    null    ||    cleaned.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  cleaneeded	54	None	replace
789	[BUG]  [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  if(cleaned  >>  null  ||  cleaned.equals(timezoneId))  {  [CE]  'catch'  without  'try'  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||  cleaned.equals(timezoneId))  {  if(cleaned  >>  null  ||  cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=    null    ||    cleaned.equals(timezoneId))    {    if(cleaned  >>  null  ||  cleaned.equals(timezoneId))  {	  	non-compiled	[CE]  'catch'  without  'try'	51	None	add
790	[BUG]  [BUGGY]  if(clean!=  null  ||!cache.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!cache.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!cache.equals(timezoneIndicator))  {	  if(clean!=    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	44	None	replace
791	[BUG]  [BUGGY]  if(clean!=  null  ||!cookie.equals(timezoneIndicator))  {  [CE]  cannot  find  symbol  clean  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(clean!=  null  ||!cookie.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(clean!=  null  ||!cookie.equals(timezoneIndicator))  {	  if(clean!=    null    ||!cleaned.equals(timezoneIndicator))    {    	non-compiled	[CE]  cannot  find  symbol  clean	44	None	replace
792	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	88	None	replace
793	[BUG]  [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane  ==  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	88	None	replace
794	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	88	None	replace
795	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	88	None	replace
796	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  times  [FE]                                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  times.size();  i++)  {  calendar  =  Calendar.getInstance(i);  calendar.set(calendar,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    times.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(calendar,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  times	88	None	replace
797	[BUG]  [BUGGY]  if(cleaning  ==  null  ||!cleaned.equals(timezoneId))  {  [CE]  cannot  find  symbol  cleaning  [FE]        JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaning  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaning  ==  null  ||!cleaned.equals(timezoneId))  {	  if(clean    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cleaning	69	None	replace
798	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!ctx.equals(timezoneId))  {  [CE]  cannot  find  symbol  ctx  [FE]          JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!ctx.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!ctx.equals(timezoneId))  {	  if(clean    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  ctx	69	None	replace
799	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cache.equals(timezoneId))  {  [CE]  cannot  find  symbol  cache  [FE]            JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cache.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cache.equals(timezoneId))  {	  if(clean    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cache	69	None	replace
800	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cookie.equals(timezoneId))  {  [CE]  cannot  find  symbol  cookie  [FE]              JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cookie.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cookie.equals(timezoneId))  {	  if(clean    ==    null    ||!cleaned.equals(timezoneId))    {    	non-compiled	[CE]  cannot  find  symbol  cookie	69	None	replace
801	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned  ==  null  ||!act.equals(timezoneId))  {	  if(clean    ==    null    ||!cleaned.equals(timezoneId))    {    	compilable	  [FE]  JsonSyntaxException  	69	1	replace
802	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!act.equals(timezoneId))  {  [FE]  JsonSyntaxException  [FE]                JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!act.equals(timezoneId))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!act.equals(timezoneId))  {	  if(clean    ==    null    ||!cleaned.equals(timezoneId))    {    	compilable	  [FE]  JsonSyntaxException  	69	1	replace
803	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                  JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  date.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	13	None	replace
804	[BUG]  [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  cleane  [FE]                    JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleane!=  null)  {  for(int  i  =  0;  i  <  calendar.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  cleane	13	None	replace
805	[BUG]  [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [CE]  cannot  find  symbol  period  [FE]                      JsonSyntaxException      [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {  for(int  i  =  0;  i  <  period.size();  i++)  {  Calendar  calendar  =  Calendar.getInstance(i);  calendar.set(Calendar.DATE,  calendar.get(i),  calendar.get(i).getTime());  }	  if(clean!=    null)    {    for(int    i    =    0;    i    <    cleaned.size();    i++)    {    Calendar    calendar    =    Calendar.getInstance(i);    calendar.set(Calendar.DATE,    calendar.get(i),    calendar.get(i).getTime());    }    	non-compiled	[CE]  cannot  find  symbol  period	13	None	replace
806	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
807	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
808	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
809	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException    [CONTEXT]      timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace(     ":     ",       "     ");      [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]      throw  new  IndexOutOfBoundsException(     "Mismatching  time  zone  indicator:       "+timezoneId+     "  given,  resolves  to       "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))  {	  if(!cleaned.equals(timezoneIndicator)&&!cleaned.equals(timezoneIndicator))    {    	compilable	  [FE]  JsonSyntaxException  	112	1	replace
