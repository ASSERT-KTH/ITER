bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
2	[BUG]  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  ||!cleaned.equals(timezoneId))  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
3	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
4	[BUG]  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned  ==  null  ||!cleaned.equals(timezoneId))  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
5	[BUG]  [BUGGY]    [CE]  'try'  without  'catch'  or  'finally'  [FE]        JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]    [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	  	if  (!cleaned.equals(timezoneId))  {  	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	35	None	replace
6	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if(cleaned!=  null)  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null)  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
7	[BUG]  [BUGGY]  if(cleaned!=  null)  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if(cleaned!=  null)  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null)  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
8	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if  (!cleaned.equals(timezone))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if  (!cleaned.equals(timezone))  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
9	[BUG]  [BUGGY]  if  (!cleaned.equals(timezone))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if  (!cleaned.equals(timezone))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if  (!cleaned.equals(timezone))  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
10	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if  (!cleaned.equals(timezoneIndicator))  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
11	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]        JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if  (!cleaned.equals(timezoneIndicator))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if  (!cleaned.equals(timezoneIndicator))  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
12	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
13	[BUG]  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [FE]  JsonSyntaxException  [FE]    JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if(cleaned!=  null  &&!cleaned.equals(timezoneId))  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
14	[BUG]  [BUGGY]  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	add	if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
15	[BUG]  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [FE]  JsonSyntaxException  [FE]      JsonSyntaxException  [CONTEXT]  timezone  =  TimeZone.getTimeZone(timezoneId);  String  act  =  timezone.getID();  if  (!act.equals(timezoneId))  {      String  cleaned  =  act.replace( ": ",   " ");  [BUGGY]  if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {  [BUGGY]  throw  new  IndexOutOfBoundsException( "Mismatching  time  zone  indicator:   "+timezoneId+ "  given,  resolves  to   "  +timezone.getID());  }  }  }  [CLASS]  ISO8601Utils  [METHOD]  parse  [RETURN_TYPE]  Date  String  date  ParsePosition  pos  [VARIABLES]  TimeZone  TIMEZONE_UTC  timezone  tz  boolean  hasT  IndexOutOfBoundsException  e  Calendar  calendar  char  c  timezoneIndicator  NumberFormatException  e  String  UTC_ID  act  cleaned  date  input  msg  timezoneId  timezoneOffset  ParseException  ex  Exception  fail  int  day  endOffset  fraction  hour  milliseconds  minutes  month  offset  parseEndOffset  seconds  year  IllegalArgumentException  e  ParsePosition  pos  	projects/Gson5/gson/src/main/java/com/google/gson/internal/bind/util/ISO8601Utils.java	1.0	237	237	1	replace	if  (!cleaned.equals(timezoneId)&&!cleaned.equals(timezoneIndicator))  {	if  (!cleaned.equals(timezoneId))  {  	compilable	  [FE]  JsonSyntaxException  	35	1	replace
